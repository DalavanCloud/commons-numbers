<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml" xml:lang="en" lang="en">
<head><meta http-equiv="content-type" content="text/html; charset=UTF-8" />
<title>ChiSquaredDistributionTest xref</title>
<link type="text/css" rel="stylesheet" href="../../../../../stylesheet.css" />
</head>
<body>
<div id="overview"><a href="../../../../../../testapidocs/org/apache/commons/math3/distribution/ChiSquaredDistributionTest.html">View Javadoc</a></div><pre>
<a class="jxr_linenumber" name="L1" href="#L1">1</a>   <em class="jxr_comment">/*</em>
<a class="jxr_linenumber" name="L2" href="#L2">2</a>   <em class="jxr_comment"> * Licensed to the Apache Software Foundation (ASF) under one or more</em>
<a class="jxr_linenumber" name="L3" href="#L3">3</a>   <em class="jxr_comment"> * contributor license agreements.  See the NOTICE file distributed with</em>
<a class="jxr_linenumber" name="L4" href="#L4">4</a>   <em class="jxr_comment"> * this work for additional information regarding copyright ownership.</em>
<a class="jxr_linenumber" name="L5" href="#L5">5</a>   <em class="jxr_comment"> * The ASF licenses this file to You under the Apache License, Version 2.0</em>
<a class="jxr_linenumber" name="L6" href="#L6">6</a>   <em class="jxr_comment"> * (the "License"); you may not use this file except in compliance with</em>
<a class="jxr_linenumber" name="L7" href="#L7">7</a>   <em class="jxr_comment"> * the License.  You may obtain a copy of the License at</em>
<a class="jxr_linenumber" name="L8" href="#L8">8</a>   <em class="jxr_comment"> *</em>
<a class="jxr_linenumber" name="L9" href="#L9">9</a>   <em class="jxr_comment"> *      <a href="http://www.apache.org/licenses/LICENSE-2." target="alexandria_uri">http://www.apache.org/licenses/LICENSE-2.</a>0</em>
<a class="jxr_linenumber" name="L10" href="#L10">10</a>  <em class="jxr_comment"> *</em>
<a class="jxr_linenumber" name="L11" href="#L11">11</a>  <em class="jxr_comment"> * Unless required by applicable law or agreed to in writing, software</em>
<a class="jxr_linenumber" name="L12" href="#L12">12</a>  <em class="jxr_comment"> * distributed under the License is distributed on an "AS IS" BASIS,</em>
<a class="jxr_linenumber" name="L13" href="#L13">13</a>  <em class="jxr_comment"> * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.</em>
<a class="jxr_linenumber" name="L14" href="#L14">14</a>  <em class="jxr_comment"> * See the License for the specific language governing permissions and</em>
<a class="jxr_linenumber" name="L15" href="#L15">15</a>  <em class="jxr_comment"> * limitations under the License.</em>
<a class="jxr_linenumber" name="L16" href="#L16">16</a>  <em class="jxr_comment"> */</em>
<a class="jxr_linenumber" name="L17" href="#L17">17</a>  
<a class="jxr_linenumber" name="L18" href="#L18">18</a>  <strong class="jxr_keyword">package</strong> org.apache.commons.math3.distribution;
<a class="jxr_linenumber" name="L19" href="#L19">19</a>  
<a class="jxr_linenumber" name="L20" href="#L20">20</a>  <strong class="jxr_keyword">import</strong> org.junit.Assert;
<a class="jxr_linenumber" name="L21" href="#L21">21</a>  <strong class="jxr_keyword">import</strong> org.junit.Test;
<a class="jxr_linenumber" name="L22" href="#L22">22</a>  
<a class="jxr_linenumber" name="L23" href="#L23">23</a>  <em class="jxr_javadoccomment">/**</em>
<a class="jxr_linenumber" name="L24" href="#L24">24</a>  <em class="jxr_javadoccomment"> * Test cases for {@link ChiSquaredDistribution}.</em>
<a class="jxr_linenumber" name="L25" href="#L25">25</a>  <em class="jxr_javadoccomment"> *</em>
<a class="jxr_linenumber" name="L26" href="#L26">26</a>  <em class="jxr_javadoccomment"> * @see RealDistributionAbstractTest</em>
<a class="jxr_linenumber" name="L27" href="#L27">27</a>  <em class="jxr_javadoccomment"> */</em>
<a class="jxr_linenumber" name="L28" href="#L28">28</a>  <strong class="jxr_keyword">public</strong> <strong class="jxr_keyword">class</strong> <a href="../../../../../org/apache/commons/math3/distribution/ChiSquaredDistributionTest.html">ChiSquaredDistributionTest</a> <strong class="jxr_keyword">extends</strong> <a href="../../../../../org/apache/commons/math3/distribution/RealDistributionAbstractTest.html">RealDistributionAbstractTest</a> {
<a class="jxr_linenumber" name="L29" href="#L29">29</a>  
<a class="jxr_linenumber" name="L30" href="#L30">30</a>      <em class="jxr_comment">//-------------- Implementations for abstract methods -----------------------</em>
<a class="jxr_linenumber" name="L31" href="#L31">31</a>  
<a class="jxr_linenumber" name="L32" href="#L32">32</a>      <em class="jxr_javadoccomment">/** Creates the default continuous distribution instance to use in tests. */</em>
<a class="jxr_linenumber" name="L33" href="#L33">33</a>      @Override
<a class="jxr_linenumber" name="L34" href="#L34">34</a>      <strong class="jxr_keyword">public</strong> ChiSquaredDistribution makeDistribution() {
<a class="jxr_linenumber" name="L35" href="#L35">35</a>          <strong class="jxr_keyword">return</strong> <strong class="jxr_keyword">new</strong> ChiSquaredDistribution(5.0);
<a class="jxr_linenumber" name="L36" href="#L36">36</a>      }
<a class="jxr_linenumber" name="L37" href="#L37">37</a>  
<a class="jxr_linenumber" name="L38" href="#L38">38</a>      <em class="jxr_javadoccomment">/** Creates the default cumulative probability distribution test input values */</em>
<a class="jxr_linenumber" name="L39" href="#L39">39</a>      @Override
<a class="jxr_linenumber" name="L40" href="#L40">40</a>      <strong class="jxr_keyword">public</strong> <strong class="jxr_keyword">double</strong>[] makeCumulativeTestPoints() {
<a class="jxr_linenumber" name="L41" href="#L41">41</a>          <em class="jxr_comment">// quantiles computed using R version 2.9.2</em>
<a class="jxr_linenumber" name="L42" href="#L42">42</a>          <strong class="jxr_keyword">return</strong> <strong class="jxr_keyword">new</strong> <strong class="jxr_keyword">double</strong>[] {0.210212602629, 0.554298076728, 0.831211613487, 1.14547622606, 1.61030798696,
<a class="jxr_linenumber" name="L43" href="#L43">43</a>                  20.5150056524, 15.0862724694, 12.8325019940, 11.0704976935, 9.23635689978};
<a class="jxr_linenumber" name="L44" href="#L44">44</a>      }
<a class="jxr_linenumber" name="L45" href="#L45">45</a>  
<a class="jxr_linenumber" name="L46" href="#L46">46</a>      <em class="jxr_javadoccomment">/** Creates the default cumulative probability density test expected values */</em>
<a class="jxr_linenumber" name="L47" href="#L47">47</a>      @Override
<a class="jxr_linenumber" name="L48" href="#L48">48</a>      <strong class="jxr_keyword">public</strong> <strong class="jxr_keyword">double</strong>[] makeCumulativeTestValues() {
<a class="jxr_linenumber" name="L49" href="#L49">49</a>          <strong class="jxr_keyword">return</strong> <strong class="jxr_keyword">new</strong> <strong class="jxr_keyword">double</strong>[] {0.001, 0.01, 0.025, 0.05, 0.1, 0.999, 0.990, 0.975, 0.950, 0.900};
<a class="jxr_linenumber" name="L50" href="#L50">50</a>      }
<a class="jxr_linenumber" name="L51" href="#L51">51</a>  
<a class="jxr_linenumber" name="L52" href="#L52">52</a>      <em class="jxr_javadoccomment">/** Creates the default inverse cumulative probability test input values */</em>
<a class="jxr_linenumber" name="L53" href="#L53">53</a>      @Override
<a class="jxr_linenumber" name="L54" href="#L54">54</a>      <strong class="jxr_keyword">public</strong> <strong class="jxr_keyword">double</strong>[] makeInverseCumulativeTestPoints() {
<a class="jxr_linenumber" name="L55" href="#L55">55</a>          <strong class="jxr_keyword">return</strong> <strong class="jxr_keyword">new</strong> <strong class="jxr_keyword">double</strong>[] {0, 0.001d, 0.01d, 0.025d, 0.05d, 0.1d, 0.999d,
<a class="jxr_linenumber" name="L56" href="#L56">56</a>                  0.990d, 0.975d, 0.950d, 0.900d, 1};
<a class="jxr_linenumber" name="L57" href="#L57">57</a>      }
<a class="jxr_linenumber" name="L58" href="#L58">58</a>  
<a class="jxr_linenumber" name="L59" href="#L59">59</a>      <em class="jxr_javadoccomment">/** Creates the default inverse cumulative probability density test expected values */</em>
<a class="jxr_linenumber" name="L60" href="#L60">60</a>      @Override
<a class="jxr_linenumber" name="L61" href="#L61">61</a>      <strong class="jxr_keyword">public</strong> <strong class="jxr_keyword">double</strong>[] makeInverseCumulativeTestValues() {
<a class="jxr_linenumber" name="L62" href="#L62">62</a>          <strong class="jxr_keyword">return</strong> <strong class="jxr_keyword">new</strong> <strong class="jxr_keyword">double</strong>[] {0, 0.210212602629, 0.554298076728, 0.831211613487, 1.14547622606, 1.61030798696,
<a class="jxr_linenumber" name="L63" href="#L63">63</a>                  20.5150056524, 15.0862724694, 12.8325019940, 11.0704976935, 9.23635689978,
<a class="jxr_linenumber" name="L64" href="#L64">64</a>                  Double.POSITIVE_INFINITY};
<a class="jxr_linenumber" name="L65" href="#L65">65</a>      }
<a class="jxr_linenumber" name="L66" href="#L66">66</a>  
<a class="jxr_linenumber" name="L67" href="#L67">67</a>      <em class="jxr_javadoccomment">/** Creates the default probability density test expected values */</em>
<a class="jxr_linenumber" name="L68" href="#L68">68</a>      @Override
<a class="jxr_linenumber" name="L69" href="#L69">69</a>      <strong class="jxr_keyword">public</strong> <strong class="jxr_keyword">double</strong>[] makeDensityTestValues() {
<a class="jxr_linenumber" name="L70" href="#L70">70</a>          <strong class="jxr_keyword">return</strong> <strong class="jxr_keyword">new</strong> <strong class="jxr_keyword">double</strong>[] {0.0115379817652, 0.0415948507811, 0.0665060119842, 0.0919455953114, 0.121472591024,
<a class="jxr_linenumber" name="L71" href="#L71">71</a>                  0.000433630076361, 0.00412780610309, 0.00999340341045, 0.0193246438937, 0.0368460089216};
<a class="jxr_linenumber" name="L72" href="#L72">72</a>      }
<a class="jxr_linenumber" name="L73" href="#L73">73</a>  
<a class="jxr_linenumber" name="L74" href="#L74">74</a>   <em class="jxr_comment">// --------------------- Override tolerance  --------------</em>
<a class="jxr_linenumber" name="L75" href="#L75">75</a>      @Override
<a class="jxr_linenumber" name="L76" href="#L76">76</a>      <strong class="jxr_keyword">public</strong> <strong class="jxr_keyword">void</strong> setUp() {
<a class="jxr_linenumber" name="L77" href="#L77">77</a>          <strong class="jxr_keyword">super</strong>.setUp();
<a class="jxr_linenumber" name="L78" href="#L78">78</a>          setTolerance(1e-9);
<a class="jxr_linenumber" name="L79" href="#L79">79</a>      }
<a class="jxr_linenumber" name="L80" href="#L80">80</a>  
<a class="jxr_linenumber" name="L81" href="#L81">81</a>   <em class="jxr_comment">//---------------------------- Additional test cases -------------------------</em>
<a class="jxr_linenumber" name="L82" href="#L82">82</a>  
<a class="jxr_linenumber" name="L83" href="#L83">83</a>      @Test
<a class="jxr_linenumber" name="L84" href="#L84">84</a>      <strong class="jxr_keyword">public</strong> <strong class="jxr_keyword">void</strong> testSmallDf() {
<a class="jxr_linenumber" name="L85" href="#L85">85</a>          setDistribution(<strong class="jxr_keyword">new</strong> ChiSquaredDistribution(0.1d));
<a class="jxr_linenumber" name="L86" href="#L86">86</a>          setTolerance(1E-4);
<a class="jxr_linenumber" name="L87" href="#L87">87</a>          <em class="jxr_comment">// quantiles computed using R version 1.8.1 (linux version)</em>
<a class="jxr_linenumber" name="L88" href="#L88">88</a>          setCumulativeTestPoints(<strong class="jxr_keyword">new</strong> <strong class="jxr_keyword">double</strong>[] {1.168926E-60, 1.168926E-40, 1.063132E-32,
<a class="jxr_linenumber" name="L89" href="#L89">89</a>                  1.144775E-26, 1.168926E-20, 5.472917, 2.175255, 1.13438,
<a class="jxr_linenumber" name="L90" href="#L90">90</a>                  0.5318646, 0.1526342});
<a class="jxr_linenumber" name="L91" href="#L91">91</a>          setInverseCumulativeTestValues(getCumulativeTestPoints());
<a class="jxr_linenumber" name="L92" href="#L92">92</a>          setInverseCumulativeTestPoints(getCumulativeTestValues());
<a class="jxr_linenumber" name="L93" href="#L93">93</a>          verifyCumulativeProbabilities();
<a class="jxr_linenumber" name="L94" href="#L94">94</a>          verifyInverseCumulativeProbabilities();
<a class="jxr_linenumber" name="L95" href="#L95">95</a>      }
<a class="jxr_linenumber" name="L96" href="#L96">96</a>  
<a class="jxr_linenumber" name="L97" href="#L97">97</a>      @Test
<a class="jxr_linenumber" name="L98" href="#L98">98</a>      <strong class="jxr_keyword">public</strong> <strong class="jxr_keyword">void</strong> testDfAccessors() {
<a class="jxr_linenumber" name="L99" href="#L99">99</a>          ChiSquaredDistribution distribution = (ChiSquaredDistribution) getDistribution();
<a class="jxr_linenumber" name="L100" href="#L100">100</a>         Assert.assertEquals(5d, distribution.getDegreesOfFreedom(), Double.MIN_VALUE);
<a class="jxr_linenumber" name="L101" href="#L101">101</a>     }
<a class="jxr_linenumber" name="L102" href="#L102">102</a> 
<a class="jxr_linenumber" name="L103" href="#L103">103</a>     @Test
<a class="jxr_linenumber" name="L104" href="#L104">104</a>     <strong class="jxr_keyword">public</strong> <strong class="jxr_keyword">void</strong> testDensity() {
<a class="jxr_linenumber" name="L105" href="#L105">105</a>         <strong class="jxr_keyword">double</strong>[] x = <strong class="jxr_keyword">new</strong> <strong class="jxr_keyword">double</strong>[]{-0.1, 1e-6, 0.5, 1, 2, 5};
<a class="jxr_linenumber" name="L106" href="#L106">106</a>         <em class="jxr_comment">//R 2.5: print(dchisq(x, df=1), digits=10)</em>
<a class="jxr_linenumber" name="L107" href="#L107">107</a>         checkDensity(1, x, <strong class="jxr_keyword">new</strong> <strong class="jxr_keyword">double</strong>[]{0.00000000000, 398.94208093034, 0.43939128947, 0.24197072452, 0.10377687436, 0.01464498256});
<a class="jxr_linenumber" name="L108" href="#L108">108</a>         <em class="jxr_comment">//R 2.5: print(dchisq(x, df=0.1), digits=10)</em>
<a class="jxr_linenumber" name="L109" href="#L109">109</a>         checkDensity(0.1, x, <strong class="jxr_keyword">new</strong> <strong class="jxr_keyword">double</strong>[]{0.000000000e+00, 2.486453997e+04, 7.464238732e-02, 3.009077718e-02, 9.447299159e-03, 8.827199396e-04});
<a class="jxr_linenumber" name="L110" href="#L110">110</a>         <em class="jxr_comment">//R 2.5: print(dchisq(x, df=2), digits=10)</em>
<a class="jxr_linenumber" name="L111" href="#L111">111</a>         checkDensity(2, x, <strong class="jxr_keyword">new</strong> <strong class="jxr_keyword">double</strong>[]{0.00000000000, 0.49999975000, 0.38940039154, 0.30326532986, 0.18393972059, 0.04104249931});
<a class="jxr_linenumber" name="L112" href="#L112">112</a>         <em class="jxr_comment">//R 2.5: print(dchisq(x, df=10), digits=10)</em>
<a class="jxr_linenumber" name="L113" href="#L113">113</a>         checkDensity(10, x, <strong class="jxr_keyword">new</strong> <strong class="jxr_keyword">double</strong>[]{0.000000000e+00, 1.302082682e-27, 6.337896998e-05, 7.897534632e-04, 7.664155024e-03, 6.680094289e-02});
<a class="jxr_linenumber" name="L114" href="#L114">114</a>     }
<a class="jxr_linenumber" name="L115" href="#L115">115</a> 
<a class="jxr_linenumber" name="L116" href="#L116">116</a>     <strong class="jxr_keyword">private</strong> <strong class="jxr_keyword">void</strong> checkDensity(<strong class="jxr_keyword">double</strong> df, <strong class="jxr_keyword">double</strong>[] x, <strong class="jxr_keyword">double</strong>[] expected) {
<a class="jxr_linenumber" name="L117" href="#L117">117</a>         ChiSquaredDistribution d = <strong class="jxr_keyword">new</strong> ChiSquaredDistribution(df);
<a class="jxr_linenumber" name="L118" href="#L118">118</a>         <strong class="jxr_keyword">for</strong> (<strong class="jxr_keyword">int</strong> i = 0; i &lt; x.length; i++) {
<a class="jxr_linenumber" name="L119" href="#L119">119</a>             Assert.assertEquals(expected[i], d.density(x[i]), 1e-5);
<a class="jxr_linenumber" name="L120" href="#L120">120</a>         }
<a class="jxr_linenumber" name="L121" href="#L121">121</a>     }
<a class="jxr_linenumber" name="L122" href="#L122">122</a> 
<a class="jxr_linenumber" name="L123" href="#L123">123</a>     @Test
<a class="jxr_linenumber" name="L124" href="#L124">124</a>     <strong class="jxr_keyword">public</strong> <strong class="jxr_keyword">void</strong> testMoments() {
<a class="jxr_linenumber" name="L125" href="#L125">125</a>         <strong class="jxr_keyword">final</strong> <strong class="jxr_keyword">double</strong> tol = 1e-9;
<a class="jxr_linenumber" name="L126" href="#L126">126</a>         ChiSquaredDistribution dist;
<a class="jxr_linenumber" name="L127" href="#L127">127</a> 
<a class="jxr_linenumber" name="L128" href="#L128">128</a>         dist = <strong class="jxr_keyword">new</strong> ChiSquaredDistribution(1500);
<a class="jxr_linenumber" name="L129" href="#L129">129</a>         Assert.assertEquals(dist.getNumericalMean(), 1500, tol);
<a class="jxr_linenumber" name="L130" href="#L130">130</a>         Assert.assertEquals(dist.getNumericalVariance(), 3000, tol);
<a class="jxr_linenumber" name="L131" href="#L131">131</a> 
<a class="jxr_linenumber" name="L132" href="#L132">132</a>         dist = <strong class="jxr_keyword">new</strong> ChiSquaredDistribution(1.12);
<a class="jxr_linenumber" name="L133" href="#L133">133</a>         Assert.assertEquals(dist.getNumericalMean(), 1.12, tol);
<a class="jxr_linenumber" name="L134" href="#L134">134</a>         Assert.assertEquals(dist.getNumericalVariance(), 2.24, tol);
<a class="jxr_linenumber" name="L135" href="#L135">135</a>     }
<a class="jxr_linenumber" name="L136" href="#L136">136</a> }
</pre>
<hr/>
<div id="footer">Copyright &#169; 2003&#x2013;2016 <a href="http://www.apache.org/">The Apache Software Foundation</a>. All rights reserved.</div>
</body>
</html>
