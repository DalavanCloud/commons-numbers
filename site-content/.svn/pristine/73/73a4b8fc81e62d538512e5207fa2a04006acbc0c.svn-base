<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml" xml:lang="en" lang="en">
<head><meta http-equiv="content-type" content="text/html; charset=UTF-8" />
<title>FieldStepNormalizer xref</title>
<link type="text/css" rel="stylesheet" href="../../../../../../stylesheet.css" />
</head>
<body>
<div id="overview"><a href="../../../../../../../apidocs/org/apache/commons/math3/ode/sampling/FieldStepNormalizer.html">View Javadoc</a></div><pre>
<a class="jxr_linenumber" name="L1" href="#L1">1</a>   <em class="jxr_comment">/*</em>
<a class="jxr_linenumber" name="L2" href="#L2">2</a>   <em class="jxr_comment"> * Licensed to the Apache Software Foundation (ASF) under one or more</em>
<a class="jxr_linenumber" name="L3" href="#L3">3</a>   <em class="jxr_comment"> * contributor license agreements.  See the NOTICE file distributed with</em>
<a class="jxr_linenumber" name="L4" href="#L4">4</a>   <em class="jxr_comment"> * this work for additional information regarding copyright ownership.</em>
<a class="jxr_linenumber" name="L5" href="#L5">5</a>   <em class="jxr_comment"> * The ASF licenses this file to You under the Apache License, Version 2.0</em>
<a class="jxr_linenumber" name="L6" href="#L6">6</a>   <em class="jxr_comment"> * (the "License"); you may not use this file except in compliance with</em>
<a class="jxr_linenumber" name="L7" href="#L7">7</a>   <em class="jxr_comment"> * the License.  You may obtain a copy of the License at</em>
<a class="jxr_linenumber" name="L8" href="#L8">8</a>   <em class="jxr_comment"> *</em>
<a class="jxr_linenumber" name="L9" href="#L9">9</a>   <em class="jxr_comment"> *      <a href="http://www.apache.org/licenses/LICENSE-2." target="alexandria_uri">http://www.apache.org/licenses/LICENSE-2.</a>0</em>
<a class="jxr_linenumber" name="L10" href="#L10">10</a>  <em class="jxr_comment"> *</em>
<a class="jxr_linenumber" name="L11" href="#L11">11</a>  <em class="jxr_comment"> * Unless required by applicable law or agreed to in writing, software</em>
<a class="jxr_linenumber" name="L12" href="#L12">12</a>  <em class="jxr_comment"> * distributed under the License is distributed on an "AS IS" BASIS,</em>
<a class="jxr_linenumber" name="L13" href="#L13">13</a>  <em class="jxr_comment"> * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.</em>
<a class="jxr_linenumber" name="L14" href="#L14">14</a>  <em class="jxr_comment"> * See the License for the specific language governing permissions and</em>
<a class="jxr_linenumber" name="L15" href="#L15">15</a>  <em class="jxr_comment"> * limitations under the License.</em>
<a class="jxr_linenumber" name="L16" href="#L16">16</a>  <em class="jxr_comment"> */</em>
<a class="jxr_linenumber" name="L17" href="#L17">17</a>  
<a class="jxr_linenumber" name="L18" href="#L18">18</a>  <strong class="jxr_keyword">package</strong> org.apache.commons.math3.ode.sampling;
<a class="jxr_linenumber" name="L19" href="#L19">19</a>  
<a class="jxr_linenumber" name="L20" href="#L20">20</a>  <strong class="jxr_keyword">import</strong> org.apache.commons.math3.RealFieldElement;
<a class="jxr_linenumber" name="L21" href="#L21">21</a>  <strong class="jxr_keyword">import</strong> org.apache.commons.math3.exception.MaxCountExceededException;
<a class="jxr_linenumber" name="L22" href="#L22">22</a>  <strong class="jxr_keyword">import</strong> org.apache.commons.math3.ode.FieldODEStateAndDerivative;
<a class="jxr_linenumber" name="L23" href="#L23">23</a>  <strong class="jxr_keyword">import</strong> org.apache.commons.math3.util.FastMath;
<a class="jxr_linenumber" name="L24" href="#L24">24</a>  <strong class="jxr_keyword">import</strong> org.apache.commons.math3.util.Precision;
<a class="jxr_linenumber" name="L25" href="#L25">25</a>  
<a class="jxr_linenumber" name="L26" href="#L26">26</a>  <em class="jxr_javadoccomment">/**</em>
<a class="jxr_linenumber" name="L27" href="#L27">27</a>  <em class="jxr_javadoccomment"> * This class wraps an object implementing {@link FieldFixedStepHandler}</em>
<a class="jxr_linenumber" name="L28" href="#L28">28</a>  <em class="jxr_javadoccomment"> * into a {@link FieldStepHandler}.</em>
<a class="jxr_linenumber" name="L29" href="#L29">29</a>  
<a class="jxr_linenumber" name="L30" href="#L30">30</a>  <em class="jxr_javadoccomment"> * &lt;p&gt;This wrapper allows to use fixed step handlers with general</em>
<a class="jxr_linenumber" name="L31" href="#L31">31</a>  <em class="jxr_javadoccomment"> * integrators which cannot guaranty their integration steps will</em>
<a class="jxr_linenumber" name="L32" href="#L32">32</a>  <em class="jxr_javadoccomment"> * remain constant and therefore only accept general step</em>
<a class="jxr_linenumber" name="L33" href="#L33">33</a>  <em class="jxr_javadoccomment"> * handlers.&lt;/p&gt;</em>
<a class="jxr_linenumber" name="L34" href="#L34">34</a>  <em class="jxr_javadoccomment"> *</em>
<a class="jxr_linenumber" name="L35" href="#L35">35</a>  <em class="jxr_javadoccomment"> * &lt;p&gt;The stepsize used is selected at construction time. The {@link</em>
<a class="jxr_linenumber" name="L36" href="#L36">36</a>  <em class="jxr_javadoccomment"> * FieldFixedStepHandler#handleStep handleStep} method of the underlying</em>
<a class="jxr_linenumber" name="L37" href="#L37">37</a>  <em class="jxr_javadoccomment"> * {@link FieldFixedStepHandler} object is called at normalized times. The</em>
<a class="jxr_linenumber" name="L38" href="#L38">38</a>  <em class="jxr_javadoccomment"> * normalized times can be influenced by the {@link StepNormalizerMode} and</em>
<a class="jxr_linenumber" name="L39" href="#L39">39</a>  <em class="jxr_javadoccomment"> * {@link StepNormalizerBounds}.&lt;/p&gt;</em>
<a class="jxr_linenumber" name="L40" href="#L40">40</a>  <em class="jxr_javadoccomment"> *</em>
<a class="jxr_linenumber" name="L41" href="#L41">41</a>  <em class="jxr_javadoccomment"> * &lt;p&gt;There is no constraint on the integrator, it can use any time step</em>
<a class="jxr_linenumber" name="L42" href="#L42">42</a>  <em class="jxr_javadoccomment"> * it needs (time steps longer or shorter than the fixed time step and</em>
<a class="jxr_linenumber" name="L43" href="#L43">43</a>  <em class="jxr_javadoccomment"> * non-integer ratios are all allowed).&lt;/p&gt;</em>
<a class="jxr_linenumber" name="L44" href="#L44">44</a>  <em class="jxr_javadoccomment"> *</em>
<a class="jxr_linenumber" name="L45" href="#L45">45</a>  <em class="jxr_javadoccomment"> * &lt;p&gt;</em>
<a class="jxr_linenumber" name="L46" href="#L46">46</a>  <em class="jxr_javadoccomment"> * &lt;table border="1" align="center"&gt;</em>
<a class="jxr_linenumber" name="L47" href="#L47">47</a>  <em class="jxr_javadoccomment"> * &lt;tr BGCOLOR="#CCCCFF"&gt;&lt;td colspan=6&gt;&lt;font size="+2"&gt;Examples (step size = 0.5)&lt;/font&gt;&lt;/td&gt;&lt;/tr&gt;</em>
<a class="jxr_linenumber" name="L48" href="#L48">48</a>  <em class="jxr_javadoccomment"> * &lt;tr BGCOLOR="#EEEEFF"&gt;&lt;font size="+1"&gt;&lt;td&gt;Start time&lt;/td&gt;&lt;td&gt;End time&lt;/td&gt;</em>
<a class="jxr_linenumber" name="L49" href="#L49">49</a>  <em class="jxr_javadoccomment"> *  &lt;td&gt;Direction&lt;/td&gt;&lt;td&gt;{@link StepNormalizerMode Mode}&lt;/td&gt;</em>
<a class="jxr_linenumber" name="L50" href="#L50">50</a>  <em class="jxr_javadoccomment"> *  &lt;td&gt;{@link StepNormalizerBounds Bounds}&lt;/td&gt;&lt;td&gt;Output&lt;/td&gt;&lt;/font&gt;&lt;/tr&gt;</em>
<a class="jxr_linenumber" name="L51" href="#L51">51</a>  <em class="jxr_javadoccomment"> * &lt;tr&gt;&lt;td&gt;0.3&lt;/td&gt;&lt;td&gt;3.1&lt;/td&gt;&lt;td&gt;forward&lt;/td&gt;&lt;td&gt;{@link StepNormalizerMode#INCREMENT INCREMENT}&lt;/td&gt;&lt;td&gt;{@link StepNormalizerBounds#NEITHER NEITHER}&lt;/td&gt;&lt;td&gt;0.8, 1.3, 1.8, 2.3, 2.8&lt;/td&gt;&lt;/tr&gt;</em>
<a class="jxr_linenumber" name="L52" href="#L52">52</a>  <em class="jxr_javadoccomment"> * &lt;tr&gt;&lt;td&gt;0.3&lt;/td&gt;&lt;td&gt;3.1&lt;/td&gt;&lt;td&gt;forward&lt;/td&gt;&lt;td&gt;{@link StepNormalizerMode#INCREMENT INCREMENT}&lt;/td&gt;&lt;td&gt;{@link StepNormalizerBounds#FIRST FIRST}&lt;/td&gt;&lt;td&gt;0.3, 0.8, 1.3, 1.8, 2.3, 2.8&lt;/td&gt;&lt;/tr&gt;</em>
<a class="jxr_linenumber" name="L53" href="#L53">53</a>  <em class="jxr_javadoccomment"> * &lt;tr&gt;&lt;td&gt;0.3&lt;/td&gt;&lt;td&gt;3.1&lt;/td&gt;&lt;td&gt;forward&lt;/td&gt;&lt;td&gt;{@link StepNormalizerMode#INCREMENT INCREMENT}&lt;/td&gt;&lt;td&gt;{@link StepNormalizerBounds#LAST LAST}&lt;/td&gt;&lt;td&gt;0.8, 1.3, 1.8, 2.3, 2.8, 3.1&lt;/td&gt;&lt;/tr&gt;</em>
<a class="jxr_linenumber" name="L54" href="#L54">54</a>  <em class="jxr_javadoccomment"> * &lt;tr&gt;&lt;td&gt;0.3&lt;/td&gt;&lt;td&gt;3.1&lt;/td&gt;&lt;td&gt;forward&lt;/td&gt;&lt;td&gt;{@link StepNormalizerMode#INCREMENT INCREMENT}&lt;/td&gt;&lt;td&gt;{@link StepNormalizerBounds#BOTH BOTH}&lt;/td&gt;&lt;td&gt;0.3, 0.8, 1.3, 1.8, 2.3, 2.8, 3.1&lt;/td&gt;&lt;/tr&gt;</em>
<a class="jxr_linenumber" name="L55" href="#L55">55</a>  <em class="jxr_javadoccomment"> * &lt;tr&gt;&lt;td&gt;0.3&lt;/td&gt;&lt;td&gt;3.1&lt;/td&gt;&lt;td&gt;forward&lt;/td&gt;&lt;td&gt;{@link StepNormalizerMode#MULTIPLES MULTIPLES}&lt;/td&gt;&lt;td&gt;{@link StepNormalizerBounds#NEITHER NEITHER}&lt;/td&gt;&lt;td&gt;0.5, 1.0, 1.5, 2.0, 2.5, 3.0&lt;/td&gt;&lt;/tr&gt;</em>
<a class="jxr_linenumber" name="L56" href="#L56">56</a>  <em class="jxr_javadoccomment"> * &lt;tr&gt;&lt;td&gt;0.3&lt;/td&gt;&lt;td&gt;3.1&lt;/td&gt;&lt;td&gt;forward&lt;/td&gt;&lt;td&gt;{@link StepNormalizerMode#MULTIPLES MULTIPLES}&lt;/td&gt;&lt;td&gt;{@link StepNormalizerBounds#FIRST FIRST}&lt;/td&gt;&lt;td&gt;0.3, 0.5, 1.0, 1.5, 2.0, 2.5, 3.0&lt;/td&gt;&lt;/tr&gt;</em>
<a class="jxr_linenumber" name="L57" href="#L57">57</a>  <em class="jxr_javadoccomment"> * &lt;tr&gt;&lt;td&gt;0.3&lt;/td&gt;&lt;td&gt;3.1&lt;/td&gt;&lt;td&gt;forward&lt;/td&gt;&lt;td&gt;{@link StepNormalizerMode#MULTIPLES MULTIPLES}&lt;/td&gt;&lt;td&gt;{@link StepNormalizerBounds#LAST LAST}&lt;/td&gt;&lt;td&gt;0.5, 1.0, 1.5, 2.0, 2.5, 3.0, 3.1&lt;/td&gt;&lt;/tr&gt;</em>
<a class="jxr_linenumber" name="L58" href="#L58">58</a>  <em class="jxr_javadoccomment"> * &lt;tr&gt;&lt;td&gt;0.3&lt;/td&gt;&lt;td&gt;3.1&lt;/td&gt;&lt;td&gt;forward&lt;/td&gt;&lt;td&gt;{@link StepNormalizerMode#MULTIPLES MULTIPLES}&lt;/td&gt;&lt;td&gt;{@link StepNormalizerBounds#BOTH BOTH}&lt;/td&gt;&lt;td&gt;0.3, 0.5, 1.0, 1.5, 2.0, 2.5, 3.0, 3.1&lt;/td&gt;&lt;/tr&gt;</em>
<a class="jxr_linenumber" name="L59" href="#L59">59</a>  <em class="jxr_javadoccomment"> * &lt;tr&gt;&lt;td&gt;0.0&lt;/td&gt;&lt;td&gt;3.0&lt;/td&gt;&lt;td&gt;forward&lt;/td&gt;&lt;td&gt;{@link StepNormalizerMode#INCREMENT INCREMENT}&lt;/td&gt;&lt;td&gt;{@link StepNormalizerBounds#NEITHER NEITHER}&lt;/td&gt;&lt;td&gt;0.5, 1.0, 1.5, 2.0, 2.5, 3.0&lt;/td&gt;&lt;/tr&gt;</em>
<a class="jxr_linenumber" name="L60" href="#L60">60</a>  <em class="jxr_javadoccomment"> * &lt;tr&gt;&lt;td&gt;0.0&lt;/td&gt;&lt;td&gt;3.0&lt;/td&gt;&lt;td&gt;forward&lt;/td&gt;&lt;td&gt;{@link StepNormalizerMode#INCREMENT INCREMENT}&lt;/td&gt;&lt;td&gt;{@link StepNormalizerBounds#FIRST FIRST}&lt;/td&gt;&lt;td&gt;0.0, 0.5, 1.0, 1.5, 2.0, 2.5, 3.0&lt;/td&gt;&lt;/tr&gt;</em>
<a class="jxr_linenumber" name="L61" href="#L61">61</a>  <em class="jxr_javadoccomment"> * &lt;tr&gt;&lt;td&gt;0.0&lt;/td&gt;&lt;td&gt;3.0&lt;/td&gt;&lt;td&gt;forward&lt;/td&gt;&lt;td&gt;{@link StepNormalizerMode#INCREMENT INCREMENT}&lt;/td&gt;&lt;td&gt;{@link StepNormalizerBounds#LAST LAST}&lt;/td&gt;&lt;td&gt;0.5, 1.0, 1.5, 2.0, 2.5, 3.0&lt;/td&gt;&lt;/tr&gt;</em>
<a class="jxr_linenumber" name="L62" href="#L62">62</a>  <em class="jxr_javadoccomment"> * &lt;tr&gt;&lt;td&gt;0.0&lt;/td&gt;&lt;td&gt;3.0&lt;/td&gt;&lt;td&gt;forward&lt;/td&gt;&lt;td&gt;{@link StepNormalizerMode#INCREMENT INCREMENT}&lt;/td&gt;&lt;td&gt;{@link StepNormalizerBounds#BOTH BOTH}&lt;/td&gt;&lt;td&gt;0.0, 0.5, 1.0, 1.5, 2.0, 2.5, 3.0&lt;/td&gt;&lt;/tr&gt;</em>
<a class="jxr_linenumber" name="L63" href="#L63">63</a>  <em class="jxr_javadoccomment"> * &lt;tr&gt;&lt;td&gt;0.0&lt;/td&gt;&lt;td&gt;3.0&lt;/td&gt;&lt;td&gt;forward&lt;/td&gt;&lt;td&gt;{@link StepNormalizerMode#MULTIPLES MULTIPLES}&lt;/td&gt;&lt;td&gt;{@link StepNormalizerBounds#NEITHER NEITHER}&lt;/td&gt;&lt;td&gt;0.5, 1.0, 1.5, 2.0, 2.5, 3.0&lt;/td&gt;&lt;/tr&gt;</em>
<a class="jxr_linenumber" name="L64" href="#L64">64</a>  <em class="jxr_javadoccomment"> * &lt;tr&gt;&lt;td&gt;0.0&lt;/td&gt;&lt;td&gt;3.0&lt;/td&gt;&lt;td&gt;forward&lt;/td&gt;&lt;td&gt;{@link StepNormalizerMode#MULTIPLES MULTIPLES}&lt;/td&gt;&lt;td&gt;{@link StepNormalizerBounds#FIRST FIRST}&lt;/td&gt;&lt;td&gt;0.0, 0.5, 1.0, 1.5, 2.0, 2.5, 3.0&lt;/td&gt;&lt;/tr&gt;</em>
<a class="jxr_linenumber" name="L65" href="#L65">65</a>  <em class="jxr_javadoccomment"> * &lt;tr&gt;&lt;td&gt;0.0&lt;/td&gt;&lt;td&gt;3.0&lt;/td&gt;&lt;td&gt;forward&lt;/td&gt;&lt;td&gt;{@link StepNormalizerMode#MULTIPLES MULTIPLES}&lt;/td&gt;&lt;td&gt;{@link StepNormalizerBounds#LAST LAST}&lt;/td&gt;&lt;td&gt;0.5, 1.0, 1.5, 2.0, 2.5, 3.0&lt;/td&gt;&lt;/tr&gt;</em>
<a class="jxr_linenumber" name="L66" href="#L66">66</a>  <em class="jxr_javadoccomment"> * &lt;tr&gt;&lt;td&gt;0.0&lt;/td&gt;&lt;td&gt;3.0&lt;/td&gt;&lt;td&gt;forward&lt;/td&gt;&lt;td&gt;{@link StepNormalizerMode#MULTIPLES MULTIPLES}&lt;/td&gt;&lt;td&gt;{@link StepNormalizerBounds#BOTH BOTH}&lt;/td&gt;&lt;td&gt;0.0, 0.5, 1.0, 1.5, 2.0, 2.5, 3.0&lt;/td&gt;&lt;/tr&gt;</em>
<a class="jxr_linenumber" name="L67" href="#L67">67</a>  <em class="jxr_javadoccomment"> * &lt;tr&gt;&lt;td&gt;3.1&lt;/td&gt;&lt;td&gt;0.3&lt;/td&gt;&lt;td&gt;backward&lt;/td&gt;&lt;td&gt;{@link StepNormalizerMode#INCREMENT INCREMENT}&lt;/td&gt;&lt;td&gt;{@link StepNormalizerBounds#NEITHER NEITHER}&lt;/td&gt;&lt;td&gt;2.6, 2.1, 1.6, 1.1, 0.6&lt;/td&gt;&lt;/tr&gt;</em>
<a class="jxr_linenumber" name="L68" href="#L68">68</a>  <em class="jxr_javadoccomment"> * &lt;tr&gt;&lt;td&gt;3.1&lt;/td&gt;&lt;td&gt;0.3&lt;/td&gt;&lt;td&gt;backward&lt;/td&gt;&lt;td&gt;{@link StepNormalizerMode#INCREMENT INCREMENT}&lt;/td&gt;&lt;td&gt;{@link StepNormalizerBounds#FIRST FIRST}&lt;/td&gt;&lt;td&gt;3.1, 2.6, 2.1, 1.6, 1.1, 0.6&lt;/td&gt;&lt;/tr&gt;</em>
<a class="jxr_linenumber" name="L69" href="#L69">69</a>  <em class="jxr_javadoccomment"> * &lt;tr&gt;&lt;td&gt;3.1&lt;/td&gt;&lt;td&gt;0.3&lt;/td&gt;&lt;td&gt;backward&lt;/td&gt;&lt;td&gt;{@link StepNormalizerMode#INCREMENT INCREMENT}&lt;/td&gt;&lt;td&gt;{@link StepNormalizerBounds#LAST LAST}&lt;/td&gt;&lt;td&gt;2.6, 2.1, 1.6, 1.1, 0.6, 0.3&lt;/td&gt;&lt;/tr&gt;</em>
<a class="jxr_linenumber" name="L70" href="#L70">70</a>  <em class="jxr_javadoccomment"> * &lt;tr&gt;&lt;td&gt;3.1&lt;/td&gt;&lt;td&gt;0.3&lt;/td&gt;&lt;td&gt;backward&lt;/td&gt;&lt;td&gt;{@link StepNormalizerMode#INCREMENT INCREMENT}&lt;/td&gt;&lt;td&gt;{@link StepNormalizerBounds#BOTH BOTH}&lt;/td&gt;&lt;td&gt;3.1, 2.6, 2.1, 1.6, 1.1, 0.6, 0.3&lt;/td&gt;&lt;/tr&gt;</em>
<a class="jxr_linenumber" name="L71" href="#L71">71</a>  <em class="jxr_javadoccomment"> * &lt;tr&gt;&lt;td&gt;3.1&lt;/td&gt;&lt;td&gt;0.3&lt;/td&gt;&lt;td&gt;backward&lt;/td&gt;&lt;td&gt;{@link StepNormalizerMode#MULTIPLES MULTIPLES}&lt;/td&gt;&lt;td&gt;{@link StepNormalizerBounds#NEITHER NEITHER}&lt;/td&gt;&lt;td&gt;3.0, 2.5, 2.0, 1.5, 1.0, 0.5&lt;/td&gt;&lt;/tr&gt;</em>
<a class="jxr_linenumber" name="L72" href="#L72">72</a>  <em class="jxr_javadoccomment"> * &lt;tr&gt;&lt;td&gt;3.1&lt;/td&gt;&lt;td&gt;0.3&lt;/td&gt;&lt;td&gt;backward&lt;/td&gt;&lt;td&gt;{@link StepNormalizerMode#MULTIPLES MULTIPLES}&lt;/td&gt;&lt;td&gt;{@link StepNormalizerBounds#FIRST FIRST}&lt;/td&gt;&lt;td&gt;3.1, 3.0, 2.5, 2.0, 1.5, 1.0, 0.5&lt;/td&gt;&lt;/tr&gt;</em>
<a class="jxr_linenumber" name="L73" href="#L73">73</a>  <em class="jxr_javadoccomment"> * &lt;tr&gt;&lt;td&gt;3.1&lt;/td&gt;&lt;td&gt;0.3&lt;/td&gt;&lt;td&gt;backward&lt;/td&gt;&lt;td&gt;{@link StepNormalizerMode#MULTIPLES MULTIPLES}&lt;/td&gt;&lt;td&gt;{@link StepNormalizerBounds#LAST LAST}&lt;/td&gt;&lt;td&gt;3.0, 2.5, 2.0, 1.5, 1.0, 0.5, 0.3&lt;/td&gt;&lt;/tr&gt;</em>
<a class="jxr_linenumber" name="L74" href="#L74">74</a>  <em class="jxr_javadoccomment"> * &lt;tr&gt;&lt;td&gt;3.1&lt;/td&gt;&lt;td&gt;0.3&lt;/td&gt;&lt;td&gt;backward&lt;/td&gt;&lt;td&gt;{@link StepNormalizerMode#MULTIPLES MULTIPLES}&lt;/td&gt;&lt;td&gt;{@link StepNormalizerBounds#BOTH BOTH}&lt;/td&gt;&lt;td&gt;3.1, 3.0, 2.5, 2.0, 1.5, 1.0, 0.5, 0.3&lt;/td&gt;&lt;/tr&gt;</em>
<a class="jxr_linenumber" name="L75" href="#L75">75</a>  <em class="jxr_javadoccomment"> * &lt;tr&gt;&lt;td&gt;3.0&lt;/td&gt;&lt;td&gt;0.0&lt;/td&gt;&lt;td&gt;backward&lt;/td&gt;&lt;td&gt;{@link StepNormalizerMode#INCREMENT INCREMENT}&lt;/td&gt;&lt;td&gt;{@link StepNormalizerBounds#NEITHER NEITHER}&lt;/td&gt;&lt;td&gt;2.5, 2.0, 1.5, 1.0, 0.5, 0.0&lt;/td&gt;&lt;/tr&gt;</em>
<a class="jxr_linenumber" name="L76" href="#L76">76</a>  <em class="jxr_javadoccomment"> * &lt;tr&gt;&lt;td&gt;3.0&lt;/td&gt;&lt;td&gt;0.0&lt;/td&gt;&lt;td&gt;backward&lt;/td&gt;&lt;td&gt;{@link StepNormalizerMode#INCREMENT INCREMENT}&lt;/td&gt;&lt;td&gt;{@link StepNormalizerBounds#FIRST FIRST}&lt;/td&gt;&lt;td&gt;3.0, 2.5, 2.0, 1.5, 1.0, 0.5, 0.0&lt;/td&gt;&lt;/tr&gt;</em>
<a class="jxr_linenumber" name="L77" href="#L77">77</a>  <em class="jxr_javadoccomment"> * &lt;tr&gt;&lt;td&gt;3.0&lt;/td&gt;&lt;td&gt;0.0&lt;/td&gt;&lt;td&gt;backward&lt;/td&gt;&lt;td&gt;{@link StepNormalizerMode#INCREMENT INCREMENT}&lt;/td&gt;&lt;td&gt;{@link StepNormalizerBounds#LAST LAST}&lt;/td&gt;&lt;td&gt;2.5, 2.0, 1.5, 1.0, 0.5, 0.0&lt;/td&gt;&lt;/tr&gt;</em>
<a class="jxr_linenumber" name="L78" href="#L78">78</a>  <em class="jxr_javadoccomment"> * &lt;tr&gt;&lt;td&gt;3.0&lt;/td&gt;&lt;td&gt;0.0&lt;/td&gt;&lt;td&gt;backward&lt;/td&gt;&lt;td&gt;{@link StepNormalizerMode#INCREMENT INCREMENT}&lt;/td&gt;&lt;td&gt;{@link StepNormalizerBounds#BOTH BOTH}&lt;/td&gt;&lt;td&gt;3.0, 2.5, 2.0, 1.5, 1.0, 0.5, 0.0&lt;/td&gt;&lt;/tr&gt;</em>
<a class="jxr_linenumber" name="L79" href="#L79">79</a>  <em class="jxr_javadoccomment"> * &lt;tr&gt;&lt;td&gt;3.0&lt;/td&gt;&lt;td&gt;0.0&lt;/td&gt;&lt;td&gt;backward&lt;/td&gt;&lt;td&gt;{@link StepNormalizerMode#MULTIPLES MULTIPLES}&lt;/td&gt;&lt;td&gt;{@link StepNormalizerBounds#NEITHER NEITHER}&lt;/td&gt;&lt;td&gt;2.5, 2.0, 1.5, 1.0, 0.5, 0.0&lt;/td&gt;&lt;/tr&gt;</em>
<a class="jxr_linenumber" name="L80" href="#L80">80</a>  <em class="jxr_javadoccomment"> * &lt;tr&gt;&lt;td&gt;3.0&lt;/td&gt;&lt;td&gt;0.0&lt;/td&gt;&lt;td&gt;backward&lt;/td&gt;&lt;td&gt;{@link StepNormalizerMode#MULTIPLES MULTIPLES}&lt;/td&gt;&lt;td&gt;{@link StepNormalizerBounds#FIRST FIRST}&lt;/td&gt;&lt;td&gt;3.0, 2.5, 2.0, 1.5, 1.0, 0.5, 0.0&lt;/td&gt;&lt;/tr&gt;</em>
<a class="jxr_linenumber" name="L81" href="#L81">81</a>  <em class="jxr_javadoccomment"> * &lt;tr&gt;&lt;td&gt;3.0&lt;/td&gt;&lt;td&gt;0.0&lt;/td&gt;&lt;td&gt;backward&lt;/td&gt;&lt;td&gt;{@link StepNormalizerMode#MULTIPLES MULTIPLES}&lt;/td&gt;&lt;td&gt;{@link StepNormalizerBounds#LAST LAST}&lt;/td&gt;&lt;td&gt;2.5, 2.0, 1.5, 1.0, 0.5, 0.0&lt;/td&gt;&lt;/tr&gt;</em>
<a class="jxr_linenumber" name="L82" href="#L82">82</a>  <em class="jxr_javadoccomment"> * &lt;tr&gt;&lt;td&gt;3.0&lt;/td&gt;&lt;td&gt;0.0&lt;/td&gt;&lt;td&gt;backward&lt;/td&gt;&lt;td&gt;{@link StepNormalizerMode#MULTIPLES MULTIPLES}&lt;/td&gt;&lt;td&gt;{@link StepNormalizerBounds#BOTH BOTH}&lt;/td&gt;&lt;td&gt;3.0, 2.5, 2.0, 1.5, 1.0, 0.5, 0.0&lt;/td&gt;&lt;/tr&gt;</em>
<a class="jxr_linenumber" name="L83" href="#L83">83</a>  <em class="jxr_javadoccomment"> * &lt;/table&gt;</em>
<a class="jxr_linenumber" name="L84" href="#L84">84</a>  <em class="jxr_javadoccomment"> * &lt;/p&gt;</em>
<a class="jxr_linenumber" name="L85" href="#L85">85</a>  <em class="jxr_javadoccomment"> *</em>
<a class="jxr_linenumber" name="L86" href="#L86">86</a>  <em class="jxr_javadoccomment"> * @param &lt;T&gt; the type of the field elements</em>
<a class="jxr_linenumber" name="L87" href="#L87">87</a>  <em class="jxr_javadoccomment"> * @see FieldStepHandler</em>
<a class="jxr_linenumber" name="L88" href="#L88">88</a>  <em class="jxr_javadoccomment"> * @see FieldFixedStepHandler</em>
<a class="jxr_linenumber" name="L89" href="#L89">89</a>  <em class="jxr_javadoccomment"> * @see StepNormalizerMode</em>
<a class="jxr_linenumber" name="L90" href="#L90">90</a>  <em class="jxr_javadoccomment"> * @see StepNormalizerBounds</em>
<a class="jxr_linenumber" name="L91" href="#L91">91</a>  <em class="jxr_javadoccomment"> * @since 3.6</em>
<a class="jxr_linenumber" name="L92" href="#L92">92</a>  <em class="jxr_javadoccomment"> */</em>
<a class="jxr_linenumber" name="L93" href="#L93">93</a>  
<a class="jxr_linenumber" name="L94" href="#L94">94</a>  <strong class="jxr_keyword">public</strong> <strong class="jxr_keyword">class</strong> FieldStepNormalizer&lt;T <strong class="jxr_keyword">extends</strong> RealFieldElement&lt;T&gt;&gt; <strong class="jxr_keyword">implements</strong> FieldStepHandler&lt;T&gt; {
<a class="jxr_linenumber" name="L95" href="#L95">95</a>  
<a class="jxr_linenumber" name="L96" href="#L96">96</a>      <em class="jxr_javadoccomment">/** Fixed time step. */</em>
<a class="jxr_linenumber" name="L97" href="#L97">97</a>      <strong class="jxr_keyword">private</strong> <strong class="jxr_keyword">double</strong> h;
<a class="jxr_linenumber" name="L98" href="#L98">98</a>  
<a class="jxr_linenumber" name="L99" href="#L99">99</a>      <em class="jxr_javadoccomment">/** Underlying step handler. */</em>
<a class="jxr_linenumber" name="L100" href="#L100">100</a>     <strong class="jxr_keyword">private</strong> <strong class="jxr_keyword">final</strong> FieldFixedStepHandler&lt;T&gt; handler;
<a class="jxr_linenumber" name="L101" href="#L101">101</a> 
<a class="jxr_linenumber" name="L102" href="#L102">102</a>     <em class="jxr_javadoccomment">/** First step state. */</em>
<a class="jxr_linenumber" name="L103" href="#L103">103</a>     <strong class="jxr_keyword">private</strong> FieldODEStateAndDerivative&lt;T&gt; first;
<a class="jxr_linenumber" name="L104" href="#L104">104</a> 
<a class="jxr_linenumber" name="L105" href="#L105">105</a>     <em class="jxr_javadoccomment">/** Last step step. */</em>
<a class="jxr_linenumber" name="L106" href="#L106">106</a>     <strong class="jxr_keyword">private</strong> FieldODEStateAndDerivative&lt;T&gt; last;
<a class="jxr_linenumber" name="L107" href="#L107">107</a> 
<a class="jxr_linenumber" name="L108" href="#L108">108</a>     <em class="jxr_javadoccomment">/** Integration direction indicator. */</em>
<a class="jxr_linenumber" name="L109" href="#L109">109</a>     <strong class="jxr_keyword">private</strong> <strong class="jxr_keyword">boolean</strong> forward;
<a class="jxr_linenumber" name="L110" href="#L110">110</a> 
<a class="jxr_linenumber" name="L111" href="#L111">111</a>     <em class="jxr_javadoccomment">/** The step normalizer bounds settings to use. */</em>
<a class="jxr_linenumber" name="L112" href="#L112">112</a>     <strong class="jxr_keyword">private</strong> <strong class="jxr_keyword">final</strong> <a href="../../../../../../org/apache/commons/math3/ode/sampling/StepNormalizerBounds.html">StepNormalizerBounds</a> bounds;
<a class="jxr_linenumber" name="L113" href="#L113">113</a> 
<a class="jxr_linenumber" name="L114" href="#L114">114</a>     <em class="jxr_javadoccomment">/** The step normalizer mode to use. */</em>
<a class="jxr_linenumber" name="L115" href="#L115">115</a>     <strong class="jxr_keyword">private</strong> <strong class="jxr_keyword">final</strong> <a href="../../../../../../org/apache/commons/math3/ode/sampling/StepNormalizerMode.html">StepNormalizerMode</a> mode;
<a class="jxr_linenumber" name="L116" href="#L116">116</a> 
<a class="jxr_linenumber" name="L117" href="#L117">117</a>     <em class="jxr_javadoccomment">/** Simple constructor. Uses {@link StepNormalizerMode#INCREMENT INCREMENT}</em>
<a class="jxr_linenumber" name="L118" href="#L118">118</a> <em class="jxr_javadoccomment">     * mode, and {@link StepNormalizerBounds#FIRST FIRST} bounds setting, for</em>
<a class="jxr_linenumber" name="L119" href="#L119">119</a> <em class="jxr_javadoccomment">     * backwards compatibility.</em>
<a class="jxr_linenumber" name="L120" href="#L120">120</a> <em class="jxr_javadoccomment">     * @param h fixed time step (sign is not used)</em>
<a class="jxr_linenumber" name="L121" href="#L121">121</a> <em class="jxr_javadoccomment">     * @param handler fixed time step handler to wrap</em>
<a class="jxr_linenumber" name="L122" href="#L122">122</a> <em class="jxr_javadoccomment">     */</em>
<a class="jxr_linenumber" name="L123" href="#L123">123</a>     <strong class="jxr_keyword">public</strong> <a href="../../../../../../org/apache/commons/math3/ode/sampling/FieldStepNormalizer.html">FieldStepNormalizer</a>(<strong class="jxr_keyword">final</strong> <strong class="jxr_keyword">double</strong> h, <strong class="jxr_keyword">final</strong> FieldFixedStepHandler&lt;T&gt; handler) {
<a class="jxr_linenumber" name="L124" href="#L124">124</a>         <strong class="jxr_keyword">this</strong>(h, handler, StepNormalizerMode.INCREMENT,
<a class="jxr_linenumber" name="L125" href="#L125">125</a>              StepNormalizerBounds.FIRST);
<a class="jxr_linenumber" name="L126" href="#L126">126</a>     }
<a class="jxr_linenumber" name="L127" href="#L127">127</a> 
<a class="jxr_linenumber" name="L128" href="#L128">128</a>     <em class="jxr_javadoccomment">/** Simple constructor. Uses {@link StepNormalizerBounds#FIRST FIRST}</em>
<a class="jxr_linenumber" name="L129" href="#L129">129</a> <em class="jxr_javadoccomment">     * bounds setting.</em>
<a class="jxr_linenumber" name="L130" href="#L130">130</a> <em class="jxr_javadoccomment">     * @param h fixed time step (sign is not used)</em>
<a class="jxr_linenumber" name="L131" href="#L131">131</a> <em class="jxr_javadoccomment">     * @param handler fixed time step handler to wrap</em>
<a class="jxr_linenumber" name="L132" href="#L132">132</a> <em class="jxr_javadoccomment">     * @param mode step normalizer mode to use</em>
<a class="jxr_linenumber" name="L133" href="#L133">133</a> <em class="jxr_javadoccomment">     * @since 3.0</em>
<a class="jxr_linenumber" name="L134" href="#L134">134</a> <em class="jxr_javadoccomment">     */</em>
<a class="jxr_linenumber" name="L135" href="#L135">135</a>     <strong class="jxr_keyword">public</strong> <a href="../../../../../../org/apache/commons/math3/ode/sampling/FieldStepNormalizer.html">FieldStepNormalizer</a>(<strong class="jxr_keyword">final</strong> <strong class="jxr_keyword">double</strong> h, <strong class="jxr_keyword">final</strong> FieldFixedStepHandler&lt;T&gt; handler,
<a class="jxr_linenumber" name="L136" href="#L136">136</a>                                <strong class="jxr_keyword">final</strong> <a href="../../../../../../org/apache/commons/math3/ode/sampling/StepNormalizerMode.html">StepNormalizerMode</a> mode) {
<a class="jxr_linenumber" name="L137" href="#L137">137</a>         <strong class="jxr_keyword">this</strong>(h, handler, mode, StepNormalizerBounds.FIRST);
<a class="jxr_linenumber" name="L138" href="#L138">138</a>     }
<a class="jxr_linenumber" name="L139" href="#L139">139</a> 
<a class="jxr_linenumber" name="L140" href="#L140">140</a>     <em class="jxr_javadoccomment">/** Simple constructor. Uses {@link StepNormalizerMode#INCREMENT INCREMENT}</em>
<a class="jxr_linenumber" name="L141" href="#L141">141</a> <em class="jxr_javadoccomment">     * mode.</em>
<a class="jxr_linenumber" name="L142" href="#L142">142</a> <em class="jxr_javadoccomment">     * @param h fixed time step (sign is not used)</em>
<a class="jxr_linenumber" name="L143" href="#L143">143</a> <em class="jxr_javadoccomment">     * @param handler fixed time step handler to wrap</em>
<a class="jxr_linenumber" name="L144" href="#L144">144</a> <em class="jxr_javadoccomment">     * @param bounds step normalizer bounds setting to use</em>
<a class="jxr_linenumber" name="L145" href="#L145">145</a> <em class="jxr_javadoccomment">     * @since 3.0</em>
<a class="jxr_linenumber" name="L146" href="#L146">146</a> <em class="jxr_javadoccomment">     */</em>
<a class="jxr_linenumber" name="L147" href="#L147">147</a>     <strong class="jxr_keyword">public</strong> <a href="../../../../../../org/apache/commons/math3/ode/sampling/FieldStepNormalizer.html">FieldStepNormalizer</a>(<strong class="jxr_keyword">final</strong> <strong class="jxr_keyword">double</strong> h, <strong class="jxr_keyword">final</strong> FieldFixedStepHandler&lt;T&gt; handler,
<a class="jxr_linenumber" name="L148" href="#L148">148</a>                                <strong class="jxr_keyword">final</strong> <a href="../../../../../../org/apache/commons/math3/ode/sampling/StepNormalizerBounds.html">StepNormalizerBounds</a> bounds) {
<a class="jxr_linenumber" name="L149" href="#L149">149</a>         <strong class="jxr_keyword">this</strong>(h, handler, StepNormalizerMode.INCREMENT, bounds);
<a class="jxr_linenumber" name="L150" href="#L150">150</a>     }
<a class="jxr_linenumber" name="L151" href="#L151">151</a> 
<a class="jxr_linenumber" name="L152" href="#L152">152</a>     <em class="jxr_javadoccomment">/** Simple constructor.</em>
<a class="jxr_linenumber" name="L153" href="#L153">153</a> <em class="jxr_javadoccomment">     * @param h fixed time step (sign is not used)</em>
<a class="jxr_linenumber" name="L154" href="#L154">154</a> <em class="jxr_javadoccomment">     * @param handler fixed time step handler to wrap</em>
<a class="jxr_linenumber" name="L155" href="#L155">155</a> <em class="jxr_javadoccomment">     * @param mode step normalizer mode to use</em>
<a class="jxr_linenumber" name="L156" href="#L156">156</a> <em class="jxr_javadoccomment">     * @param bounds step normalizer bounds setting to use</em>
<a class="jxr_linenumber" name="L157" href="#L157">157</a> <em class="jxr_javadoccomment">     * @since 3.0</em>
<a class="jxr_linenumber" name="L158" href="#L158">158</a> <em class="jxr_javadoccomment">     */</em>
<a class="jxr_linenumber" name="L159" href="#L159">159</a>     <strong class="jxr_keyword">public</strong> <a href="../../../../../../org/apache/commons/math3/ode/sampling/FieldStepNormalizer.html">FieldStepNormalizer</a>(<strong class="jxr_keyword">final</strong> <strong class="jxr_keyword">double</strong> h, <strong class="jxr_keyword">final</strong> FieldFixedStepHandler&lt;T&gt; handler,
<a class="jxr_linenumber" name="L160" href="#L160">160</a>                                <strong class="jxr_keyword">final</strong> <a href="../../../../../../org/apache/commons/math3/ode/sampling/StepNormalizerMode.html">StepNormalizerMode</a> mode, <strong class="jxr_keyword">final</strong> <a href="../../../../../../org/apache/commons/math3/ode/sampling/StepNormalizerBounds.html">StepNormalizerBounds</a> bounds) {
<a class="jxr_linenumber" name="L161" href="#L161">161</a>         <strong class="jxr_keyword">this</strong>.h       = FastMath.abs(h);
<a class="jxr_linenumber" name="L162" href="#L162">162</a>         <strong class="jxr_keyword">this</strong>.handler = handler;
<a class="jxr_linenumber" name="L163" href="#L163">163</a>         <strong class="jxr_keyword">this</strong>.mode    = mode;
<a class="jxr_linenumber" name="L164" href="#L164">164</a>         <strong class="jxr_keyword">this</strong>.bounds  = bounds;
<a class="jxr_linenumber" name="L165" href="#L165">165</a>         first        = <strong class="jxr_keyword">null</strong>;
<a class="jxr_linenumber" name="L166" href="#L166">166</a>         last         = <strong class="jxr_keyword">null</strong>;
<a class="jxr_linenumber" name="L167" href="#L167">167</a>         forward      = <strong class="jxr_keyword">true</strong>;
<a class="jxr_linenumber" name="L168" href="#L168">168</a>     }
<a class="jxr_linenumber" name="L169" href="#L169">169</a> 
<a class="jxr_linenumber" name="L170" href="#L170">170</a>     <em class="jxr_javadoccomment">/** {@inheritDoc} */</em>
<a class="jxr_linenumber" name="L171" href="#L171">171</a>     <strong class="jxr_keyword">public</strong> <strong class="jxr_keyword">void</strong> init(<strong class="jxr_keyword">final</strong> FieldODEStateAndDerivative&lt;T&gt; initialState, <strong class="jxr_keyword">final</strong> T finalTime) {
<a class="jxr_linenumber" name="L172" href="#L172">172</a> 
<a class="jxr_linenumber" name="L173" href="#L173">173</a>         first   = <strong class="jxr_keyword">null</strong>;
<a class="jxr_linenumber" name="L174" href="#L174">174</a>         last    = <strong class="jxr_keyword">null</strong>;
<a class="jxr_linenumber" name="L175" href="#L175">175</a>         forward = <strong class="jxr_keyword">true</strong>;
<a class="jxr_linenumber" name="L176" href="#L176">176</a> 
<a class="jxr_linenumber" name="L177" href="#L177">177</a>         <em class="jxr_comment">// initialize the underlying handler</em>
<a class="jxr_linenumber" name="L178" href="#L178">178</a>         handler.init(initialState, finalTime);
<a class="jxr_linenumber" name="L179" href="#L179">179</a> 
<a class="jxr_linenumber" name="L180" href="#L180">180</a>     }
<a class="jxr_linenumber" name="L181" href="#L181">181</a> 
<a class="jxr_linenumber" name="L182" href="#L182">182</a>     <em class="jxr_javadoccomment">/**</em>
<a class="jxr_linenumber" name="L183" href="#L183">183</a> <em class="jxr_javadoccomment">     * Handle the last accepted step</em>
<a class="jxr_linenumber" name="L184" href="#L184">184</a> <em class="jxr_javadoccomment">     * @param interpolator interpolator for the last accepted step. For</em>
<a class="jxr_linenumber" name="L185" href="#L185">185</a> <em class="jxr_javadoccomment">     * efficiency purposes, the various integrators reuse the same</em>
<a class="jxr_linenumber" name="L186" href="#L186">186</a> <em class="jxr_javadoccomment">     * object on each call, so if the instance wants to keep it across</em>
<a class="jxr_linenumber" name="L187" href="#L187">187</a> <em class="jxr_javadoccomment">     * all calls (for example to provide at the end of the integration a</em>
<a class="jxr_linenumber" name="L188" href="#L188">188</a> <em class="jxr_javadoccomment">     * continuous model valid throughout the integration range), it</em>
<a class="jxr_linenumber" name="L189" href="#L189">189</a> <em class="jxr_javadoccomment">     * should build a local copy using the clone method and store this</em>
<a class="jxr_linenumber" name="L190" href="#L190">190</a> <em class="jxr_javadoccomment">     * copy.</em>
<a class="jxr_linenumber" name="L191" href="#L191">191</a> <em class="jxr_javadoccomment">     * @param isLast true if the step is the last one</em>
<a class="jxr_linenumber" name="L192" href="#L192">192</a> <em class="jxr_javadoccomment">     * @exception MaxCountExceededException if the interpolator throws one because</em>
<a class="jxr_linenumber" name="L193" href="#L193">193</a> <em class="jxr_javadoccomment">     * the number of functions evaluations is exceeded</em>
<a class="jxr_linenumber" name="L194" href="#L194">194</a> <em class="jxr_javadoccomment">     */</em>
<a class="jxr_linenumber" name="L195" href="#L195">195</a>     <strong class="jxr_keyword">public</strong> <strong class="jxr_keyword">void</strong> handleStep(<strong class="jxr_keyword">final</strong> FieldStepInterpolator&lt;T&gt; interpolator, <strong class="jxr_keyword">final</strong> <strong class="jxr_keyword">boolean</strong> isLast)
<a class="jxr_linenumber" name="L196" href="#L196">196</a>         <strong class="jxr_keyword">throws</strong> <a href="../../../../../../org/apache/commons/math3/exception/MaxCountExceededException.html">MaxCountExceededException</a> {
<a class="jxr_linenumber" name="L197" href="#L197">197</a>         <em class="jxr_comment">// The first time, update the last state with the start information.</em>
<a class="jxr_linenumber" name="L198" href="#L198">198</a>         <strong class="jxr_keyword">if</strong> (last == <strong class="jxr_keyword">null</strong>) {
<a class="jxr_linenumber" name="L199" href="#L199">199</a> 
<a class="jxr_linenumber" name="L200" href="#L200">200</a>             first   = interpolator.getPreviousState();
<a class="jxr_linenumber" name="L201" href="#L201">201</a>             last    = first;
<a class="jxr_linenumber" name="L202" href="#L202">202</a> 
<a class="jxr_linenumber" name="L203" href="#L203">203</a>             <em class="jxr_comment">// Take the integration direction into account.</em>
<a class="jxr_linenumber" name="L204" href="#L204">204</a>             forward = interpolator.isForward();
<a class="jxr_linenumber" name="L205" href="#L205">205</a>             <strong class="jxr_keyword">if</strong> (!forward) {
<a class="jxr_linenumber" name="L206" href="#L206">206</a>                 h = -h;
<a class="jxr_linenumber" name="L207" href="#L207">207</a>             }
<a class="jxr_linenumber" name="L208" href="#L208">208</a>         }
<a class="jxr_linenumber" name="L209" href="#L209">209</a> 
<a class="jxr_linenumber" name="L210" href="#L210">210</a>         <em class="jxr_comment">// Calculate next normalized step time.</em>
<a class="jxr_linenumber" name="L211" href="#L211">211</a>         T nextTime = (mode == StepNormalizerMode.INCREMENT) ?
<a class="jxr_linenumber" name="L212" href="#L212">212</a>                      last.getTime().add(h) :
<a class="jxr_linenumber" name="L213" href="#L213">213</a>                      last.getTime().getField().getZero().add((FastMath.floor(last.getTime().getReal() / h) + 1) * h);
<a class="jxr_linenumber" name="L214" href="#L214">214</a>         <strong class="jxr_keyword">if</strong> (mode == StepNormalizerMode.MULTIPLES &amp;&amp;
<a class="jxr_linenumber" name="L215" href="#L215">215</a>             Precision.equals(nextTime.getReal(), last.getTime().getReal(), 1)) {
<a class="jxr_linenumber" name="L216" href="#L216">216</a>             nextTime = nextTime.add(h);
<a class="jxr_linenumber" name="L217" href="#L217">217</a>         }
<a class="jxr_linenumber" name="L218" href="#L218">218</a> 
<a class="jxr_linenumber" name="L219" href="#L219">219</a>         <em class="jxr_comment">// Process normalized steps as long as they are in the current step.</em>
<a class="jxr_linenumber" name="L220" href="#L220">220</a>         <strong class="jxr_keyword">boolean</strong> nextInStep = isNextInStep(nextTime, interpolator);
<a class="jxr_linenumber" name="L221" href="#L221">221</a>         <strong class="jxr_keyword">while</strong> (nextInStep) {
<a class="jxr_linenumber" name="L222" href="#L222">222</a>             <em class="jxr_comment">// Output the stored previous step.</em>
<a class="jxr_linenumber" name="L223" href="#L223">223</a>             doNormalizedStep(false);
<a class="jxr_linenumber" name="L224" href="#L224">224</a> 
<a class="jxr_linenumber" name="L225" href="#L225">225</a>             <em class="jxr_comment">// Store the next step as last step.</em>
<a class="jxr_linenumber" name="L226" href="#L226">226</a>             last = interpolator.getInterpolatedState(nextTime);
<a class="jxr_linenumber" name="L227" href="#L227">227</a> 
<a class="jxr_linenumber" name="L228" href="#L228">228</a>             <em class="jxr_comment">// Move on to the next step.</em>
<a class="jxr_linenumber" name="L229" href="#L229">229</a>             nextTime = nextTime.add(h);
<a class="jxr_linenumber" name="L230" href="#L230">230</a>             nextInStep = isNextInStep(nextTime, interpolator);
<a class="jxr_linenumber" name="L231" href="#L231">231</a>         }
<a class="jxr_linenumber" name="L232" href="#L232">232</a> 
<a class="jxr_linenumber" name="L233" href="#L233">233</a>         <strong class="jxr_keyword">if</strong> (isLast) {
<a class="jxr_linenumber" name="L234" href="#L234">234</a>             <em class="jxr_comment">// There will be no more steps. The stored one should be given to</em>
<a class="jxr_linenumber" name="L235" href="#L235">235</a>             <em class="jxr_comment">// the handler. We may have to output one more step. Only the last</em>
<a class="jxr_linenumber" name="L236" href="#L236">236</a>             <em class="jxr_comment">// one of those should be flagged as being the last.</em>
<a class="jxr_linenumber" name="L237" href="#L237">237</a>             <strong class="jxr_keyword">final</strong> <strong class="jxr_keyword">boolean</strong> addLast = bounds.lastIncluded() &amp;&amp;
<a class="jxr_linenumber" name="L238" href="#L238">238</a>                                     last.getTime().getReal() != interpolator.getCurrentState().getTime().getReal();
<a class="jxr_linenumber" name="L239" href="#L239">239</a>             doNormalizedStep(!addLast);
<a class="jxr_linenumber" name="L240" href="#L240">240</a>             <strong class="jxr_keyword">if</strong> (addLast) {
<a class="jxr_linenumber" name="L241" href="#L241">241</a>                 last = interpolator.getCurrentState();
<a class="jxr_linenumber" name="L242" href="#L242">242</a>                 doNormalizedStep(<strong class="jxr_keyword">true</strong>);
<a class="jxr_linenumber" name="L243" href="#L243">243</a>             }
<a class="jxr_linenumber" name="L244" href="#L244">244</a>         }
<a class="jxr_linenumber" name="L245" href="#L245">245</a>     }
<a class="jxr_linenumber" name="L246" href="#L246">246</a> 
<a class="jxr_linenumber" name="L247" href="#L247">247</a>     <em class="jxr_javadoccomment">/**</em>
<a class="jxr_linenumber" name="L248" href="#L248">248</a> <em class="jxr_javadoccomment">     * Returns a value indicating whether the next normalized time is in the</em>
<a class="jxr_linenumber" name="L249" href="#L249">249</a> <em class="jxr_javadoccomment">     * current step.</em>
<a class="jxr_linenumber" name="L250" href="#L250">250</a> <em class="jxr_javadoccomment">     * @param nextTime the next normalized time</em>
<a class="jxr_linenumber" name="L251" href="#L251">251</a> <em class="jxr_javadoccomment">     * @param interpolator interpolator for the last accepted step, to use to</em>
<a class="jxr_linenumber" name="L252" href="#L252">252</a> <em class="jxr_javadoccomment">     * get the end time of the current step</em>
<a class="jxr_linenumber" name="L253" href="#L253">253</a> <em class="jxr_javadoccomment">     * @return value indicating whether the next normalized time is in the</em>
<a class="jxr_linenumber" name="L254" href="#L254">254</a> <em class="jxr_javadoccomment">     * current step</em>
<a class="jxr_linenumber" name="L255" href="#L255">255</a> <em class="jxr_javadoccomment">     */</em>
<a class="jxr_linenumber" name="L256" href="#L256">256</a>     <strong class="jxr_keyword">private</strong> <strong class="jxr_keyword">boolean</strong> isNextInStep(<strong class="jxr_keyword">final</strong> T nextTime, <strong class="jxr_keyword">final</strong> FieldStepInterpolator&lt;T&gt; interpolator) {
<a class="jxr_linenumber" name="L257" href="#L257">257</a>         <strong class="jxr_keyword">return</strong> forward ?
<a class="jxr_linenumber" name="L258" href="#L258">258</a>                nextTime.getReal() &lt;= interpolator.getCurrentState().getTime().getReal() :
<a class="jxr_linenumber" name="L259" href="#L259">259</a>                nextTime.getReal() &gt;= interpolator.getCurrentState().getTime().getReal();
<a class="jxr_linenumber" name="L260" href="#L260">260</a>     }
<a class="jxr_linenumber" name="L261" href="#L261">261</a> 
<a class="jxr_linenumber" name="L262" href="#L262">262</a>     <em class="jxr_javadoccomment">/**</em>
<a class="jxr_linenumber" name="L263" href="#L263">263</a> <em class="jxr_javadoccomment">     * Invokes the underlying step handler for the current normalized step.</em>
<a class="jxr_linenumber" name="L264" href="#L264">264</a> <em class="jxr_javadoccomment">     * @param isLast true if the step is the last one</em>
<a class="jxr_linenumber" name="L265" href="#L265">265</a> <em class="jxr_javadoccomment">     */</em>
<a class="jxr_linenumber" name="L266" href="#L266">266</a>     <strong class="jxr_keyword">private</strong> <strong class="jxr_keyword">void</strong> doNormalizedStep(<strong class="jxr_keyword">final</strong> <strong class="jxr_keyword">boolean</strong> isLast) {
<a class="jxr_linenumber" name="L267" href="#L267">267</a>         <strong class="jxr_keyword">if</strong> (!bounds.firstIncluded() &amp;&amp; first.getTime().getReal() == last.getTime().getReal()) {
<a class="jxr_linenumber" name="L268" href="#L268">268</a>             <strong class="jxr_keyword">return</strong>;
<a class="jxr_linenumber" name="L269" href="#L269">269</a>         }
<a class="jxr_linenumber" name="L270" href="#L270">270</a>         handler.handleStep(last, isLast);
<a class="jxr_linenumber" name="L271" href="#L271">271</a>     }
<a class="jxr_linenumber" name="L272" href="#L272">272</a> 
<a class="jxr_linenumber" name="L273" href="#L273">273</a> }
</pre>
<hr/>
<div id="footer">Copyright &#169; 2003&#x2013;2016 <a href="http://www.apache.org/">The Apache Software Foundation</a>. All rights reserved.</div>
</body>
</html>
