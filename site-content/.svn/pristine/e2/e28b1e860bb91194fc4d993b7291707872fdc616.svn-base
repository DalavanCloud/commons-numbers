<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml" xml:lang="en" lang="en">
<head><meta http-equiv="content-type" content="text/html; charset=UTF-8" />
<title>HighamHall54FieldIntegrator xref</title>
<link type="text/css" rel="stylesheet" href="../../../../../../stylesheet.css" />
</head>
<body>
<div id="overview"><a href="../../../../../../../apidocs/org/apache/commons/math3/ode/nonstiff/HighamHall54FieldIntegrator.html">View Javadoc</a></div><pre>
<a class="jxr_linenumber" name="L1" href="#L1">1</a>   <em class="jxr_comment">/*</em>
<a class="jxr_linenumber" name="L2" href="#L2">2</a>   <em class="jxr_comment"> * Licensed to the Apache Software Foundation (ASF) under one or more</em>
<a class="jxr_linenumber" name="L3" href="#L3">3</a>   <em class="jxr_comment"> * contributor license agreements.  See the NOTICE file distributed with</em>
<a class="jxr_linenumber" name="L4" href="#L4">4</a>   <em class="jxr_comment"> * this work for additional information regarding copyright ownership.</em>
<a class="jxr_linenumber" name="L5" href="#L5">5</a>   <em class="jxr_comment"> * The ASF licenses this file to You under the Apache License, Version 2.0</em>
<a class="jxr_linenumber" name="L6" href="#L6">6</a>   <em class="jxr_comment"> * (the "License"); you may not use this file except in compliance with</em>
<a class="jxr_linenumber" name="L7" href="#L7">7</a>   <em class="jxr_comment"> * the License.  You may obtain a copy of the License at</em>
<a class="jxr_linenumber" name="L8" href="#L8">8</a>   <em class="jxr_comment"> *</em>
<a class="jxr_linenumber" name="L9" href="#L9">9</a>   <em class="jxr_comment"> *      <a href="http://www.apache.org/licenses/LICENSE-2." target="alexandria_uri">http://www.apache.org/licenses/LICENSE-2.</a>0</em>
<a class="jxr_linenumber" name="L10" href="#L10">10</a>  <em class="jxr_comment"> *</em>
<a class="jxr_linenumber" name="L11" href="#L11">11</a>  <em class="jxr_comment"> * Unless required by applicable law or agreed to in writing, software</em>
<a class="jxr_linenumber" name="L12" href="#L12">12</a>  <em class="jxr_comment"> * distributed under the License is distributed on an "AS IS" BASIS,</em>
<a class="jxr_linenumber" name="L13" href="#L13">13</a>  <em class="jxr_comment"> * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.</em>
<a class="jxr_linenumber" name="L14" href="#L14">14</a>  <em class="jxr_comment"> * See the License for the specific language governing permissions and</em>
<a class="jxr_linenumber" name="L15" href="#L15">15</a>  <em class="jxr_comment"> * limitations under the License.</em>
<a class="jxr_linenumber" name="L16" href="#L16">16</a>  <em class="jxr_comment"> */</em>
<a class="jxr_linenumber" name="L17" href="#L17">17</a>  
<a class="jxr_linenumber" name="L18" href="#L18">18</a>  <strong class="jxr_keyword">package</strong> org.apache.commons.math3.ode.nonstiff;
<a class="jxr_linenumber" name="L19" href="#L19">19</a>  
<a class="jxr_linenumber" name="L20" href="#L20">20</a>  <strong class="jxr_keyword">import</strong> org.apache.commons.math3.Field;
<a class="jxr_linenumber" name="L21" href="#L21">21</a>  <strong class="jxr_keyword">import</strong> org.apache.commons.math3.RealFieldElement;
<a class="jxr_linenumber" name="L22" href="#L22">22</a>  <strong class="jxr_keyword">import</strong> org.apache.commons.math3.ode.FieldEquationsMapper;
<a class="jxr_linenumber" name="L23" href="#L23">23</a>  <strong class="jxr_keyword">import</strong> org.apache.commons.math3.ode.FieldODEStateAndDerivative;
<a class="jxr_linenumber" name="L24" href="#L24">24</a>  <strong class="jxr_keyword">import</strong> org.apache.commons.math3.util.MathArrays;
<a class="jxr_linenumber" name="L25" href="#L25">25</a>  <strong class="jxr_keyword">import</strong> org.apache.commons.math3.util.MathUtils;
<a class="jxr_linenumber" name="L26" href="#L26">26</a>  
<a class="jxr_linenumber" name="L27" href="#L27">27</a>  
<a class="jxr_linenumber" name="L28" href="#L28">28</a>  <em class="jxr_javadoccomment">/**</em>
<a class="jxr_linenumber" name="L29" href="#L29">29</a>  <em class="jxr_javadoccomment"> * This class implements the 5(4) Higham and Hall integrator for</em>
<a class="jxr_linenumber" name="L30" href="#L30">30</a>  <em class="jxr_javadoccomment"> * Ordinary Differential Equations.</em>
<a class="jxr_linenumber" name="L31" href="#L31">31</a>  <em class="jxr_javadoccomment"> *</em>
<a class="jxr_linenumber" name="L32" href="#L32">32</a>  <em class="jxr_javadoccomment"> * &lt;p&gt;This integrator is an embedded Runge-Kutta integrator</em>
<a class="jxr_linenumber" name="L33" href="#L33">33</a>  <em class="jxr_javadoccomment"> * of order 5(4) used in local extrapolation mode (i.e. the solution</em>
<a class="jxr_linenumber" name="L34" href="#L34">34</a>  <em class="jxr_javadoccomment"> * is computed using the high order formula) with stepsize control</em>
<a class="jxr_linenumber" name="L35" href="#L35">35</a>  <em class="jxr_javadoccomment"> * (and automatic step initialization) and continuous output. This</em>
<a class="jxr_linenumber" name="L36" href="#L36">36</a>  <em class="jxr_javadoccomment"> * method uses 7 functions evaluations per step.&lt;/p&gt;</em>
<a class="jxr_linenumber" name="L37" href="#L37">37</a>  <em class="jxr_javadoccomment"> *</em>
<a class="jxr_linenumber" name="L38" href="#L38">38</a>  <em class="jxr_javadoccomment"> * @param &lt;T&gt; the type of the field elements</em>
<a class="jxr_linenumber" name="L39" href="#L39">39</a>  <em class="jxr_javadoccomment"> * @since 3.6</em>
<a class="jxr_linenumber" name="L40" href="#L40">40</a>  <em class="jxr_javadoccomment"> */</em>
<a class="jxr_linenumber" name="L41" href="#L41">41</a>  
<a class="jxr_linenumber" name="L42" href="#L42">42</a>  <strong class="jxr_keyword">public</strong> <strong class="jxr_keyword">class</strong> HighamHall54FieldIntegrator&lt;T <strong class="jxr_keyword">extends</strong> RealFieldElement&lt;T&gt;&gt;
<a class="jxr_linenumber" name="L43" href="#L43">43</a>      <strong class="jxr_keyword">extends</strong> EmbeddedRungeKuttaFieldIntegrator&lt;T&gt; {
<a class="jxr_linenumber" name="L44" href="#L44">44</a>  
<a class="jxr_linenumber" name="L45" href="#L45">45</a>      <em class="jxr_javadoccomment">/** Integrator method name. */</em>
<a class="jxr_linenumber" name="L46" href="#L46">46</a>      <strong class="jxr_keyword">private</strong> <strong class="jxr_keyword">static</strong> <strong class="jxr_keyword">final</strong> String METHOD_NAME = <span class="jxr_string">"Higham-Hall 5(4)"</span>;
<a class="jxr_linenumber" name="L47" href="#L47">47</a>  
<a class="jxr_linenumber" name="L48" href="#L48">48</a>      <em class="jxr_javadoccomment">/** Error weights Butcher array. */</em>
<a class="jxr_linenumber" name="L49" href="#L49">49</a>      <strong class="jxr_keyword">private</strong> <strong class="jxr_keyword">final</strong> T[] e ;
<a class="jxr_linenumber" name="L50" href="#L50">50</a>  
<a class="jxr_linenumber" name="L51" href="#L51">51</a>      <em class="jxr_javadoccomment">/** Simple constructor.</em>
<a class="jxr_linenumber" name="L52" href="#L52">52</a>  <em class="jxr_javadoccomment">     * Build a fifth order Higham and Hall integrator with the given step bounds</em>
<a class="jxr_linenumber" name="L53" href="#L53">53</a>  <em class="jxr_javadoccomment">     * @param field field to which the time and state vector elements belong</em>
<a class="jxr_linenumber" name="L54" href="#L54">54</a>  <em class="jxr_javadoccomment">     * @param minStep minimal step (sign is irrelevant, regardless of</em>
<a class="jxr_linenumber" name="L55" href="#L55">55</a>  <em class="jxr_javadoccomment">     * integration direction, forward or backward), the last step can</em>
<a class="jxr_linenumber" name="L56" href="#L56">56</a>  <em class="jxr_javadoccomment">     * be smaller than this</em>
<a class="jxr_linenumber" name="L57" href="#L57">57</a>  <em class="jxr_javadoccomment">     * @param maxStep maximal step (sign is irrelevant, regardless of</em>
<a class="jxr_linenumber" name="L58" href="#L58">58</a>  <em class="jxr_javadoccomment">     * integration direction, forward or backward), the last step can</em>
<a class="jxr_linenumber" name="L59" href="#L59">59</a>  <em class="jxr_javadoccomment">     * be smaller than this</em>
<a class="jxr_linenumber" name="L60" href="#L60">60</a>  <em class="jxr_javadoccomment">     * @param scalAbsoluteTolerance allowed absolute error</em>
<a class="jxr_linenumber" name="L61" href="#L61">61</a>  <em class="jxr_javadoccomment">     * @param scalRelativeTolerance allowed relative error</em>
<a class="jxr_linenumber" name="L62" href="#L62">62</a>  <em class="jxr_javadoccomment">     */</em>
<a class="jxr_linenumber" name="L63" href="#L63">63</a>      <strong class="jxr_keyword">public</strong> <a href="../../../../../../org/apache/commons/math3/ode/nonstiff/HighamHall54FieldIntegrator.html">HighamHall54FieldIntegrator</a>(<strong class="jxr_keyword">final</strong> Field&lt;T&gt; field,
<a class="jxr_linenumber" name="L64" href="#L64">64</a>                                         <strong class="jxr_keyword">final</strong> <strong class="jxr_keyword">double</strong> minStep, <strong class="jxr_keyword">final</strong> <strong class="jxr_keyword">double</strong> maxStep,
<a class="jxr_linenumber" name="L65" href="#L65">65</a>                                         <strong class="jxr_keyword">final</strong> <strong class="jxr_keyword">double</strong> scalAbsoluteTolerance,
<a class="jxr_linenumber" name="L66" href="#L66">66</a>                                         <strong class="jxr_keyword">final</strong> <strong class="jxr_keyword">double</strong> scalRelativeTolerance) {
<a class="jxr_linenumber" name="L67" href="#L67">67</a>          <strong class="jxr_keyword">super</strong>(field, METHOD_NAME, -1,
<a class="jxr_linenumber" name="L68" href="#L68">68</a>                minStep, maxStep, scalAbsoluteTolerance, scalRelativeTolerance);
<a class="jxr_linenumber" name="L69" href="#L69">69</a>          e = MathArrays.buildArray(field, 7);
<a class="jxr_linenumber" name="L70" href="#L70">70</a>          e[0] = fraction(-1,  20);
<a class="jxr_linenumber" name="L71" href="#L71">71</a>          e[1] = field.getZero();
<a class="jxr_linenumber" name="L72" href="#L72">72</a>          e[2] = fraction(81, 160);
<a class="jxr_linenumber" name="L73" href="#L73">73</a>          e[3] = fraction(-6,   5);
<a class="jxr_linenumber" name="L74" href="#L74">74</a>          e[4] = fraction(25,  32);
<a class="jxr_linenumber" name="L75" href="#L75">75</a>          e[5] = fraction( 1,  16);
<a class="jxr_linenumber" name="L76" href="#L76">76</a>          e[6] = fraction(-1,  10);
<a class="jxr_linenumber" name="L77" href="#L77">77</a>      }
<a class="jxr_linenumber" name="L78" href="#L78">78</a>  
<a class="jxr_linenumber" name="L79" href="#L79">79</a>      <em class="jxr_javadoccomment">/** Simple constructor.</em>
<a class="jxr_linenumber" name="L80" href="#L80">80</a>  <em class="jxr_javadoccomment">     * Build a fifth order Higham and Hall integrator with the given step bounds</em>
<a class="jxr_linenumber" name="L81" href="#L81">81</a>  <em class="jxr_javadoccomment">     * @param field field to which the time and state vector elements belong</em>
<a class="jxr_linenumber" name="L82" href="#L82">82</a>  <em class="jxr_javadoccomment">     * @param minStep minimal step (sign is irrelevant, regardless of</em>
<a class="jxr_linenumber" name="L83" href="#L83">83</a>  <em class="jxr_javadoccomment">     * integration direction, forward or backward), the last step can</em>
<a class="jxr_linenumber" name="L84" href="#L84">84</a>  <em class="jxr_javadoccomment">     * be smaller than this</em>
<a class="jxr_linenumber" name="L85" href="#L85">85</a>  <em class="jxr_javadoccomment">     * @param maxStep maximal step (sign is irrelevant, regardless of</em>
<a class="jxr_linenumber" name="L86" href="#L86">86</a>  <em class="jxr_javadoccomment">     * integration direction, forward or backward), the last step can</em>
<a class="jxr_linenumber" name="L87" href="#L87">87</a>  <em class="jxr_javadoccomment">     * be smaller than this</em>
<a class="jxr_linenumber" name="L88" href="#L88">88</a>  <em class="jxr_javadoccomment">     * @param vecAbsoluteTolerance allowed absolute error</em>
<a class="jxr_linenumber" name="L89" href="#L89">89</a>  <em class="jxr_javadoccomment">     * @param vecRelativeTolerance allowed relative error</em>
<a class="jxr_linenumber" name="L90" href="#L90">90</a>  <em class="jxr_javadoccomment">     */</em>
<a class="jxr_linenumber" name="L91" href="#L91">91</a>      <strong class="jxr_keyword">public</strong> <a href="../../../../../../org/apache/commons/math3/ode/nonstiff/HighamHall54FieldIntegrator.html">HighamHall54FieldIntegrator</a>(<strong class="jxr_keyword">final</strong> Field&lt;T&gt; field,
<a class="jxr_linenumber" name="L92" href="#L92">92</a>                                         <strong class="jxr_keyword">final</strong> <strong class="jxr_keyword">double</strong> minStep, <strong class="jxr_keyword">final</strong> <strong class="jxr_keyword">double</strong> maxStep,
<a class="jxr_linenumber" name="L93" href="#L93">93</a>                                         <strong class="jxr_keyword">final</strong> <strong class="jxr_keyword">double</strong>[] vecAbsoluteTolerance,
<a class="jxr_linenumber" name="L94" href="#L94">94</a>                                         <strong class="jxr_keyword">final</strong> <strong class="jxr_keyword">double</strong>[] vecRelativeTolerance) {
<a class="jxr_linenumber" name="L95" href="#L95">95</a>          <strong class="jxr_keyword">super</strong>(field, METHOD_NAME, -1,
<a class="jxr_linenumber" name="L96" href="#L96">96</a>                minStep, maxStep, vecAbsoluteTolerance, vecRelativeTolerance);
<a class="jxr_linenumber" name="L97" href="#L97">97</a>          e = MathArrays.buildArray(field, 7);
<a class="jxr_linenumber" name="L98" href="#L98">98</a>          e[0] = fraction(-1,  20);
<a class="jxr_linenumber" name="L99" href="#L99">99</a>          e[1] = field.getZero();
<a class="jxr_linenumber" name="L100" href="#L100">100</a>         e[2] = fraction(81, 160);
<a class="jxr_linenumber" name="L101" href="#L101">101</a>         e[3] = fraction(-6,   5);
<a class="jxr_linenumber" name="L102" href="#L102">102</a>         e[4] = fraction(25,  32);
<a class="jxr_linenumber" name="L103" href="#L103">103</a>         e[5] = fraction( 1,  16);
<a class="jxr_linenumber" name="L104" href="#L104">104</a>         e[6] = fraction(-1,  10);
<a class="jxr_linenumber" name="L105" href="#L105">105</a>     }
<a class="jxr_linenumber" name="L106" href="#L106">106</a> 
<a class="jxr_linenumber" name="L107" href="#L107">107</a>     <em class="jxr_javadoccomment">/** {@inheritDoc} */</em>
<a class="jxr_linenumber" name="L108" href="#L108">108</a>     <strong class="jxr_keyword">public</strong> T[] getC() {
<a class="jxr_linenumber" name="L109" href="#L109">109</a>         <strong class="jxr_keyword">final</strong> T[] c = MathArrays.buildArray(getField(), 6);
<a class="jxr_linenumber" name="L110" href="#L110">110</a>         c[0] = fraction(2, 9);
<a class="jxr_linenumber" name="L111" href="#L111">111</a>         c[1] = fraction(1, 3);
<a class="jxr_linenumber" name="L112" href="#L112">112</a>         c[2] = fraction(1, 2);
<a class="jxr_linenumber" name="L113" href="#L113">113</a>         c[3] = fraction(3, 5);
<a class="jxr_linenumber" name="L114" href="#L114">114</a>         c[4] = getField().getOne();
<a class="jxr_linenumber" name="L115" href="#L115">115</a>         c[5] = getField().getOne();
<a class="jxr_linenumber" name="L116" href="#L116">116</a>         <strong class="jxr_keyword">return</strong> c;
<a class="jxr_linenumber" name="L117" href="#L117">117</a>     }
<a class="jxr_linenumber" name="L118" href="#L118">118</a> 
<a class="jxr_linenumber" name="L119" href="#L119">119</a>     <em class="jxr_javadoccomment">/** {@inheritDoc} */</em>
<a class="jxr_linenumber" name="L120" href="#L120">120</a>     <strong class="jxr_keyword">public</strong> T[][] getA() {
<a class="jxr_linenumber" name="L121" href="#L121">121</a>         <strong class="jxr_keyword">final</strong> T[][] a = MathArrays.buildArray(getField(), 6, -1);
<a class="jxr_linenumber" name="L122" href="#L122">122</a>         <strong class="jxr_keyword">for</strong> (<strong class="jxr_keyword">int</strong> i = 0; i &lt; a.length; ++i) {
<a class="jxr_linenumber" name="L123" href="#L123">123</a>             a[i] = MathArrays.buildArray(getField(), i + 1);
<a class="jxr_linenumber" name="L124" href="#L124">124</a>         }
<a class="jxr_linenumber" name="L125" href="#L125">125</a>         a[0][0] = fraction(     2,     9);
<a class="jxr_linenumber" name="L126" href="#L126">126</a>         a[1][0] = fraction(     1,    12);
<a class="jxr_linenumber" name="L127" href="#L127">127</a>         a[1][1] = fraction(     1,     4);
<a class="jxr_linenumber" name="L128" href="#L128">128</a>         a[2][0] = fraction(     1,     8);
<a class="jxr_linenumber" name="L129" href="#L129">129</a>         a[2][1] = getField().getZero();
<a class="jxr_linenumber" name="L130" href="#L130">130</a>         a[2][2] = fraction(     3,     8);
<a class="jxr_linenumber" name="L131" href="#L131">131</a>         a[3][0] = fraction(    91,   500);
<a class="jxr_linenumber" name="L132" href="#L132">132</a>         a[3][1] = fraction(   -27,   100);
<a class="jxr_linenumber" name="L133" href="#L133">133</a>         a[3][2] = fraction(    78,   125);
<a class="jxr_linenumber" name="L134" href="#L134">134</a>         a[3][3] = fraction(     8,   125);
<a class="jxr_linenumber" name="L135" href="#L135">135</a>         a[4][0] = fraction(   -11,    20);
<a class="jxr_linenumber" name="L136" href="#L136">136</a>         a[4][1] = fraction(    27,    20);
<a class="jxr_linenumber" name="L137" href="#L137">137</a>         a[4][2] = fraction(    12,     5);
<a class="jxr_linenumber" name="L138" href="#L138">138</a>         a[4][3] = fraction(   -36,     5);
<a class="jxr_linenumber" name="L139" href="#L139">139</a>         a[4][4] = fraction(     5,     1);
<a class="jxr_linenumber" name="L140" href="#L140">140</a>         a[5][0] = fraction(     1,    12);
<a class="jxr_linenumber" name="L141" href="#L141">141</a>         a[5][1] = getField().getZero();
<a class="jxr_linenumber" name="L142" href="#L142">142</a>         a[5][2] = fraction(    27,    32);
<a class="jxr_linenumber" name="L143" href="#L143">143</a>         a[5][3] = fraction(    -4,     3);
<a class="jxr_linenumber" name="L144" href="#L144">144</a>         a[5][4] = fraction(   125,    96);
<a class="jxr_linenumber" name="L145" href="#L145">145</a>         a[5][5] = fraction(     5,    48);
<a class="jxr_linenumber" name="L146" href="#L146">146</a>         <strong class="jxr_keyword">return</strong> a;
<a class="jxr_linenumber" name="L147" href="#L147">147</a>     }
<a class="jxr_linenumber" name="L148" href="#L148">148</a> 
<a class="jxr_linenumber" name="L149" href="#L149">149</a>     <em class="jxr_javadoccomment">/** {@inheritDoc} */</em>
<a class="jxr_linenumber" name="L150" href="#L150">150</a>     <strong class="jxr_keyword">public</strong> T[] getB() {
<a class="jxr_linenumber" name="L151" href="#L151">151</a>         <strong class="jxr_keyword">final</strong> T[] b = MathArrays.buildArray(getField(), 7);
<a class="jxr_linenumber" name="L152" href="#L152">152</a>         b[0] = fraction(  1, 12);
<a class="jxr_linenumber" name="L153" href="#L153">153</a>         b[1] = getField().getZero();
<a class="jxr_linenumber" name="L154" href="#L154">154</a>         b[2] = fraction( 27, 32);
<a class="jxr_linenumber" name="L155" href="#L155">155</a>         b[3] = fraction( -4,  3);
<a class="jxr_linenumber" name="L156" href="#L156">156</a>         b[4] = fraction(125, 96);
<a class="jxr_linenumber" name="L157" href="#L157">157</a>         b[5] = fraction(  5, 48);
<a class="jxr_linenumber" name="L158" href="#L158">158</a>         b[6] = getField().getZero();
<a class="jxr_linenumber" name="L159" href="#L159">159</a>         <strong class="jxr_keyword">return</strong> b;
<a class="jxr_linenumber" name="L160" href="#L160">160</a>     }
<a class="jxr_linenumber" name="L161" href="#L161">161</a> 
<a class="jxr_linenumber" name="L162" href="#L162">162</a>     <em class="jxr_javadoccomment">/** {@inheritDoc} */</em>
<a class="jxr_linenumber" name="L163" href="#L163">163</a>     @Override
<a class="jxr_linenumber" name="L164" href="#L164">164</a>     <strong class="jxr_keyword">protected</strong> HighamHall54FieldStepInterpolator&lt;T&gt;
<a class="jxr_linenumber" name="L165" href="#L165">165</a>         createInterpolator(<strong class="jxr_keyword">final</strong> <strong class="jxr_keyword">boolean</strong> forward, T[][] yDotK,
<a class="jxr_linenumber" name="L166" href="#L166">166</a>                            <strong class="jxr_keyword">final</strong> FieldODEStateAndDerivative&lt;T&gt; globalPreviousState,
<a class="jxr_linenumber" name="L167" href="#L167">167</a>                            <strong class="jxr_keyword">final</strong> FieldODEStateAndDerivative&lt;T&gt; globalCurrentState, <strong class="jxr_keyword">final</strong> FieldEquationsMapper&lt;T&gt; mapper) {
<a class="jxr_linenumber" name="L168" href="#L168">168</a>         <strong class="jxr_keyword">return</strong> <strong class="jxr_keyword">new</strong> HighamHall54FieldStepInterpolator&lt;T&gt;(getField(), forward, yDotK,
<a class="jxr_linenumber" name="L169" href="#L169">169</a>                                                         globalPreviousState, globalCurrentState,
<a class="jxr_linenumber" name="L170" href="#L170">170</a>                                                         globalPreviousState, globalCurrentState,
<a class="jxr_linenumber" name="L171" href="#L171">171</a>                                                         mapper);
<a class="jxr_linenumber" name="L172" href="#L172">172</a>     }
<a class="jxr_linenumber" name="L173" href="#L173">173</a> 
<a class="jxr_linenumber" name="L174" href="#L174">174</a>     <em class="jxr_javadoccomment">/** {@inheritDoc} */</em>
<a class="jxr_linenumber" name="L175" href="#L175">175</a>     @Override
<a class="jxr_linenumber" name="L176" href="#L176">176</a>     <strong class="jxr_keyword">public</strong> <strong class="jxr_keyword">int</strong> getOrder() {
<a class="jxr_linenumber" name="L177" href="#L177">177</a>         <strong class="jxr_keyword">return</strong> 5;
<a class="jxr_linenumber" name="L178" href="#L178">178</a>     }
<a class="jxr_linenumber" name="L179" href="#L179">179</a> 
<a class="jxr_linenumber" name="L180" href="#L180">180</a>     <em class="jxr_javadoccomment">/** {@inheritDoc} */</em>
<a class="jxr_linenumber" name="L181" href="#L181">181</a>     @Override
<a class="jxr_linenumber" name="L182" href="#L182">182</a>     <strong class="jxr_keyword">protected</strong> T estimateError(<strong class="jxr_keyword">final</strong> T[][] yDotK, <strong class="jxr_keyword">final</strong> T[] y0, <strong class="jxr_keyword">final</strong> T[] y1, <strong class="jxr_keyword">final</strong> T h) {
<a class="jxr_linenumber" name="L183" href="#L183">183</a> 
<a class="jxr_linenumber" name="L184" href="#L184">184</a>         T error = getField().getZero();
<a class="jxr_linenumber" name="L185" href="#L185">185</a> 
<a class="jxr_linenumber" name="L186" href="#L186">186</a>         <strong class="jxr_keyword">for</strong> (<strong class="jxr_keyword">int</strong> j = 0; j &lt; mainSetDimension; ++j) {
<a class="jxr_linenumber" name="L187" href="#L187">187</a>             T errSum = yDotK[0][j].multiply(e[0]);
<a class="jxr_linenumber" name="L188" href="#L188">188</a>             <strong class="jxr_keyword">for</strong> (<strong class="jxr_keyword">int</strong> l = 1; l &lt; e.length; ++l) {
<a class="jxr_linenumber" name="L189" href="#L189">189</a>                 errSum = errSum.add(yDotK[l][j].multiply(e[l]));
<a class="jxr_linenumber" name="L190" href="#L190">190</a>             }
<a class="jxr_linenumber" name="L191" href="#L191">191</a> 
<a class="jxr_linenumber" name="L192" href="#L192">192</a>             <strong class="jxr_keyword">final</strong> T yScale = MathUtils.max(y0[j].abs(), y1[j].abs());
<a class="jxr_linenumber" name="L193" href="#L193">193</a>             <strong class="jxr_keyword">final</strong> T tol    = (vecAbsoluteTolerance == <strong class="jxr_keyword">null</strong>) ?
<a class="jxr_linenumber" name="L194" href="#L194">194</a>                              yScale.multiply(scalRelativeTolerance).add(scalAbsoluteTolerance) :
<a class="jxr_linenumber" name="L195" href="#L195">195</a>                              yScale.multiply(vecRelativeTolerance[j]).add(vecAbsoluteTolerance[j]);
<a class="jxr_linenumber" name="L196" href="#L196">196</a>             <strong class="jxr_keyword">final</strong> T ratio  = h.multiply(errSum).divide(tol);
<a class="jxr_linenumber" name="L197" href="#L197">197</a>             error = error.add(ratio.multiply(ratio));
<a class="jxr_linenumber" name="L198" href="#L198">198</a> 
<a class="jxr_linenumber" name="L199" href="#L199">199</a>         }
<a class="jxr_linenumber" name="L200" href="#L200">200</a> 
<a class="jxr_linenumber" name="L201" href="#L201">201</a>         <strong class="jxr_keyword">return</strong> error.divide(mainSetDimension).sqrt();
<a class="jxr_linenumber" name="L202" href="#L202">202</a> 
<a class="jxr_linenumber" name="L203" href="#L203">203</a>     }
<a class="jxr_linenumber" name="L204" href="#L204">204</a> 
<a class="jxr_linenumber" name="L205" href="#L205">205</a> }
</pre>
<hr/>
<div id="footer">Copyright &#169; 2003&#x2013;2016 <a href="http://www.apache.org/">The Apache Software Foundation</a>. All rights reserved.</div>
</body>
</html>
