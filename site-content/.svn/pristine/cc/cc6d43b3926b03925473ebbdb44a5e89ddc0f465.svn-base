<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml" xml:lang="en" lang="en">
<head><meta http-equiv="content-type" content="text/html; charset=UTF-8" />
<title>SaddlePointExpansion xref</title>
<link type="text/css" rel="stylesheet" href="../../../../../stylesheet.css" />
</head>
<body>
<div id="overview"><a href="../../../../../../apidocs/org/apache/commons/math3/distribution/SaddlePointExpansion.html">View Javadoc</a></div><pre>
<a class="jxr_linenumber" name="L1" href="#L1">1</a>   <em class="jxr_comment">/*</em>
<a class="jxr_linenumber" name="L2" href="#L2">2</a>   <em class="jxr_comment"> * Licensed to the Apache Software Foundation (ASF) under one or more</em>
<a class="jxr_linenumber" name="L3" href="#L3">3</a>   <em class="jxr_comment"> * contributor license agreements.  See the NOTICE file distributed with</em>
<a class="jxr_linenumber" name="L4" href="#L4">4</a>   <em class="jxr_comment"> * this work for additional information regarding copyright ownership.</em>
<a class="jxr_linenumber" name="L5" href="#L5">5</a>   <em class="jxr_comment"> * The ASF licenses this file to You under the Apache License, Version 2.0</em>
<a class="jxr_linenumber" name="L6" href="#L6">6</a>   <em class="jxr_comment"> * (the "License"); you may not use this file except in compliance with</em>
<a class="jxr_linenumber" name="L7" href="#L7">7</a>   <em class="jxr_comment"> * the License.  You may obtain a copy of the License at</em>
<a class="jxr_linenumber" name="L8" href="#L8">8</a>   <em class="jxr_comment"> *</em>
<a class="jxr_linenumber" name="L9" href="#L9">9</a>   <em class="jxr_comment"> *      <a href="http://www.apache.org/licenses/LICENSE-2." target="alexandria_uri">http://www.apache.org/licenses/LICENSE-2.</a>0</em>
<a class="jxr_linenumber" name="L10" href="#L10">10</a>  <em class="jxr_comment"> *</em>
<a class="jxr_linenumber" name="L11" href="#L11">11</a>  <em class="jxr_comment"> * Unless required by applicable law or agreed to in writing, software</em>
<a class="jxr_linenumber" name="L12" href="#L12">12</a>  <em class="jxr_comment"> * distributed under the License is distributed on an "AS IS" BASIS,</em>
<a class="jxr_linenumber" name="L13" href="#L13">13</a>  <em class="jxr_comment"> * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.</em>
<a class="jxr_linenumber" name="L14" href="#L14">14</a>  <em class="jxr_comment"> * See the License for the specific language governing permissions and</em>
<a class="jxr_linenumber" name="L15" href="#L15">15</a>  <em class="jxr_comment"> * limitations under the License.</em>
<a class="jxr_linenumber" name="L16" href="#L16">16</a>  <em class="jxr_comment"> */</em>
<a class="jxr_linenumber" name="L17" href="#L17">17</a>  <strong class="jxr_keyword">package</strong> org.apache.commons.math3.distribution;
<a class="jxr_linenumber" name="L18" href="#L18">18</a>  
<a class="jxr_linenumber" name="L19" href="#L19">19</a>  <strong class="jxr_keyword">import</strong> org.apache.commons.math3.special.Gamma;
<a class="jxr_linenumber" name="L20" href="#L20">20</a>  <strong class="jxr_keyword">import</strong> org.apache.commons.math3.util.FastMath;
<a class="jxr_linenumber" name="L21" href="#L21">21</a>  <strong class="jxr_keyword">import</strong> org.apache.commons.math3.util.MathUtils;
<a class="jxr_linenumber" name="L22" href="#L22">22</a>  
<a class="jxr_linenumber" name="L23" href="#L23">23</a>  <em class="jxr_javadoccomment">/**</em>
<a class="jxr_linenumber" name="L24" href="#L24">24</a>  <em class="jxr_javadoccomment"> * &lt;p&gt;</em>
<a class="jxr_linenumber" name="L25" href="#L25">25</a>  <em class="jxr_javadoccomment"> * Utility class used by various distributions to accurately compute their</em>
<a class="jxr_linenumber" name="L26" href="#L26">26</a>  <em class="jxr_javadoccomment"> * respective probability mass functions. The implementation for this class is</em>
<a class="jxr_linenumber" name="L27" href="#L27">27</a>  <em class="jxr_javadoccomment"> * based on the Catherine Loader's &lt;a target="_blank"</em>
<a class="jxr_linenumber" name="L28" href="#L28">28</a>  <em class="jxr_javadoccomment"> * href="<a href="http://www.herine.net/stat/software/dbinom.html" target="alexandria_uri">http://www.herine.net/stat/software/dbinom.html</a>"&gt;dbinom&lt;/a&gt; routines.</em>
<a class="jxr_linenumber" name="L29" href="#L29">29</a>  <em class="jxr_javadoccomment"> * &lt;/p&gt;</em>
<a class="jxr_linenumber" name="L30" href="#L30">30</a>  <em class="jxr_javadoccomment"> * &lt;p&gt;</em>
<a class="jxr_linenumber" name="L31" href="#L31">31</a>  <em class="jxr_javadoccomment"> * This class is not intended to be called directly.</em>
<a class="jxr_linenumber" name="L32" href="#L32">32</a>  <em class="jxr_javadoccomment"> * &lt;/p&gt;</em>
<a class="jxr_linenumber" name="L33" href="#L33">33</a>  <em class="jxr_javadoccomment"> * &lt;p&gt;</em>
<a class="jxr_linenumber" name="L34" href="#L34">34</a>  <em class="jxr_javadoccomment"> * References:</em>
<a class="jxr_linenumber" name="L35" href="#L35">35</a>  <em class="jxr_javadoccomment"> * &lt;ol&gt;</em>
<a class="jxr_linenumber" name="L36" href="#L36">36</a>  <em class="jxr_javadoccomment"> * &lt;li&gt;Catherine Loader (2000). "Fast and Accurate Computation of Binomial</em>
<a class="jxr_linenumber" name="L37" href="#L37">37</a>  <em class="jxr_javadoccomment"> * Probabilities.". &lt;a target="_blank"</em>
<a class="jxr_linenumber" name="L38" href="#L38">38</a>  <em class="jxr_javadoccomment"> * href="<a href="http://www.herine.net/stat/papers/dbinom.pdf" target="alexandria_uri">http://www.herine.net/stat/papers/dbinom.pdf</a>"&gt;</em>
<a class="jxr_linenumber" name="L39" href="#L39">39</a>  <em class="jxr_javadoccomment"> * <a href="http://www.herine.net/stat/papers/dbinom.pdf&lt;/a&gt;&lt;/li&gt" target="alexandria_uri">http://www.herine.net/stat/papers/dbinom.pdf&lt;/a&gt;&lt;/li&gt</a>;</em>
<a class="jxr_linenumber" name="L40" href="#L40">40</a>  <em class="jxr_javadoccomment"> * &lt;/ol&gt;</em>
<a class="jxr_linenumber" name="L41" href="#L41">41</a>  <em class="jxr_javadoccomment"> * &lt;/p&gt;</em>
<a class="jxr_linenumber" name="L42" href="#L42">42</a>  <em class="jxr_javadoccomment"> *</em>
<a class="jxr_linenumber" name="L43" href="#L43">43</a>  <em class="jxr_javadoccomment"> * @since 2.1</em>
<a class="jxr_linenumber" name="L44" href="#L44">44</a>  <em class="jxr_javadoccomment"> */</em>
<a class="jxr_linenumber" name="L45" href="#L45">45</a>  <strong class="jxr_keyword">final</strong> <strong class="jxr_keyword">class</strong> <a href="../../../../../org/apache/commons/math3/distribution/SaddlePointExpansion.html">SaddlePointExpansion</a> {
<a class="jxr_linenumber" name="L46" href="#L46">46</a>  
<a class="jxr_linenumber" name="L47" href="#L47">47</a>      <em class="jxr_javadoccomment">/** 1/2 * log(2 &amp;#960;). */</em>
<a class="jxr_linenumber" name="L48" href="#L48">48</a>      <strong class="jxr_keyword">private</strong> <strong class="jxr_keyword">static</strong> <strong class="jxr_keyword">final</strong> <strong class="jxr_keyword">double</strong> HALF_LOG_2_PI = 0.5 * FastMath.log(MathUtils.TWO_PI);
<a class="jxr_linenumber" name="L49" href="#L49">49</a>  
<a class="jxr_linenumber" name="L50" href="#L50">50</a>      <em class="jxr_javadoccomment">/** exact Stirling expansion error for certain values. */</em>
<a class="jxr_linenumber" name="L51" href="#L51">51</a>      <strong class="jxr_keyword">private</strong> <strong class="jxr_keyword">static</strong> <strong class="jxr_keyword">final</strong> <strong class="jxr_keyword">double</strong>[] EXACT_STIRLING_ERRORS = { 0.0, <em class="jxr_comment">/* 0.0 */</em>
<a class="jxr_linenumber" name="L52" href="#L52">52</a>      0.1534264097200273452913848, <em class="jxr_comment">/* 0.5 */</em>
<a class="jxr_linenumber" name="L53" href="#L53">53</a>      0.0810614667953272582196702, <em class="jxr_comment">/* 1.0 */</em>
<a class="jxr_linenumber" name="L54" href="#L54">54</a>      0.0548141210519176538961390, <em class="jxr_comment">/* 1.5 */</em>
<a class="jxr_linenumber" name="L55" href="#L55">55</a>      0.0413406959554092940938221, <em class="jxr_comment">/* 2.0 */</em>
<a class="jxr_linenumber" name="L56" href="#L56">56</a>      0.03316287351993628748511048, <em class="jxr_comment">/* 2.5 */</em>
<a class="jxr_linenumber" name="L57" href="#L57">57</a>      0.02767792568499833914878929, <em class="jxr_comment">/* 3.0 */</em>
<a class="jxr_linenumber" name="L58" href="#L58">58</a>      0.02374616365629749597132920, <em class="jxr_comment">/* 3.5 */</em>
<a class="jxr_linenumber" name="L59" href="#L59">59</a>      0.02079067210376509311152277, <em class="jxr_comment">/* 4.0 */</em>
<a class="jxr_linenumber" name="L60" href="#L60">60</a>      0.01848845053267318523077934, <em class="jxr_comment">/* 4.5 */</em>
<a class="jxr_linenumber" name="L61" href="#L61">61</a>      0.01664469118982119216319487, <em class="jxr_comment">/* 5.0 */</em>
<a class="jxr_linenumber" name="L62" href="#L62">62</a>      0.01513497322191737887351255, <em class="jxr_comment">/* 5.5 */</em>
<a class="jxr_linenumber" name="L63" href="#L63">63</a>      0.01387612882307074799874573, <em class="jxr_comment">/* 6.0 */</em>
<a class="jxr_linenumber" name="L64" href="#L64">64</a>      0.01281046524292022692424986, <em class="jxr_comment">/* 6.5 */</em>
<a class="jxr_linenumber" name="L65" href="#L65">65</a>      0.01189670994589177009505572, <em class="jxr_comment">/* 7.0 */</em>
<a class="jxr_linenumber" name="L66" href="#L66">66</a>      0.01110455975820691732662991, <em class="jxr_comment">/* 7.5 */</em>
<a class="jxr_linenumber" name="L67" href="#L67">67</a>      0.010411265261972096497478567, <em class="jxr_comment">/* 8.0 */</em>
<a class="jxr_linenumber" name="L68" href="#L68">68</a>      0.009799416126158803298389475, <em class="jxr_comment">/* 8.5 */</em>
<a class="jxr_linenumber" name="L69" href="#L69">69</a>      0.009255462182712732917728637, <em class="jxr_comment">/* 9.0 */</em>
<a class="jxr_linenumber" name="L70" href="#L70">70</a>      0.008768700134139385462952823, <em class="jxr_comment">/* 9.5 */</em>
<a class="jxr_linenumber" name="L71" href="#L71">71</a>      0.008330563433362871256469318, <em class="jxr_comment">/* 10.0 */</em>
<a class="jxr_linenumber" name="L72" href="#L72">72</a>      0.007934114564314020547248100, <em class="jxr_comment">/* 10.5 */</em>
<a class="jxr_linenumber" name="L73" href="#L73">73</a>      0.007573675487951840794972024, <em class="jxr_comment">/* 11.0 */</em>
<a class="jxr_linenumber" name="L74" href="#L74">74</a>      0.007244554301320383179543912, <em class="jxr_comment">/* 11.5 */</em>
<a class="jxr_linenumber" name="L75" href="#L75">75</a>      0.006942840107209529865664152, <em class="jxr_comment">/* 12.0 */</em>
<a class="jxr_linenumber" name="L76" href="#L76">76</a>      0.006665247032707682442354394, <em class="jxr_comment">/* 12.5 */</em>
<a class="jxr_linenumber" name="L77" href="#L77">77</a>      0.006408994188004207068439631, <em class="jxr_comment">/* 13.0 */</em>
<a class="jxr_linenumber" name="L78" href="#L78">78</a>      0.006171712263039457647532867, <em class="jxr_comment">/* 13.5 */</em>
<a class="jxr_linenumber" name="L79" href="#L79">79</a>      0.005951370112758847735624416, <em class="jxr_comment">/* 14.0 */</em>
<a class="jxr_linenumber" name="L80" href="#L80">80</a>      0.005746216513010115682023589, <em class="jxr_comment">/* 14.5 */</em>
<a class="jxr_linenumber" name="L81" href="#L81">81</a>      0.005554733551962801371038690 <em class="jxr_comment">/* 15.0 */</em>
<a class="jxr_linenumber" name="L82" href="#L82">82</a>      };
<a class="jxr_linenumber" name="L83" href="#L83">83</a>  
<a class="jxr_linenumber" name="L84" href="#L84">84</a>      <em class="jxr_javadoccomment">/**</em>
<a class="jxr_linenumber" name="L85" href="#L85">85</a>  <em class="jxr_javadoccomment">     * Default constructor.</em>
<a class="jxr_linenumber" name="L86" href="#L86">86</a>  <em class="jxr_javadoccomment">     */</em>
<a class="jxr_linenumber" name="L87" href="#L87">87</a>      <strong class="jxr_keyword">private</strong> <a href="../../../../../org/apache/commons/math3/distribution/SaddlePointExpansion.html">SaddlePointExpansion</a>() {
<a class="jxr_linenumber" name="L88" href="#L88">88</a>          <strong class="jxr_keyword">super</strong>();
<a class="jxr_linenumber" name="L89" href="#L89">89</a>      }
<a class="jxr_linenumber" name="L90" href="#L90">90</a>  
<a class="jxr_linenumber" name="L91" href="#L91">91</a>      <em class="jxr_javadoccomment">/**</em>
<a class="jxr_linenumber" name="L92" href="#L92">92</a>  <em class="jxr_javadoccomment">     * Compute the error of Stirling's series at the given value.</em>
<a class="jxr_linenumber" name="L93" href="#L93">93</a>  <em class="jxr_javadoccomment">     * &lt;p&gt;</em>
<a class="jxr_linenumber" name="L94" href="#L94">94</a>  <em class="jxr_javadoccomment">     * References:</em>
<a class="jxr_linenumber" name="L95" href="#L95">95</a>  <em class="jxr_javadoccomment">     * &lt;ol&gt;</em>
<a class="jxr_linenumber" name="L96" href="#L96">96</a>  <em class="jxr_javadoccomment">     * &lt;li&gt;Eric W. Weisstein. "Stirling's Series." From MathWorld--A Wolfram Web</em>
<a class="jxr_linenumber" name="L97" href="#L97">97</a>  <em class="jxr_javadoccomment">     * Resource. &lt;a target="_blank"</em>
<a class="jxr_linenumber" name="L98" href="#L98">98</a>  <em class="jxr_javadoccomment">     * href="<a href="http://mathworld.wolfram.com/StirlingsSeries.html" target="alexandria_uri">http://mathworld.wolfram.com/StirlingsSeries.html</a>"&gt;</em>
<a class="jxr_linenumber" name="L99" href="#L99">99</a>  <em class="jxr_javadoccomment">     * <a href="http://mathworld.wolfram.com/StirlingsSeries.html&lt;/a&gt;&lt;/li&gt" target="alexandria_uri">http://mathworld.wolfram.com/StirlingsSeries.html&lt;/a&gt;&lt;/li&gt</a>;</em>
<a class="jxr_linenumber" name="L100" href="#L100">100</a> <em class="jxr_javadoccomment">     * &lt;/ol&gt;</em>
<a class="jxr_linenumber" name="L101" href="#L101">101</a> <em class="jxr_javadoccomment">     * &lt;/p&gt;</em>
<a class="jxr_linenumber" name="L102" href="#L102">102</a> <em class="jxr_javadoccomment">     *</em>
<a class="jxr_linenumber" name="L103" href="#L103">103</a> <em class="jxr_javadoccomment">     * @param z the value.</em>
<a class="jxr_linenumber" name="L104" href="#L104">104</a> <em class="jxr_javadoccomment">     * @return the Striling's series error.</em>
<a class="jxr_linenumber" name="L105" href="#L105">105</a> <em class="jxr_javadoccomment">     */</em>
<a class="jxr_linenumber" name="L106" href="#L106">106</a>     <strong class="jxr_keyword">static</strong> <strong class="jxr_keyword">double</strong> getStirlingError(<strong class="jxr_keyword">double</strong> z) {
<a class="jxr_linenumber" name="L107" href="#L107">107</a>         <strong class="jxr_keyword">double</strong> ret;
<a class="jxr_linenumber" name="L108" href="#L108">108</a>         <strong class="jxr_keyword">if</strong> (z &lt; 15.0) {
<a class="jxr_linenumber" name="L109" href="#L109">109</a>             <strong class="jxr_keyword">double</strong> z2 = 2.0 * z;
<a class="jxr_linenumber" name="L110" href="#L110">110</a>             <strong class="jxr_keyword">if</strong> (FastMath.floor(z2) == z2) {
<a class="jxr_linenumber" name="L111" href="#L111">111</a>                 ret = EXACT_STIRLING_ERRORS[(<strong class="jxr_keyword">int</strong>) z2];
<a class="jxr_linenumber" name="L112" href="#L112">112</a>             } <strong class="jxr_keyword">else</strong> {
<a class="jxr_linenumber" name="L113" href="#L113">113</a>                 ret = Gamma.logGamma(z + 1.0) - (z + 0.5) * FastMath.log(z) +
<a class="jxr_linenumber" name="L114" href="#L114">114</a>                       z - HALF_LOG_2_PI;
<a class="jxr_linenumber" name="L115" href="#L115">115</a>             }
<a class="jxr_linenumber" name="L116" href="#L116">116</a>         } <strong class="jxr_keyword">else</strong> {
<a class="jxr_linenumber" name="L117" href="#L117">117</a>             <strong class="jxr_keyword">double</strong> z2 = z * z;
<a class="jxr_linenumber" name="L118" href="#L118">118</a>             ret = (0.083333333333333333333 -
<a class="jxr_linenumber" name="L119" href="#L119">119</a>                     (0.00277777777777777777778 -
<a class="jxr_linenumber" name="L120" href="#L120">120</a>                             (0.00079365079365079365079365 -
<a class="jxr_linenumber" name="L121" href="#L121">121</a>                                     (0.000595238095238095238095238 -
<a class="jxr_linenumber" name="L122" href="#L122">122</a>                                             0.0008417508417508417508417508 /
<a class="jxr_linenumber" name="L123" href="#L123">123</a>                                             z2) / z2) / z2) / z2) / z;
<a class="jxr_linenumber" name="L124" href="#L124">124</a>         }
<a class="jxr_linenumber" name="L125" href="#L125">125</a>         <strong class="jxr_keyword">return</strong> ret;
<a class="jxr_linenumber" name="L126" href="#L126">126</a>     }
<a class="jxr_linenumber" name="L127" href="#L127">127</a> 
<a class="jxr_linenumber" name="L128" href="#L128">128</a>     <em class="jxr_javadoccomment">/**</em>
<a class="jxr_linenumber" name="L129" href="#L129">129</a> <em class="jxr_javadoccomment">     * A part of the deviance portion of the saddle point approximation.</em>
<a class="jxr_linenumber" name="L130" href="#L130">130</a> <em class="jxr_javadoccomment">     * &lt;p&gt;</em>
<a class="jxr_linenumber" name="L131" href="#L131">131</a> <em class="jxr_javadoccomment">     * References:</em>
<a class="jxr_linenumber" name="L132" href="#L132">132</a> <em class="jxr_javadoccomment">     * &lt;ol&gt;</em>
<a class="jxr_linenumber" name="L133" href="#L133">133</a> <em class="jxr_javadoccomment">     * &lt;li&gt;Catherine Loader (2000). "Fast and Accurate Computation of Binomial</em>
<a class="jxr_linenumber" name="L134" href="#L134">134</a> <em class="jxr_javadoccomment">     * Probabilities.". &lt;a target="_blank"</em>
<a class="jxr_linenumber" name="L135" href="#L135">135</a> <em class="jxr_javadoccomment">     * href="<a href="http://www.herine.net/stat/papers/dbinom.pdf" target="alexandria_uri">http://www.herine.net/stat/papers/dbinom.pdf</a>"&gt;</em>
<a class="jxr_linenumber" name="L136" href="#L136">136</a> <em class="jxr_javadoccomment">     * <a href="http://www.herine.net/stat/papers/dbinom.pdf&lt;/a&gt;&lt;/li&gt" target="alexandria_uri">http://www.herine.net/stat/papers/dbinom.pdf&lt;/a&gt;&lt;/li&gt</a>;</em>
<a class="jxr_linenumber" name="L137" href="#L137">137</a> <em class="jxr_javadoccomment">     * &lt;/ol&gt;</em>
<a class="jxr_linenumber" name="L138" href="#L138">138</a> <em class="jxr_javadoccomment">     * &lt;/p&gt;</em>
<a class="jxr_linenumber" name="L139" href="#L139">139</a> <em class="jxr_javadoccomment">     *</em>
<a class="jxr_linenumber" name="L140" href="#L140">140</a> <em class="jxr_javadoccomment">     * @param x the x value.</em>
<a class="jxr_linenumber" name="L141" href="#L141">141</a> <em class="jxr_javadoccomment">     * @param mu the average.</em>
<a class="jxr_linenumber" name="L142" href="#L142">142</a> <em class="jxr_javadoccomment">     * @return a part of the deviance.</em>
<a class="jxr_linenumber" name="L143" href="#L143">143</a> <em class="jxr_javadoccomment">     */</em>
<a class="jxr_linenumber" name="L144" href="#L144">144</a>     <strong class="jxr_keyword">static</strong> <strong class="jxr_keyword">double</strong> getDeviancePart(<strong class="jxr_keyword">double</strong> x, <strong class="jxr_keyword">double</strong> mu) {
<a class="jxr_linenumber" name="L145" href="#L145">145</a>         <strong class="jxr_keyword">double</strong> ret;
<a class="jxr_linenumber" name="L146" href="#L146">146</a>         <strong class="jxr_keyword">if</strong> (FastMath.abs(x - mu) &lt; 0.1 * (x + mu)) {
<a class="jxr_linenumber" name="L147" href="#L147">147</a>             <strong class="jxr_keyword">double</strong> d = x - mu;
<a class="jxr_linenumber" name="L148" href="#L148">148</a>             <strong class="jxr_keyword">double</strong> v = d / (x + mu);
<a class="jxr_linenumber" name="L149" href="#L149">149</a>             <strong class="jxr_keyword">double</strong> s1 = v * d;
<a class="jxr_linenumber" name="L150" href="#L150">150</a>             <strong class="jxr_keyword">double</strong> s = Double.NaN;
<a class="jxr_linenumber" name="L151" href="#L151">151</a>             <strong class="jxr_keyword">double</strong> ej = 2.0 * x * v;
<a class="jxr_linenumber" name="L152" href="#L152">152</a>             v *= v;
<a class="jxr_linenumber" name="L153" href="#L153">153</a>             <strong class="jxr_keyword">int</strong> j = 1;
<a class="jxr_linenumber" name="L154" href="#L154">154</a>             <strong class="jxr_keyword">while</strong> (s1 != s) {
<a class="jxr_linenumber" name="L155" href="#L155">155</a>                 s = s1;
<a class="jxr_linenumber" name="L156" href="#L156">156</a>                 ej *= v;
<a class="jxr_linenumber" name="L157" href="#L157">157</a>                 s1 = s + ej / ((j * 2) + 1);
<a class="jxr_linenumber" name="L158" href="#L158">158</a>                 ++j;
<a class="jxr_linenumber" name="L159" href="#L159">159</a>             }
<a class="jxr_linenumber" name="L160" href="#L160">160</a>             ret = s1;
<a class="jxr_linenumber" name="L161" href="#L161">161</a>         } <strong class="jxr_keyword">else</strong> {
<a class="jxr_linenumber" name="L162" href="#L162">162</a>             ret = x * FastMath.log(x / mu) + mu - x;
<a class="jxr_linenumber" name="L163" href="#L163">163</a>         }
<a class="jxr_linenumber" name="L164" href="#L164">164</a>         <strong class="jxr_keyword">return</strong> ret;
<a class="jxr_linenumber" name="L165" href="#L165">165</a>     }
<a class="jxr_linenumber" name="L166" href="#L166">166</a> 
<a class="jxr_linenumber" name="L167" href="#L167">167</a>     <em class="jxr_javadoccomment">/**</em>
<a class="jxr_linenumber" name="L168" href="#L168">168</a> <em class="jxr_javadoccomment">     * Compute the logarithm of the PMF for a binomial distribution</em>
<a class="jxr_linenumber" name="L169" href="#L169">169</a> <em class="jxr_javadoccomment">     * using the saddle point expansion.</em>
<a class="jxr_linenumber" name="L170" href="#L170">170</a> <em class="jxr_javadoccomment">     *</em>
<a class="jxr_linenumber" name="L171" href="#L171">171</a> <em class="jxr_javadoccomment">     * @param x the value at which the probability is evaluated.</em>
<a class="jxr_linenumber" name="L172" href="#L172">172</a> <em class="jxr_javadoccomment">     * @param n the number of trials.</em>
<a class="jxr_linenumber" name="L173" href="#L173">173</a> <em class="jxr_javadoccomment">     * @param p the probability of success.</em>
<a class="jxr_linenumber" name="L174" href="#L174">174</a> <em class="jxr_javadoccomment">     * @param q the probability of failure (1 - p).</em>
<a class="jxr_linenumber" name="L175" href="#L175">175</a> <em class="jxr_javadoccomment">     * @return log(p(x)).</em>
<a class="jxr_linenumber" name="L176" href="#L176">176</a> <em class="jxr_javadoccomment">     */</em>
<a class="jxr_linenumber" name="L177" href="#L177">177</a>     <strong class="jxr_keyword">static</strong> <strong class="jxr_keyword">double</strong> logBinomialProbability(<strong class="jxr_keyword">int</strong> x, <strong class="jxr_keyword">int</strong> n, <strong class="jxr_keyword">double</strong> p, <strong class="jxr_keyword">double</strong> q) {
<a class="jxr_linenumber" name="L178" href="#L178">178</a>         <strong class="jxr_keyword">double</strong> ret;
<a class="jxr_linenumber" name="L179" href="#L179">179</a>         <strong class="jxr_keyword">if</strong> (x == 0) {
<a class="jxr_linenumber" name="L180" href="#L180">180</a>             <strong class="jxr_keyword">if</strong> (p &lt; 0.1) {
<a class="jxr_linenumber" name="L181" href="#L181">181</a>                 ret = -getDeviancePart(n, n * q) - n * p;
<a class="jxr_linenumber" name="L182" href="#L182">182</a>             } <strong class="jxr_keyword">else</strong> {
<a class="jxr_linenumber" name="L183" href="#L183">183</a>                 ret = n * FastMath.log(q);
<a class="jxr_linenumber" name="L184" href="#L184">184</a>             }
<a class="jxr_linenumber" name="L185" href="#L185">185</a>         } <strong class="jxr_keyword">else</strong> <strong class="jxr_keyword">if</strong> (x == n) {
<a class="jxr_linenumber" name="L186" href="#L186">186</a>             <strong class="jxr_keyword">if</strong> (q &lt; 0.1) {
<a class="jxr_linenumber" name="L187" href="#L187">187</a>                 ret = -getDeviancePart(n, n * p) - n * q;
<a class="jxr_linenumber" name="L188" href="#L188">188</a>             } <strong class="jxr_keyword">else</strong> {
<a class="jxr_linenumber" name="L189" href="#L189">189</a>                 ret = n * FastMath.log(p);
<a class="jxr_linenumber" name="L190" href="#L190">190</a>             }
<a class="jxr_linenumber" name="L191" href="#L191">191</a>         } <strong class="jxr_keyword">else</strong> {
<a class="jxr_linenumber" name="L192" href="#L192">192</a>             ret = getStirlingError(n) - getStirlingError(x) -
<a class="jxr_linenumber" name="L193" href="#L193">193</a>                   getStirlingError(n - x) - getDeviancePart(x, n * p) -
<a class="jxr_linenumber" name="L194" href="#L194">194</a>                   getDeviancePart(n - x, n * q);
<a class="jxr_linenumber" name="L195" href="#L195">195</a>             <strong class="jxr_keyword">double</strong> f = (MathUtils.TWO_PI * x * (n - x)) / n;
<a class="jxr_linenumber" name="L196" href="#L196">196</a>             ret = -0.5 * FastMath.log(f) + ret;
<a class="jxr_linenumber" name="L197" href="#L197">197</a>         }
<a class="jxr_linenumber" name="L198" href="#L198">198</a>         <strong class="jxr_keyword">return</strong> ret;
<a class="jxr_linenumber" name="L199" href="#L199">199</a>     }
<a class="jxr_linenumber" name="L200" href="#L200">200</a> }
</pre>
<hr/>
<div id="footer">Copyright &#169; 2003&#x2013;2016 <a href="http://www.apache.org/">The Apache Software Foundation</a>. All rights reserved.</div>
</body>
</html>
