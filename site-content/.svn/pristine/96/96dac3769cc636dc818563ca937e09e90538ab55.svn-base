<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml" xml:lang="en" lang="en">
<head><meta http-equiv="content-type" content="text/html; charset=UTF-8" />
<title>GammaTest xref</title>
<link type="text/css" rel="stylesheet" href="../../../../../stylesheet.css" />
</head>
<body>
<div id="overview"><a href="../../../../../../testapidocs/org/apache/commons/math3/special/GammaTest.html">View Javadoc</a></div><pre>
<a class="jxr_linenumber" name="L1" href="#L1">1</a>   <em class="jxr_comment">/*</em>
<a class="jxr_linenumber" name="L2" href="#L2">2</a>   <em class="jxr_comment"> * Licensed to the Apache Software Foundation (ASF) under one or more</em>
<a class="jxr_linenumber" name="L3" href="#L3">3</a>   <em class="jxr_comment"> * contributor license agreements.  See the NOTICE file distributed with</em>
<a class="jxr_linenumber" name="L4" href="#L4">4</a>   <em class="jxr_comment"> * this work for additional information regarding copyright ownership.</em>
<a class="jxr_linenumber" name="L5" href="#L5">5</a>   <em class="jxr_comment"> * The ASF licenses this file to You under the Apache License, Version 2.0</em>
<a class="jxr_linenumber" name="L6" href="#L6">6</a>   <em class="jxr_comment"> * (the "License"); you may not use this file except in compliance with</em>
<a class="jxr_linenumber" name="L7" href="#L7">7</a>   <em class="jxr_comment"> * the License.  You may obtain a copy of the License at</em>
<a class="jxr_linenumber" name="L8" href="#L8">8</a>   <em class="jxr_comment"> *</em>
<a class="jxr_linenumber" name="L9" href="#L9">9</a>   <em class="jxr_comment"> *      <a href="http://www.apache.org/licenses/LICENSE-2." target="alexandria_uri">http://www.apache.org/licenses/LICENSE-2.</a>0</em>
<a class="jxr_linenumber" name="L10" href="#L10">10</a>  <em class="jxr_comment"> *</em>
<a class="jxr_linenumber" name="L11" href="#L11">11</a>  <em class="jxr_comment"> * Unless required by applicable law or agreed to in writing, software</em>
<a class="jxr_linenumber" name="L12" href="#L12">12</a>  <em class="jxr_comment"> * distributed under the License is distributed on an "AS IS" BASIS,</em>
<a class="jxr_linenumber" name="L13" href="#L13">13</a>  <em class="jxr_comment"> * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.</em>
<a class="jxr_linenumber" name="L14" href="#L14">14</a>  <em class="jxr_comment"> * See the License for the specific language governing permissions and</em>
<a class="jxr_linenumber" name="L15" href="#L15">15</a>  <em class="jxr_comment"> * limitations under the License.</em>
<a class="jxr_linenumber" name="L16" href="#L16">16</a>  <em class="jxr_comment"> */</em>
<a class="jxr_linenumber" name="L17" href="#L17">17</a>  <strong class="jxr_keyword">package</strong> org.apache.commons.math3.special;
<a class="jxr_linenumber" name="L18" href="#L18">18</a>  
<a class="jxr_linenumber" name="L19" href="#L19">19</a>  <strong class="jxr_keyword">import</strong> org.apache.commons.math3.TestUtils;
<a class="jxr_linenumber" name="L20" href="#L20">20</a>  <strong class="jxr_keyword">import</strong> org.apache.commons.math3.exception.NumberIsTooLargeException;
<a class="jxr_linenumber" name="L21" href="#L21">21</a>  <strong class="jxr_keyword">import</strong> org.apache.commons.math3.exception.NumberIsTooSmallException;
<a class="jxr_linenumber" name="L22" href="#L22">22</a>  <strong class="jxr_keyword">import</strong> org.apache.commons.math3.util.FastMath;
<a class="jxr_linenumber" name="L23" href="#L23">23</a>  <strong class="jxr_keyword">import</strong> org.junit.Assert;
<a class="jxr_linenumber" name="L24" href="#L24">24</a>  <strong class="jxr_keyword">import</strong> org.junit.Test;
<a class="jxr_linenumber" name="L25" href="#L25">25</a>  
<a class="jxr_linenumber" name="L26" href="#L26">26</a>  <em class="jxr_javadoccomment">/**</em>
<a class="jxr_linenumber" name="L27" href="#L27">27</a>  <em class="jxr_javadoccomment"> */</em>
<a class="jxr_linenumber" name="L28" href="#L28">28</a>  <strong class="jxr_keyword">public</strong> <strong class="jxr_keyword">class</strong> <a href="../../../../../org/apache/commons/math3/special/GammaTest.html">GammaTest</a> {
<a class="jxr_linenumber" name="L29" href="#L29">29</a>      <strong class="jxr_keyword">private</strong> <strong class="jxr_keyword">void</strong> testRegularizedGamma(<strong class="jxr_keyword">double</strong> expected, <strong class="jxr_keyword">double</strong> a, <strong class="jxr_keyword">double</strong> x) {
<a class="jxr_linenumber" name="L30" href="#L30">30</a>          <strong class="jxr_keyword">double</strong> actualP = Gamma.regularizedGammaP(a, x);
<a class="jxr_linenumber" name="L31" href="#L31">31</a>          <strong class="jxr_keyword">double</strong> actualQ = Gamma.regularizedGammaQ(a, x);
<a class="jxr_linenumber" name="L32" href="#L32">32</a>          TestUtils.assertEquals(expected, actualP, 10e-15);
<a class="jxr_linenumber" name="L33" href="#L33">33</a>          TestUtils.assertEquals(actualP, 1.0 - actualQ, 10e-15);
<a class="jxr_linenumber" name="L34" href="#L34">34</a>      }
<a class="jxr_linenumber" name="L35" href="#L35">35</a>  
<a class="jxr_linenumber" name="L36" href="#L36">36</a>      <strong class="jxr_keyword">private</strong> <strong class="jxr_keyword">void</strong> testLogGamma(<strong class="jxr_keyword">double</strong> expected, <strong class="jxr_keyword">double</strong> x) {
<a class="jxr_linenumber" name="L37" href="#L37">37</a>          <strong class="jxr_keyword">double</strong> actual = Gamma.logGamma(x);
<a class="jxr_linenumber" name="L38" href="#L38">38</a>          TestUtils.assertEquals(expected, actual, 10e-15);
<a class="jxr_linenumber" name="L39" href="#L39">39</a>      }
<a class="jxr_linenumber" name="L40" href="#L40">40</a>  
<a class="jxr_linenumber" name="L41" href="#L41">41</a>      @Test
<a class="jxr_linenumber" name="L42" href="#L42">42</a>      <strong class="jxr_keyword">public</strong> <strong class="jxr_keyword">void</strong> testRegularizedGammaNanPositive() {
<a class="jxr_linenumber" name="L43" href="#L43">43</a>          testRegularizedGamma(Double.NaN, Double.NaN, 1.0);
<a class="jxr_linenumber" name="L44" href="#L44">44</a>      }
<a class="jxr_linenumber" name="L45" href="#L45">45</a>  
<a class="jxr_linenumber" name="L46" href="#L46">46</a>      @Test
<a class="jxr_linenumber" name="L47" href="#L47">47</a>      <strong class="jxr_keyword">public</strong> <strong class="jxr_keyword">void</strong> testRegularizedGammaPositiveNan() {
<a class="jxr_linenumber" name="L48" href="#L48">48</a>          testRegularizedGamma(Double.NaN, 1.0, Double.NaN);
<a class="jxr_linenumber" name="L49" href="#L49">49</a>      }
<a class="jxr_linenumber" name="L50" href="#L50">50</a>  
<a class="jxr_linenumber" name="L51" href="#L51">51</a>      @Test
<a class="jxr_linenumber" name="L52" href="#L52">52</a>      <strong class="jxr_keyword">public</strong> <strong class="jxr_keyword">void</strong> testRegularizedGammaNegativePositive() {
<a class="jxr_linenumber" name="L53" href="#L53">53</a>          testRegularizedGamma(Double.NaN, -1.5, 1.0);
<a class="jxr_linenumber" name="L54" href="#L54">54</a>      }
<a class="jxr_linenumber" name="L55" href="#L55">55</a>  
<a class="jxr_linenumber" name="L56" href="#L56">56</a>      @Test
<a class="jxr_linenumber" name="L57" href="#L57">57</a>      <strong class="jxr_keyword">public</strong> <strong class="jxr_keyword">void</strong> testRegularizedGammaPositiveNegative() {
<a class="jxr_linenumber" name="L58" href="#L58">58</a>          testRegularizedGamma(Double.NaN, 1.0, -1.0);
<a class="jxr_linenumber" name="L59" href="#L59">59</a>      }
<a class="jxr_linenumber" name="L60" href="#L60">60</a>  
<a class="jxr_linenumber" name="L61" href="#L61">61</a>      @Test
<a class="jxr_linenumber" name="L62" href="#L62">62</a>      <strong class="jxr_keyword">public</strong> <strong class="jxr_keyword">void</strong> testRegularizedGammaZeroPositive() {
<a class="jxr_linenumber" name="L63" href="#L63">63</a>          testRegularizedGamma(Double.NaN, 0.0, 1.0);
<a class="jxr_linenumber" name="L64" href="#L64">64</a>      }
<a class="jxr_linenumber" name="L65" href="#L65">65</a>  
<a class="jxr_linenumber" name="L66" href="#L66">66</a>      @Test
<a class="jxr_linenumber" name="L67" href="#L67">67</a>      <strong class="jxr_keyword">public</strong> <strong class="jxr_keyword">void</strong> testRegularizedGammaPositiveZero() {
<a class="jxr_linenumber" name="L68" href="#L68">68</a>          testRegularizedGamma(0.0, 1.0, 0.0);
<a class="jxr_linenumber" name="L69" href="#L69">69</a>      }
<a class="jxr_linenumber" name="L70" href="#L70">70</a>  
<a class="jxr_linenumber" name="L71" href="#L71">71</a>      @Test
<a class="jxr_linenumber" name="L72" href="#L72">72</a>      <strong class="jxr_keyword">public</strong> <strong class="jxr_keyword">void</strong> testRegularizedGammaPositivePositive() {
<a class="jxr_linenumber" name="L73" href="#L73">73</a>          testRegularizedGamma(0.632120558828558, 1.0, 1.0);
<a class="jxr_linenumber" name="L74" href="#L74">74</a>      }
<a class="jxr_linenumber" name="L75" href="#L75">75</a>  
<a class="jxr_linenumber" name="L76" href="#L76">76</a>      @Test
<a class="jxr_linenumber" name="L77" href="#L77">77</a>      <strong class="jxr_keyword">public</strong> <strong class="jxr_keyword">void</strong> testLogGammaNan() {
<a class="jxr_linenumber" name="L78" href="#L78">78</a>          testLogGamma(Double.NaN, Double.NaN);
<a class="jxr_linenumber" name="L79" href="#L79">79</a>      }
<a class="jxr_linenumber" name="L80" href="#L80">80</a>  
<a class="jxr_linenumber" name="L81" href="#L81">81</a>      @Test
<a class="jxr_linenumber" name="L82" href="#L82">82</a>      <strong class="jxr_keyword">public</strong> <strong class="jxr_keyword">void</strong> testLogGammaNegative() {
<a class="jxr_linenumber" name="L83" href="#L83">83</a>          testLogGamma(Double.NaN, -1.0);
<a class="jxr_linenumber" name="L84" href="#L84">84</a>      }
<a class="jxr_linenumber" name="L85" href="#L85">85</a>  
<a class="jxr_linenumber" name="L86" href="#L86">86</a>      @Test
<a class="jxr_linenumber" name="L87" href="#L87">87</a>      <strong class="jxr_keyword">public</strong> <strong class="jxr_keyword">void</strong> testLogGammaZero() {
<a class="jxr_linenumber" name="L88" href="#L88">88</a>          testLogGamma(Double.NaN, 0.0);
<a class="jxr_linenumber" name="L89" href="#L89">89</a>      }
<a class="jxr_linenumber" name="L90" href="#L90">90</a>  
<a class="jxr_linenumber" name="L91" href="#L91">91</a>      @Test
<a class="jxr_linenumber" name="L92" href="#L92">92</a>      <strong class="jxr_keyword">public</strong> <strong class="jxr_keyword">void</strong> testLogGammaPositive() {
<a class="jxr_linenumber" name="L93" href="#L93">93</a>          testLogGamma(0.6931471805599457, 3.0);
<a class="jxr_linenumber" name="L94" href="#L94">94</a>      }
<a class="jxr_linenumber" name="L95" href="#L95">95</a>  
<a class="jxr_linenumber" name="L96" href="#L96">96</a>      @Test
<a class="jxr_linenumber" name="L97" href="#L97">97</a>      <strong class="jxr_keyword">public</strong> <strong class="jxr_keyword">void</strong> testDigammaLargeArgs() {
<a class="jxr_linenumber" name="L98" href="#L98">98</a>          <strong class="jxr_keyword">double</strong> eps = 1e-8;
<a class="jxr_linenumber" name="L99" href="#L99">99</a>          Assert.assertEquals(4.6001618527380874002, Gamma.digamma(100), eps);
<a class="jxr_linenumber" name="L100" href="#L100">100</a>         Assert.assertEquals(3.9019896734278921970, Gamma.digamma(50), eps);
<a class="jxr_linenumber" name="L101" href="#L101">101</a>         Assert.assertEquals(2.9705239922421490509, Gamma.digamma(20), eps);
<a class="jxr_linenumber" name="L102" href="#L102">102</a>         Assert.assertEquals(2.9958363947076465821, Gamma.digamma(20.5), eps);
<a class="jxr_linenumber" name="L103" href="#L103">103</a>         Assert.assertEquals(2.2622143570941481605, Gamma.digamma(10.1), eps);
<a class="jxr_linenumber" name="L104" href="#L104">104</a>         Assert.assertEquals(2.1168588189004379233, Gamma.digamma(8.8), eps);
<a class="jxr_linenumber" name="L105" href="#L105">105</a>         Assert.assertEquals(1.8727843350984671394, Gamma.digamma(7), eps);
<a class="jxr_linenumber" name="L106" href="#L106">106</a>         Assert.assertEquals(0.42278433509846713939, Gamma.digamma(2), eps);
<a class="jxr_linenumber" name="L107" href="#L107">107</a>         Assert.assertEquals(-100.56088545786867450, Gamma.digamma(0.01), eps);
<a class="jxr_linenumber" name="L108" href="#L108">108</a>         Assert.assertEquals(-4.0390398965921882955, Gamma.digamma(-0.8), eps);
<a class="jxr_linenumber" name="L109" href="#L109">109</a>         Assert.assertEquals(4.2003210041401844726, Gamma.digamma(-6.3), eps);
<a class="jxr_linenumber" name="L110" href="#L110">110</a>     }
<a class="jxr_linenumber" name="L111" href="#L111">111</a> 
<a class="jxr_linenumber" name="L112" href="#L112">112</a>     @Test
<a class="jxr_linenumber" name="L113" href="#L113">113</a>     <strong class="jxr_keyword">public</strong> <strong class="jxr_keyword">void</strong> testDigammaSmallArgs() {
<a class="jxr_linenumber" name="L114" href="#L114">114</a>         <em class="jxr_comment">// values for negative powers of 10 from 1 to 30 as computed by webMathematica with 20 digits</em>
<a class="jxr_linenumber" name="L115" href="#L115">115</a>         <em class="jxr_comment">// see functions.wolfram.com</em>
<a class="jxr_linenumber" name="L116" href="#L116">116</a>         <strong class="jxr_keyword">double</strong>[] expected = {-10.423754940411076795, -100.56088545786867450, -1000.5755719318103005,
<a class="jxr_linenumber" name="L117" href="#L117">117</a>                 -10000.577051183514335, -100000.57719921568107, -1.0000005772140199687e6, -1.0000000577215500408e7,
<a class="jxr_linenumber" name="L118" href="#L118">118</a>                 -1.0000000057721564845e8, -1.0000000005772156633e9, -1.0000000000577215665e10, -1.0000000000057721566e11,
<a class="jxr_linenumber" name="L119" href="#L119">119</a>                 -1.0000000000005772157e12, -1.0000000000000577216e13, -1.0000000000000057722e14, -1.0000000000000005772e15, -1e+16,
<a class="jxr_linenumber" name="L120" href="#L120">120</a>                 -1e+17, -1e+18, -1e+19, -1e+20, -1e+21, -1e+22, -1e+23, -1e+24, -1e+25, -1e+26,
<a class="jxr_linenumber" name="L121" href="#L121">121</a>                 -1e+27, -1e+28, -1e+29, -1e+30};
<a class="jxr_linenumber" name="L122" href="#L122">122</a>         <strong class="jxr_keyword">for</strong> (<strong class="jxr_keyword">double</strong> n = 1; n &lt; 30; n++) {
<a class="jxr_linenumber" name="L123" href="#L123">123</a>             checkRelativeError(String.format(<span class="jxr_string">"Test %.0f: "</span>, n), expected[(<strong class="jxr_keyword">int</strong>) (n - 1)], Gamma.digamma(FastMath.pow(10.0, -n)), 1e-8);
<a class="jxr_linenumber" name="L124" href="#L124">124</a>         }
<a class="jxr_linenumber" name="L125" href="#L125">125</a>     }
<a class="jxr_linenumber" name="L126" href="#L126">126</a> 
<a class="jxr_linenumber" name="L127" href="#L127">127</a>     @Test
<a class="jxr_linenumber" name="L128" href="#L128">128</a>     <strong class="jxr_keyword">public</strong> <strong class="jxr_keyword">void</strong> testDigammaNonRealArgs() {
<a class="jxr_linenumber" name="L129" href="#L129">129</a>         Assert.assertTrue(Double.isNaN(Gamma.digamma(Double.NaN)));
<a class="jxr_linenumber" name="L130" href="#L130">130</a>         Assert.assertTrue(Double.isInfinite(Gamma.digamma(Double.POSITIVE_INFINITY)));
<a class="jxr_linenumber" name="L131" href="#L131">131</a>         Assert.assertTrue(Double.isInfinite(Gamma.digamma(Double.NEGATIVE_INFINITY)));
<a class="jxr_linenumber" name="L132" href="#L132">132</a>     }
<a class="jxr_linenumber" name="L133" href="#L133">133</a> 
<a class="jxr_linenumber" name="L134" href="#L134">134</a>     @Test
<a class="jxr_linenumber" name="L135" href="#L135">135</a>     <strong class="jxr_keyword">public</strong> <strong class="jxr_keyword">void</strong> testTrigamma() {
<a class="jxr_linenumber" name="L136" href="#L136">136</a>         <strong class="jxr_keyword">double</strong> eps = 1e-8;
<a class="jxr_linenumber" name="L137" href="#L137">137</a>         <em class="jxr_comment">// computed using webMathematica.  For example, to compute trigamma($i) = Polygamma(1, $i), use</em>
<a class="jxr_linenumber" name="L138" href="#L138">138</a>         <em class="jxr_comment">//</em>
<a class="jxr_linenumber" name="L139" href="#L139">139</a>         <em class="jxr_comment">// http://functions.wolfram.com/webMathematica/Evaluated.jsp?name=PolyGamma2&amp;plottype=0&amp;vars={%221%22,%22$i%22}&amp;digits=20</em>
<a class="jxr_linenumber" name="L140" href="#L140">140</a>         <strong class="jxr_keyword">double</strong>[] data = {
<a class="jxr_linenumber" name="L141" href="#L141">141</a>                 1e-4, 1.0000000164469368793e8,
<a class="jxr_linenumber" name="L142" href="#L142">142</a>                 1e-3, 1.0000016425331958690e6,
<a class="jxr_linenumber" name="L143" href="#L143">143</a>                 1e-2, 10001.621213528313220,
<a class="jxr_linenumber" name="L144" href="#L144">144</a>                 1e-1, 101.43329915079275882,
<a class="jxr_linenumber" name="L145" href="#L145">145</a>                 1, 1.6449340668482264365,
<a class="jxr_linenumber" name="L146" href="#L146">146</a>                 2, 0.64493406684822643647,
<a class="jxr_linenumber" name="L147" href="#L147">147</a>                 3, 0.39493406684822643647,
<a class="jxr_linenumber" name="L148" href="#L148">148</a>                 4, 0.28382295573711532536,
<a class="jxr_linenumber" name="L149" href="#L149">149</a>                 5, 0.22132295573711532536,
<a class="jxr_linenumber" name="L150" href="#L150">150</a>                 10, 0.10516633568168574612,
<a class="jxr_linenumber" name="L151" href="#L151">151</a>                 20, 0.051270822935203119832,
<a class="jxr_linenumber" name="L152" href="#L152">152</a>                 50, 0.020201333226697125806,
<a class="jxr_linenumber" name="L153" href="#L153">153</a>                 100, 0.010050166663333571395
<a class="jxr_linenumber" name="L154" href="#L154">154</a>         };
<a class="jxr_linenumber" name="L155" href="#L155">155</a>         <strong class="jxr_keyword">for</strong> (<strong class="jxr_keyword">int</strong> i = data.length - 2; i &gt;= 0; i -= 2) {
<a class="jxr_linenumber" name="L156" href="#L156">156</a>             Assert.assertEquals(String.format(<span class="jxr_string">"trigamma %.0f"</span>, data[i]), data[i + 1], Gamma.trigamma(data[i]), eps);
<a class="jxr_linenumber" name="L157" href="#L157">157</a>         }
<a class="jxr_linenumber" name="L158" href="#L158">158</a>     }
<a class="jxr_linenumber" name="L159" href="#L159">159</a> 
<a class="jxr_linenumber" name="L160" href="#L160">160</a>     @Test
<a class="jxr_linenumber" name="L161" href="#L161">161</a>     <strong class="jxr_keyword">public</strong> <strong class="jxr_keyword">void</strong> testTrigammaNonRealArgs() {
<a class="jxr_linenumber" name="L162" href="#L162">162</a>         Assert.assertTrue(Double.isNaN(Gamma.trigamma(Double.NaN)));
<a class="jxr_linenumber" name="L163" href="#L163">163</a>         Assert.assertTrue(Double.isInfinite(Gamma.trigamma(Double.POSITIVE_INFINITY)));
<a class="jxr_linenumber" name="L164" href="#L164">164</a>         Assert.assertTrue(Double.isInfinite(Gamma.trigamma(Double.NEGATIVE_INFINITY)));
<a class="jxr_linenumber" name="L165" href="#L165">165</a>     }
<a class="jxr_linenumber" name="L166" href="#L166">166</a> 
<a class="jxr_linenumber" name="L167" href="#L167">167</a>     <em class="jxr_javadoccomment">/**</em>
<a class="jxr_linenumber" name="L168" href="#L168">168</a> <em class="jxr_javadoccomment">     * Reference data for the {@link Gamma#logGamma(double)} function. This data</em>
<a class="jxr_linenumber" name="L169" href="#L169">169</a> <em class="jxr_javadoccomment">     * was generated with the following &lt;a</em>
<a class="jxr_linenumber" name="L170" href="#L170">170</a> <em class="jxr_javadoccomment">     * href="<a href="http://maxima.sourceforge.net/" target="alexandria_uri">http://maxima.sourceforge.net/</a>"&gt;Maxima&lt;/a&gt; script.</em>
<a class="jxr_linenumber" name="L171" href="#L171">171</a> <em class="jxr_javadoccomment">     *</em>
<a class="jxr_linenumber" name="L172" href="#L172">172</a> <em class="jxr_javadoccomment">     * &lt;pre&gt;</em>
<a class="jxr_linenumber" name="L173" href="#L173">173</a> <em class="jxr_javadoccomment">     * kill(all);</em>
<a class="jxr_linenumber" name="L174" href="#L174">174</a> <em class="jxr_javadoccomment">     *</em>
<a class="jxr_linenumber" name="L175" href="#L175">175</a> <em class="jxr_javadoccomment">     * fpprec : 64;</em>
<a class="jxr_linenumber" name="L176" href="#L176">176</a> <em class="jxr_javadoccomment">     * gamln(x) := log(gamma(x));</em>
<a class="jxr_linenumber" name="L177" href="#L177">177</a> <em class="jxr_javadoccomment">     * x : append(makelist(bfloat(i / 8), i, 1, 80),</em>
<a class="jxr_linenumber" name="L178" href="#L178">178</a> <em class="jxr_javadoccomment">     *     [0.8b0, 1b2, 1b3, 1b4, 1b5, 1b6, 1b7, 1b8, 1b9, 1b10]);</em>
<a class="jxr_linenumber" name="L179" href="#L179">179</a> <em class="jxr_javadoccomment">     *</em>
<a class="jxr_linenumber" name="L180" href="#L180">180</a> <em class="jxr_javadoccomment">     * for i : 1 while i &lt;= length(x) do</em>
<a class="jxr_linenumber" name="L181" href="#L181">181</a> <em class="jxr_javadoccomment">     *     print("{", float(x[i]), ",", float(gamln(x[i])), "},");</em>
<a class="jxr_linenumber" name="L182" href="#L182">182</a> <em class="jxr_javadoccomment">     * &lt;/pre&gt;</em>
<a class="jxr_linenumber" name="L183" href="#L183">183</a> <em class="jxr_javadoccomment">     */</em>
<a class="jxr_linenumber" name="L184" href="#L184">184</a>     <strong class="jxr_keyword">private</strong> <strong class="jxr_keyword">static</strong> <strong class="jxr_keyword">final</strong> <strong class="jxr_keyword">double</strong>[][] LOG_GAMMA_REF = {
<a class="jxr_linenumber" name="L185" href="#L185">185</a>         { 0.125 , 2.019418357553796 },
<a class="jxr_linenumber" name="L186" href="#L186">186</a>         { 0.25 , 1.288022524698077 },
<a class="jxr_linenumber" name="L187" href="#L187">187</a>         { 0.375 , .8630739822706475 },
<a class="jxr_linenumber" name="L188" href="#L188">188</a>         { 0.5 , .5723649429247001 },
<a class="jxr_linenumber" name="L189" href="#L189">189</a>         { 0.625 , .3608294954889402 },
<a class="jxr_linenumber" name="L190" href="#L190">190</a>         { 0.75 , .2032809514312954 },
<a class="jxr_linenumber" name="L191" href="#L191">191</a>         { 0.875 , .08585870722533433 },
<a class="jxr_linenumber" name="L192" href="#L192">192</a>         { 0.890625 , .07353860936979656 },
<a class="jxr_linenumber" name="L193" href="#L193">193</a>         { 0.90625 , .06169536624059108 },
<a class="jxr_linenumber" name="L194" href="#L194">194</a>         { 0.921875 , .05031670080005688 },
<a class="jxr_linenumber" name="L195" href="#L195">195</a>         { 0.9375 , 0.0393909017345823 },
<a class="jxr_linenumber" name="L196" href="#L196">196</a>         { 0.953125 , .02890678734595923 },
<a class="jxr_linenumber" name="L197" href="#L197">197</a>         { 0.96875 , .01885367233441289 },
<a class="jxr_linenumber" name="L198" href="#L198">198</a>         { 0.984375 , .009221337197578781 },
<a class="jxr_linenumber" name="L199" href="#L199">199</a>         { 1.0 , 0.0 },
<a class="jxr_linenumber" name="L200" href="#L200">200</a>         { 1.015625 , - 0.00881970970573307 },
<a class="jxr_linenumber" name="L201" href="#L201">201</a>         { 1.03125 , - .01724677500176807 },
<a class="jxr_linenumber" name="L202" href="#L202">202</a>         { 1.046875 , - .02528981394675729 },
<a class="jxr_linenumber" name="L203" href="#L203">203</a>         { 1.0625 , - .03295710029357782 },
<a class="jxr_linenumber" name="L204" href="#L204">204</a>         { 1.078125 , - .04025658272400143 },
<a class="jxr_linenumber" name="L205" href="#L205">205</a>         { 1.09375 , - .04719590272716985 },
<a class="jxr_linenumber" name="L206" href="#L206">206</a>         { 1.109375 , - .05378241123619192 },
<a class="jxr_linenumber" name="L207" href="#L207">207</a>         { 1.125 , - .06002318412603958 },
<a class="jxr_linenumber" name="L208" href="#L208">208</a>         { 1.25 , - .09827183642181316 },
<a class="jxr_linenumber" name="L209" href="#L209">209</a>         { 1.375 , - .1177552707410788 },
<a class="jxr_linenumber" name="L210" href="#L210">210</a>         { 1.5 , - .1207822376352452 },
<a class="jxr_linenumber" name="L211" href="#L211">211</a>         { 1.625 , - .1091741337567954 },
<a class="jxr_linenumber" name="L212" href="#L212">212</a>         { 1.75 , - .08440112102048555 },
<a class="jxr_linenumber" name="L213" href="#L213">213</a>         { 1.875 , - 0.0476726853991883 },
<a class="jxr_linenumber" name="L214" href="#L214">214</a>         { 1.890625 , - .04229320615532515 },
<a class="jxr_linenumber" name="L215" href="#L215">215</a>         { 1.90625 , - .03674470657266143 },
<a class="jxr_linenumber" name="L216" href="#L216">216</a>         { 1.921875 , - .03102893865389552 },
<a class="jxr_linenumber" name="L217" href="#L217">217</a>         { 1.9375 , - .02514761940298887 },
<a class="jxr_linenumber" name="L218" href="#L218">218</a>         { 1.953125 , - .01910243184040138 },
<a class="jxr_linenumber" name="L219" href="#L219">219</a>         { 1.96875 , - .01289502598016741 },
<a class="jxr_linenumber" name="L220" href="#L220">220</a>         { 1.984375 , - .006527019770560387 },
<a class="jxr_linenumber" name="L221" href="#L221">221</a>         { 2.0 , 0.0 },
<a class="jxr_linenumber" name="L222" href="#L222">222</a>         { 2.015625 , .006684476830232185 },
<a class="jxr_linenumber" name="L223" href="#L223">223</a>         { 2.03125 , .01352488366498562 },
<a class="jxr_linenumber" name="L224" href="#L224">224</a>         { 2.046875 , .02051972208453692 },
<a class="jxr_linenumber" name="L225" href="#L225">225</a>         { 2.0625 , .02766752152285702 },
<a class="jxr_linenumber" name="L226" href="#L226">226</a>         { 2.078125 , 0.0349668385135861 },
<a class="jxr_linenumber" name="L227" href="#L227">227</a>         { 2.09375 , .04241625596251728 },
<a class="jxr_linenumber" name="L228" href="#L228">228</a>         { 2.109375 , .05001438244545164 },
<a class="jxr_linenumber" name="L229" href="#L229">229</a>         { 2.125 , .05775985153034387 },
<a class="jxr_linenumber" name="L230" href="#L230">230</a>         { 2.25 , .1248717148923966 },
<a class="jxr_linenumber" name="L231" href="#L231">231</a>         { 2.375 , .2006984603774558 },
<a class="jxr_linenumber" name="L232" href="#L232">232</a>         { 2.5 , .2846828704729192 },
<a class="jxr_linenumber" name="L233" href="#L233">233</a>         { 2.625 , .3763336820249054 },
<a class="jxr_linenumber" name="L234" href="#L234">234</a>         { 2.75 , .4752146669149371 },
<a class="jxr_linenumber" name="L235" href="#L235">235</a>         { 2.875 , .5809359740231859 },
<a class="jxr_linenumber" name="L236" href="#L236">236</a>         { 2.890625 , .5946142560817441 },
<a class="jxr_linenumber" name="L237" href="#L237">237</a>         { 2.90625 , .6083932548009232 },
<a class="jxr_linenumber" name="L238" href="#L238">238</a>         { 2.921875 , .6222723333588501 },
<a class="jxr_linenumber" name="L239" href="#L239">239</a>         { 2.9375 , .6362508628423761 },
<a class="jxr_linenumber" name="L240" href="#L240">240</a>         { 2.953125 , .6503282221022278 },
<a class="jxr_linenumber" name="L241" href="#L241">241</a>         { 2.96875 , .6645037976116387 },
<a class="jxr_linenumber" name="L242" href="#L242">242</a>         { 2.984375 , 0.678776983328359 },
<a class="jxr_linenumber" name="L243" href="#L243">243</a>         { 3.0 , .6931471805599453 },
<a class="jxr_linenumber" name="L244" href="#L244">244</a>         { 3.015625 , .7076137978322324 },
<a class="jxr_linenumber" name="L245" href="#L245">245</a>         { 3.03125 , .7221762507608962 },
<a class="jxr_linenumber" name="L246" href="#L246">246</a>         { 3.046875 , .7368339619260166 },
<a class="jxr_linenumber" name="L247" href="#L247">247</a>         { 3.0625 , 0.751586360749556 },
<a class="jxr_linenumber" name="L248" href="#L248">248</a>         { 3.078125 , .7664328833756681 },
<a class="jxr_linenumber" name="L249" href="#L249">249</a>         { 3.09375 , .7813729725537568 },
<a class="jxr_linenumber" name="L250" href="#L250">250</a>         { 3.109375 , .7964060775242092 },
<a class="jxr_linenumber" name="L251" href="#L251">251</a>         { 3.125 , 0.811531653906724 },
<a class="jxr_linenumber" name="L252" href="#L252">252</a>         { 3.25 , .9358019311087253 },
<a class="jxr_linenumber" name="L253" href="#L253">253</a>         { 3.375 , 1.06569589786406 },
<a class="jxr_linenumber" name="L254" href="#L254">254</a>         { 3.5 , 1.200973602347074 },
<a class="jxr_linenumber" name="L255" href="#L255">255</a>         { 3.625 , 1.341414578068493 },
<a class="jxr_linenumber" name="L256" href="#L256">256</a>         { 3.75 , 1.486815578593417 },
<a class="jxr_linenumber" name="L257" href="#L257">257</a>         { 3.875 , 1.6369886482725 },
<a class="jxr_linenumber" name="L258" href="#L258">258</a>         { 4.0 , 1.791759469228055 },
<a class="jxr_linenumber" name="L259" href="#L259">259</a>         { 4.125 , 1.950965937095089 },
<a class="jxr_linenumber" name="L260" href="#L260">260</a>         { 4.25 , 2.114456927450371 },
<a class="jxr_linenumber" name="L261" href="#L261">261</a>         { 4.375 , 2.282091222188554 },
<a class="jxr_linenumber" name="L262" href="#L262">262</a>         { 4.5 , 2.453736570842442 },
<a class="jxr_linenumber" name="L263" href="#L263">263</a>         { 4.625 , 2.62926886637513 },
<a class="jxr_linenumber" name="L264" href="#L264">264</a>         { 4.75 , 2.808571418575736 },
<a class="jxr_linenumber" name="L265" href="#L265">265</a>         { 4.875 , 2.99153431107781 },
<a class="jxr_linenumber" name="L266" href="#L266">266</a>         { 5.0 , 3.178053830347946 },
<a class="jxr_linenumber" name="L267" href="#L267">267</a>         { 5.125 , 3.368031956881733 },
<a class="jxr_linenumber" name="L268" href="#L268">268</a>         { 5.25 , 3.561375910386697 },
<a class="jxr_linenumber" name="L269" href="#L269">269</a>         { 5.375 , 3.757997741998131 },
<a class="jxr_linenumber" name="L270" href="#L270">270</a>         { 5.5 , 3.957813967618717 },
<a class="jxr_linenumber" name="L271" href="#L271">271</a>         { 5.625 , 4.160745237339519 },
<a class="jxr_linenumber" name="L272" href="#L272">272</a>         { 5.75 , 4.366716036622286 },
<a class="jxr_linenumber" name="L273" href="#L273">273</a>         { 5.875 , 4.57565441552762 },
<a class="jxr_linenumber" name="L274" href="#L274">274</a>         { 6.0 , 4.787491742782046 },
<a class="jxr_linenumber" name="L275" href="#L275">275</a>         { 6.125 , 5.002162481906205 },
<a class="jxr_linenumber" name="L276" href="#L276">276</a>         { 6.25 , 5.219603986990229 },
<a class="jxr_linenumber" name="L277" href="#L277">277</a>         { 6.375 , 5.439756316011858 },
<a class="jxr_linenumber" name="L278" href="#L278">278</a>         { 6.5 , 5.662562059857142 },
<a class="jxr_linenumber" name="L279" href="#L279">279</a>         { 6.625 , 5.887966185430003 },
<a class="jxr_linenumber" name="L280" href="#L280">280</a>         { 6.75 , 6.115915891431546 },
<a class="jxr_linenumber" name="L281" href="#L281">281</a>         { 6.875 , 6.346360475557843 },
<a class="jxr_linenumber" name="L282" href="#L282">282</a>         { 7.0 , 6.579251212010101 },
<a class="jxr_linenumber" name="L283" href="#L283">283</a>         { 7.125 , 6.814541238336996 },
<a class="jxr_linenumber" name="L284" href="#L284">284</a>         { 7.25 , 7.05218545073854 },
<a class="jxr_linenumber" name="L285" href="#L285">285</a>         { 7.375 , 7.292140407056348 },
<a class="jxr_linenumber" name="L286" href="#L286">286</a>         { 7.5 , 7.534364236758733 },
<a class="jxr_linenumber" name="L287" href="#L287">287</a>         { 7.625 , 7.778816557302289 },
<a class="jxr_linenumber" name="L288" href="#L288">288</a>         { 7.75 , 8.025458396315983 },
<a class="jxr_linenumber" name="L289" href="#L289">289</a>         { 7.875 , 8.274252119110479 },
<a class="jxr_linenumber" name="L290" href="#L290">290</a>         { 8.0 , 8.525161361065415 },
<a class="jxr_linenumber" name="L291" href="#L291">291</a>         { 8.125 , 8.77815096449171 },
<a class="jxr_linenumber" name="L292" href="#L292">292</a>         { 8.25 , 9.033186919605123 },
<a class="jxr_linenumber" name="L293" href="#L293">293</a>         { 8.375 , 9.290236309282232 },
<a class="jxr_linenumber" name="L294" href="#L294">294</a>         { 8.5 , 9.549267257300997 },
<a class="jxr_linenumber" name="L295" href="#L295">295</a>         { 8.625 , 9.810248879795765 },
<a class="jxr_linenumber" name="L296" href="#L296">296</a>         { 8.75 , 10.07315123968124 },
<a class="jxr_linenumber" name="L297" href="#L297">297</a>         { 8.875 , 10.33794530382217 },
<a class="jxr_linenumber" name="L298" href="#L298">298</a>         { 9.0 , 10.60460290274525 },
<a class="jxr_linenumber" name="L299" href="#L299">299</a>         { 9.125 , 10.87309669270751 },
<a class="jxr_linenumber" name="L300" href="#L300">300</a>         { 9.25 , 11.14340011995171 },
<a class="jxr_linenumber" name="L301" href="#L301">301</a>         { 9.375 , 11.41548738699336 },
<a class="jxr_linenumber" name="L302" href="#L302">302</a>         { 9.5 , 11.68933342079727 },
<a class="jxr_linenumber" name="L303" href="#L303">303</a>         { 9.625 , 11.96491384271319 },
<a class="jxr_linenumber" name="L304" href="#L304">304</a>         { 9.75 , 12.24220494005076 },
<a class="jxr_linenumber" name="L305" href="#L305">305</a>         { 9.875 , 12.52118363918365 },
<a class="jxr_linenumber" name="L306" href="#L306">306</a>         { 10.0 , 12.80182748008147 },
<a class="jxr_linenumber" name="L307" href="#L307">307</a>         { 0.8 , .1520596783998376 },
<a class="jxr_linenumber" name="L308" href="#L308">308</a>         { 100.0 , 359.1342053695754 },
<a class="jxr_linenumber" name="L309" href="#L309">309</a>         { 1000.0 , 5905.220423209181 },
<a class="jxr_linenumber" name="L310" href="#L310">310</a>         { 10000.0 , 82099.71749644238 },
<a class="jxr_linenumber" name="L311" href="#L311">311</a>         { 100000.0 , 1051287.708973657 },
<a class="jxr_linenumber" name="L312" href="#L312">312</a>         { 1000000.0 , 1.2815504569147612e+7 },
<a class="jxr_linenumber" name="L313" href="#L313">313</a>         { 10000000.0 , 1.511809493694739e+8 },
<a class="jxr_linenumber" name="L314" href="#L314">314</a>         { 1.e+8 , 1.7420680661038346e+9 },
<a class="jxr_linenumber" name="L315" href="#L315">315</a>         { 1.e+9 , 1.972326582750371e+10 },
<a class="jxr_linenumber" name="L316" href="#L316">316</a>         { 1.e+10 , 2.202585092888106e+11 },
<a class="jxr_linenumber" name="L317" href="#L317">317</a>     };
<a class="jxr_linenumber" name="L318" href="#L318">318</a> 
<a class="jxr_linenumber" name="L319" href="#L319">319</a>     @Test
<a class="jxr_linenumber" name="L320" href="#L320">320</a>     <strong class="jxr_keyword">public</strong> <strong class="jxr_keyword">void</strong> testLogGamma() {
<a class="jxr_linenumber" name="L321" href="#L321">321</a>         <strong class="jxr_keyword">final</strong> <strong class="jxr_keyword">int</strong> ulps = 3;
<a class="jxr_linenumber" name="L322" href="#L322">322</a>         <strong class="jxr_keyword">for</strong> (<strong class="jxr_keyword">int</strong> i = 0; i &lt; LOG_GAMMA_REF.length; i++) {
<a class="jxr_linenumber" name="L323" href="#L323">323</a>             <strong class="jxr_keyword">final</strong> <strong class="jxr_keyword">double</strong>[] data = LOG_GAMMA_REF[i];
<a class="jxr_linenumber" name="L324" href="#L324">324</a>             <strong class="jxr_keyword">final</strong> <strong class="jxr_keyword">double</strong> x = data[0];
<a class="jxr_linenumber" name="L325" href="#L325">325</a>             <strong class="jxr_keyword">final</strong> <strong class="jxr_keyword">double</strong> expected = data[1];
<a class="jxr_linenumber" name="L326" href="#L326">326</a>             <strong class="jxr_keyword">final</strong> <strong class="jxr_keyword">double</strong> actual = Gamma.logGamma(x);
<a class="jxr_linenumber" name="L327" href="#L327">327</a>             <strong class="jxr_keyword">final</strong> <strong class="jxr_keyword">double</strong> tol;
<a class="jxr_linenumber" name="L328" href="#L328">328</a>             <strong class="jxr_keyword">if</strong> (expected == 0.0) {
<a class="jxr_linenumber" name="L329" href="#L329">329</a>                 tol = 1E-15;
<a class="jxr_linenumber" name="L330" href="#L330">330</a>             } <strong class="jxr_keyword">else</strong> {
<a class="jxr_linenumber" name="L331" href="#L331">331</a>                 tol = ulps * FastMath.ulp(expected);
<a class="jxr_linenumber" name="L332" href="#L332">332</a>             }
<a class="jxr_linenumber" name="L333" href="#L333">333</a>             Assert.assertEquals(Double.toString(x), expected, actual, tol);
<a class="jxr_linenumber" name="L334" href="#L334">334</a>         }
<a class="jxr_linenumber" name="L335" href="#L335">335</a>     }
<a class="jxr_linenumber" name="L336" href="#L336">336</a> 
<a class="jxr_linenumber" name="L337" href="#L337">337</a>     @Test
<a class="jxr_linenumber" name="L338" href="#L338">338</a>     <strong class="jxr_keyword">public</strong> <strong class="jxr_keyword">void</strong> testLogGammaPrecondition1() {
<a class="jxr_linenumber" name="L339" href="#L339">339</a>         Assert.assertTrue(Double.isNaN(Gamma.logGamma(0.0)));
<a class="jxr_linenumber" name="L340" href="#L340">340</a>     }
<a class="jxr_linenumber" name="L341" href="#L341">341</a> 
<a class="jxr_linenumber" name="L342" href="#L342">342</a>     @Test
<a class="jxr_linenumber" name="L343" href="#L343">343</a>     <strong class="jxr_keyword">public</strong> <strong class="jxr_keyword">void</strong> testLogGammaPrecondition2() {
<a class="jxr_linenumber" name="L344" href="#L344">344</a>         Assert.assertTrue(Double.isNaN(Gamma.logGamma(-1.0)));
<a class="jxr_linenumber" name="L345" href="#L345">345</a>     }
<a class="jxr_linenumber" name="L346" href="#L346">346</a> 
<a class="jxr_linenumber" name="L347" href="#L347">347</a>     <em class="jxr_javadoccomment">/**</em>
<a class="jxr_linenumber" name="L348" href="#L348">348</a> <em class="jxr_javadoccomment">     * &lt;p&gt;</em>
<a class="jxr_linenumber" name="L349" href="#L349">349</a> <em class="jxr_javadoccomment">     * Reference values for the {@link Gamma#invGamma1pm1(double)} method.</em>
<a class="jxr_linenumber" name="L350" href="#L350">350</a> <em class="jxr_javadoccomment">     * These values were generated with the following &lt;a</em>
<a class="jxr_linenumber" name="L351" href="#L351">351</a> <em class="jxr_javadoccomment">     * href="<a href="http://maxima.sourceforge.net/" target="alexandria_uri">http://maxima.sourceforge.net/</a>"&gt;Maxima&lt;/a&gt; script</em>
<a class="jxr_linenumber" name="L352" href="#L352">352</a> <em class="jxr_javadoccomment">     * &lt;/p&gt;</em>
<a class="jxr_linenumber" name="L353" href="#L353">353</a> <em class="jxr_javadoccomment">     *</em>
<a class="jxr_linenumber" name="L354" href="#L354">354</a> <em class="jxr_javadoccomment">     * &lt;pre&gt;</em>
<a class="jxr_linenumber" name="L355" href="#L355">355</a> <em class="jxr_javadoccomment">     * kill(all);</em>
<a class="jxr_linenumber" name="L356" href="#L356">356</a> <em class="jxr_javadoccomment">     *</em>
<a class="jxr_linenumber" name="L357" href="#L357">357</a> <em class="jxr_javadoccomment">     * fpprec : 64;</em>
<a class="jxr_linenumber" name="L358" href="#L358">358</a> <em class="jxr_javadoccomment">     * gam1(x) := 1 / gamma(1 + x) - 1;</em>
<a class="jxr_linenumber" name="L359" href="#L359">359</a> <em class="jxr_javadoccomment">     * x : makelist(bfloat(i / 8), i, -4, 12);</em>
<a class="jxr_linenumber" name="L360" href="#L360">360</a> <em class="jxr_javadoccomment">     *</em>
<a class="jxr_linenumber" name="L361" href="#L361">361</a> <em class="jxr_javadoccomment">     * for i : 1 while i &lt;= length(x) do print("{",</em>
<a class="jxr_linenumber" name="L362" href="#L362">362</a> <em class="jxr_javadoccomment">     *                                         float(x[i]),</em>
<a class="jxr_linenumber" name="L363" href="#L363">363</a> <em class="jxr_javadoccomment">     *                                         ",",</em>
<a class="jxr_linenumber" name="L364" href="#L364">364</a> <em class="jxr_javadoccomment">     *                                         float(gam1(x[i])),</em>
<a class="jxr_linenumber" name="L365" href="#L365">365</a> <em class="jxr_javadoccomment">     *                                         "},");</em>
<a class="jxr_linenumber" name="L366" href="#L366">366</a> <em class="jxr_javadoccomment">     * &lt;/pre&gt;</em>
<a class="jxr_linenumber" name="L367" href="#L367">367</a> <em class="jxr_javadoccomment">     */</em>
<a class="jxr_linenumber" name="L368" href="#L368">368</a>     <strong class="jxr_keyword">private</strong> <strong class="jxr_keyword">static</strong> <strong class="jxr_keyword">final</strong> <strong class="jxr_keyword">double</strong>[][] INV_GAMMA1P_M1_REF = {
<a class="jxr_linenumber" name="L369" href="#L369">369</a>         { -0.5 , -.4358104164522437 },
<a class="jxr_linenumber" name="L370" href="#L370">370</a>         { -0.375 , -.3029021533379859 },
<a class="jxr_linenumber" name="L371" href="#L371">371</a>         { -0.25 , -0.183951060901737 },
<a class="jxr_linenumber" name="L372" href="#L372">372</a>         { -0.125 , -.08227611018520711 },
<a class="jxr_linenumber" name="L373" href="#L373">373</a>         { 0.0 , 0.0 },
<a class="jxr_linenumber" name="L374" href="#L374">374</a>         { 0.125 , .06186116458306091 },
<a class="jxr_linenumber" name="L375" href="#L375">375</a>         { 0.25 , .1032626513208373 },
<a class="jxr_linenumber" name="L376" href="#L376">376</a>         { 0.375 , .1249687649039041 },
<a class="jxr_linenumber" name="L377" href="#L377">377</a>         { 0.5 , .1283791670955126 },
<a class="jxr_linenumber" name="L378" href="#L378">378</a>         { 0.625 , .1153565546592225 },
<a class="jxr_linenumber" name="L379" href="#L379">379</a>         { 0.75 , 0.0880652521310173 },
<a class="jxr_linenumber" name="L380" href="#L380">380</a>         { 0.875 , .04882730264547758 },
<a class="jxr_linenumber" name="L381" href="#L381">381</a>         { 1.0 , 0.0 },
<a class="jxr_linenumber" name="L382" href="#L382">382</a>         { 1.125 , -.05612340925950141 },
<a class="jxr_linenumber" name="L383" href="#L383">383</a>         { 1.25 , -.1173898789433302 },
<a class="jxr_linenumber" name="L384" href="#L384">384</a>         { 1.375 , -.1818408982517061 },
<a class="jxr_linenumber" name="L385" href="#L385">385</a>         { 1.5 , -0.247747221936325 },
<a class="jxr_linenumber" name="L386" href="#L386">386</a>     };
<a class="jxr_linenumber" name="L387" href="#L387">387</a> 
<a class="jxr_linenumber" name="L388" href="#L388">388</a>     @Test
<a class="jxr_linenumber" name="L389" href="#L389">389</a>     <strong class="jxr_keyword">public</strong> <strong class="jxr_keyword">void</strong> testInvGamma1pm1() {
<a class="jxr_linenumber" name="L390" href="#L390">390</a> 
<a class="jxr_linenumber" name="L391" href="#L391">391</a>         <strong class="jxr_keyword">final</strong> <strong class="jxr_keyword">int</strong> ulps = 3;
<a class="jxr_linenumber" name="L392" href="#L392">392</a>         <strong class="jxr_keyword">for</strong> (<strong class="jxr_keyword">int</strong> i = 0; i &lt; INV_GAMMA1P_M1_REF.length; i++) {
<a class="jxr_linenumber" name="L393" href="#L393">393</a>             <strong class="jxr_keyword">final</strong> <strong class="jxr_keyword">double</strong>[] ref = INV_GAMMA1P_M1_REF[i];
<a class="jxr_linenumber" name="L394" href="#L394">394</a>             <strong class="jxr_keyword">final</strong> <strong class="jxr_keyword">double</strong> x = ref[0];
<a class="jxr_linenumber" name="L395" href="#L395">395</a>             <strong class="jxr_keyword">final</strong> <strong class="jxr_keyword">double</strong> expected = ref[1];
<a class="jxr_linenumber" name="L396" href="#L396">396</a>             <strong class="jxr_keyword">final</strong> <strong class="jxr_keyword">double</strong> actual = Gamma.invGamma1pm1(x);
<a class="jxr_linenumber" name="L397" href="#L397">397</a>             <strong class="jxr_keyword">final</strong> <strong class="jxr_keyword">double</strong> tol = ulps * FastMath.ulp(expected);
<a class="jxr_linenumber" name="L398" href="#L398">398</a>             Assert.assertEquals(Double.toString(x), expected, actual, tol);
<a class="jxr_linenumber" name="L399" href="#L399">399</a>         }
<a class="jxr_linenumber" name="L400" href="#L400">400</a>     }
<a class="jxr_linenumber" name="L401" href="#L401">401</a> 
<a class="jxr_linenumber" name="L402" href="#L402">402</a>     @Test(expected = NumberIsTooSmallException.<strong class="jxr_keyword">class</strong>)
<a class="jxr_linenumber" name="L403" href="#L403">403</a>     <strong class="jxr_keyword">public</strong> <strong class="jxr_keyword">void</strong> testInvGamma1pm1Precondition1() {
<a class="jxr_linenumber" name="L404" href="#L404">404</a> 
<a class="jxr_linenumber" name="L405" href="#L405">405</a>         Gamma.invGamma1pm1(-0.51);
<a class="jxr_linenumber" name="L406" href="#L406">406</a>     }
<a class="jxr_linenumber" name="L407" href="#L407">407</a> 
<a class="jxr_linenumber" name="L408" href="#L408">408</a>     @Test(expected = NumberIsTooLargeException.<strong class="jxr_keyword">class</strong>)
<a class="jxr_linenumber" name="L409" href="#L409">409</a>     <strong class="jxr_keyword">public</strong> <strong class="jxr_keyword">void</strong> testInvGamma1pm1Precondition2() {
<a class="jxr_linenumber" name="L410" href="#L410">410</a> 
<a class="jxr_linenumber" name="L411" href="#L411">411</a>         Gamma.invGamma1pm1(1.51);
<a class="jxr_linenumber" name="L412" href="#L412">412</a>     }
<a class="jxr_linenumber" name="L413" href="#L413">413</a> 
<a class="jxr_linenumber" name="L414" href="#L414">414</a>     <strong class="jxr_keyword">private</strong> <strong class="jxr_keyword">static</strong> <strong class="jxr_keyword">final</strong> <strong class="jxr_keyword">double</strong>[][] LOG_GAMMA1P_REF = {
<a class="jxr_linenumber" name="L415" href="#L415">415</a>         { - 0.5 , .5723649429247001 },
<a class="jxr_linenumber" name="L416" href="#L416">416</a>         { - 0.375 , .3608294954889402 },
<a class="jxr_linenumber" name="L417" href="#L417">417</a>         { - 0.25 , .2032809514312954 },
<a class="jxr_linenumber" name="L418" href="#L418">418</a>         { - 0.125 , .08585870722533433 },
<a class="jxr_linenumber" name="L419" href="#L419">419</a>         { 0.0 , 0.0 },
<a class="jxr_linenumber" name="L420" href="#L420">420</a>         { 0.125 , - .06002318412603958 },
<a class="jxr_linenumber" name="L421" href="#L421">421</a>         { 0.25 , - .09827183642181316 },
<a class="jxr_linenumber" name="L422" href="#L422">422</a>         { 0.375 , - .1177552707410788 },
<a class="jxr_linenumber" name="L423" href="#L423">423</a>         { 0.5 , - .1207822376352452 },
<a class="jxr_linenumber" name="L424" href="#L424">424</a>         { 0.625 , - .1091741337567954 },
<a class="jxr_linenumber" name="L425" href="#L425">425</a>         { 0.75 , - .08440112102048555 },
<a class="jxr_linenumber" name="L426" href="#L426">426</a>         { 0.875 , - 0.0476726853991883 },
<a class="jxr_linenumber" name="L427" href="#L427">427</a>         { 1.0 , 0.0 },
<a class="jxr_linenumber" name="L428" href="#L428">428</a>         { 1.125 , .05775985153034387 },
<a class="jxr_linenumber" name="L429" href="#L429">429</a>         { 1.25 , .1248717148923966 },
<a class="jxr_linenumber" name="L430" href="#L430">430</a>         { 1.375 , .2006984603774558 },
<a class="jxr_linenumber" name="L431" href="#L431">431</a>         { 1.5 , .2846828704729192 },
<a class="jxr_linenumber" name="L432" href="#L432">432</a>     };
<a class="jxr_linenumber" name="L433" href="#L433">433</a> 
<a class="jxr_linenumber" name="L434" href="#L434">434</a>     @Test
<a class="jxr_linenumber" name="L435" href="#L435">435</a>     <strong class="jxr_keyword">public</strong> <strong class="jxr_keyword">void</strong> testLogGamma1p() {
<a class="jxr_linenumber" name="L436" href="#L436">436</a> 
<a class="jxr_linenumber" name="L437" href="#L437">437</a>         <strong class="jxr_keyword">final</strong> <strong class="jxr_keyword">int</strong> ulps = 3;
<a class="jxr_linenumber" name="L438" href="#L438">438</a>         <strong class="jxr_keyword">for</strong> (<strong class="jxr_keyword">int</strong> i = 0; i &lt; LOG_GAMMA1P_REF.length; i++) {
<a class="jxr_linenumber" name="L439" href="#L439">439</a>             <strong class="jxr_keyword">final</strong> <strong class="jxr_keyword">double</strong>[] ref = LOG_GAMMA1P_REF[i];
<a class="jxr_linenumber" name="L440" href="#L440">440</a>             <strong class="jxr_keyword">final</strong> <strong class="jxr_keyword">double</strong> x = ref[0];
<a class="jxr_linenumber" name="L441" href="#L441">441</a>             <strong class="jxr_keyword">final</strong> <strong class="jxr_keyword">double</strong> expected = ref[1];
<a class="jxr_linenumber" name="L442" href="#L442">442</a>             <strong class="jxr_keyword">final</strong> <strong class="jxr_keyword">double</strong> actual = Gamma.logGamma1p(x);
<a class="jxr_linenumber" name="L443" href="#L443">443</a>             <strong class="jxr_keyword">final</strong> <strong class="jxr_keyword">double</strong> tol = ulps * FastMath.ulp(expected);
<a class="jxr_linenumber" name="L444" href="#L444">444</a>             Assert.assertEquals(Double.toString(x), expected, actual, tol);
<a class="jxr_linenumber" name="L445" href="#L445">445</a>         }
<a class="jxr_linenumber" name="L446" href="#L446">446</a>     }
<a class="jxr_linenumber" name="L447" href="#L447">447</a> 
<a class="jxr_linenumber" name="L448" href="#L448">448</a>     @Test(expected = NumberIsTooSmallException.<strong class="jxr_keyword">class</strong>)
<a class="jxr_linenumber" name="L449" href="#L449">449</a>     <strong class="jxr_keyword">public</strong> <strong class="jxr_keyword">void</strong> testLogGamma1pPrecondition1() {
<a class="jxr_linenumber" name="L450" href="#L450">450</a> 
<a class="jxr_linenumber" name="L451" href="#L451">451</a>         Gamma.logGamma1p(-0.51);
<a class="jxr_linenumber" name="L452" href="#L452">452</a>     }
<a class="jxr_linenumber" name="L453" href="#L453">453</a> 
<a class="jxr_linenumber" name="L454" href="#L454">454</a>     @Test(expected = NumberIsTooLargeException.<strong class="jxr_keyword">class</strong>)
<a class="jxr_linenumber" name="L455" href="#L455">455</a>     <strong class="jxr_keyword">public</strong> <strong class="jxr_keyword">void</strong> testLogGamma1pPrecondition2() {
<a class="jxr_linenumber" name="L456" href="#L456">456</a> 
<a class="jxr_linenumber" name="L457" href="#L457">457</a>         Gamma.logGamma1p(1.51);
<a class="jxr_linenumber" name="L458" href="#L458">458</a>     }
<a class="jxr_linenumber" name="L459" href="#L459">459</a> 
<a class="jxr_linenumber" name="L460" href="#L460">460</a>     <em class="jxr_javadoccomment">/**</em>
<a class="jxr_linenumber" name="L461" href="#L461">461</a> <em class="jxr_javadoccomment">     * Reference data for the {@link Gamma#gamma(double)} function. This</em>
<a class="jxr_linenumber" name="L462" href="#L462">462</a> <em class="jxr_javadoccomment">     * data was generated with the following &lt;a</em>
<a class="jxr_linenumber" name="L463" href="#L463">463</a> <em class="jxr_javadoccomment">     * href="<a href="http://maxima.sourceforge.net/" target="alexandria_uri">http://maxima.sourceforge.net/</a>"&gt;Maxima&lt;/a&gt; script.</em>
<a class="jxr_linenumber" name="L464" href="#L464">464</a> <em class="jxr_javadoccomment">     *</em>
<a class="jxr_linenumber" name="L465" href="#L465">465</a> <em class="jxr_javadoccomment">     * &lt;pre&gt;</em>
<a class="jxr_linenumber" name="L466" href="#L466">466</a> <em class="jxr_javadoccomment">     * kill(all);</em>
<a class="jxr_linenumber" name="L467" href="#L467">467</a> <em class="jxr_javadoccomment">     *</em>
<a class="jxr_linenumber" name="L468" href="#L468">468</a> <em class="jxr_javadoccomment">     * fpprec : 64;</em>
<a class="jxr_linenumber" name="L469" href="#L469">469</a> <em class="jxr_javadoccomment">     *</em>
<a class="jxr_linenumber" name="L470" href="#L470">470</a> <em class="jxr_javadoccomment">     * EPSILON : 10**(-fpprec + 1);</em>
<a class="jxr_linenumber" name="L471" href="#L471">471</a> <em class="jxr_javadoccomment">     * isInteger(x) := abs(x - floor(x)) &lt;= EPSILON * abs(x);</em>
<a class="jxr_linenumber" name="L472" href="#L472">472</a> <em class="jxr_javadoccomment">     *</em>
<a class="jxr_linenumber" name="L473" href="#L473">473</a> <em class="jxr_javadoccomment">     * x : makelist(bfloat(i / 8), i, -160, 160);</em>
<a class="jxr_linenumber" name="L474" href="#L474">474</a> <em class="jxr_javadoccomment">     * x : append(x, makelist(bfloat(i / 2), i, 41, 200));</em>
<a class="jxr_linenumber" name="L475" href="#L475">475</a> <em class="jxr_javadoccomment">     *</em>
<a class="jxr_linenumber" name="L476" href="#L476">476</a> <em class="jxr_javadoccomment">     * for i : 1 while i &lt;= length(x) do if not(isInteger(x[i])) then</em>
<a class="jxr_linenumber" name="L477" href="#L477">477</a> <em class="jxr_javadoccomment">     *     print("{", float(x[i]), ",", float(gamma(x[i])), "},");</em>
<a class="jxr_linenumber" name="L478" href="#L478">478</a> <em class="jxr_javadoccomment">     * &lt;/pre&gt;</em>
<a class="jxr_linenumber" name="L479" href="#L479">479</a> <em class="jxr_javadoccomment">     */</em>
<a class="jxr_linenumber" name="L480" href="#L480">480</a>     <strong class="jxr_keyword">private</strong> <strong class="jxr_keyword">static</strong> <strong class="jxr_keyword">final</strong> <strong class="jxr_keyword">double</strong>[][] GAMMA_REF = {
<a class="jxr_linenumber" name="L481" href="#L481">481</a>         { - 19.875 , 4.920331854832504e-18 },
<a class="jxr_linenumber" name="L482" href="#L482">482</a>         { - 19.75 , 3.879938752480031e-18 },
<a class="jxr_linenumber" name="L483" href="#L483">483</a>         { - 19.625 , 4.323498423815027e-18 },
<a class="jxr_linenumber" name="L484" href="#L484">484</a>         { - 19.5 , 5.811045977502237e-18 },
<a class="jxr_linenumber" name="L485" href="#L485">485</a>         { - 19.375 , 9.14330910942125e-18 },
<a class="jxr_linenumber" name="L486" href="#L486">486</a>         { - 19.25 , 1.735229114436739e-17 },
<a class="jxr_linenumber" name="L487" href="#L487">487</a>         { - 19.125 , 4.653521565668223e-17 },
<a class="jxr_linenumber" name="L488" href="#L488">488</a>         { - 18.875 , - 9.779159561479603e-17 },
<a class="jxr_linenumber" name="L489" href="#L489">489</a>         { - 18.75 , - 7.662879036148061e-17 },
<a class="jxr_linenumber" name="L490" href="#L490">490</a>         { - 18.625 , - 8.484865656736991e-17 },
<a class="jxr_linenumber" name="L491" href="#L491">491</a>         { - 18.5 , - 1.133153965612936e-16 },
<a class="jxr_linenumber" name="L492" href="#L492">492</a>         { - 18.375 , - 1.771516139950367e-16 },
<a class="jxr_linenumber" name="L493" href="#L493">493</a>         { - 18.25 , - 3.340316045290721e-16 },
<a class="jxr_linenumber" name="L494" href="#L494">494</a>         { - 18.125 , - 8.899859994340475e-16 },
<a class="jxr_linenumber" name="L495" href="#L495">495</a>         { - 17.875 , 1.845816367229275e-15 },
<a class="jxr_linenumber" name="L496" href="#L496">496</a>         { - 17.75 , 1.436789819277761e-15 },
<a class="jxr_linenumber" name="L497" href="#L497">497</a>         { - 17.625 , 1.580306228567265e-15 },
<a class="jxr_linenumber" name="L498" href="#L498">498</a>         { - 17.5 , 2.096334836383932e-15 },
<a class="jxr_linenumber" name="L499" href="#L499">499</a>         { - 17.375 , 3.255160907158799e-15 },
<a class="jxr_linenumber" name="L500" href="#L500">500</a>         { - 17.25 , 6.096076782655566e-15 },
<a class="jxr_linenumber" name="L501" href="#L501">501</a>         { - 17.125 , 1.613099623974211e-14 },
<a class="jxr_linenumber" name="L502" href="#L502">502</a>         { - 16.875 , - 3.29939675642233e-14 },
<a class="jxr_linenumber" name="L503" href="#L503">503</a>         { - 16.75 , - 2.550301929218027e-14 },
<a class="jxr_linenumber" name="L504" href="#L504">504</a>         { - 16.625 , - 2.785289727849803e-14 },
<a class="jxr_linenumber" name="L505" href="#L505">505</a>         { - 16.5 , - 3.66858596367188e-14 },
<a class="jxr_linenumber" name="L506" href="#L506">506</a>         { - 16.375 , - 5.655842076188414e-14 },
<a class="jxr_linenumber" name="L507" href="#L507">507</a>         { - 16.25 , - 1.051573245008085e-13 },
<a class="jxr_linenumber" name="L508" href="#L508">508</a>         { - 16.125 , - 2.762433106055837e-13 },
<a class="jxr_linenumber" name="L509" href="#L509">509</a>         { - 15.875 , 5.567732026462681e-13 },
<a class="jxr_linenumber" name="L510" href="#L510">510</a>         { - 15.75 , 4.271755731440195e-13 },
<a class="jxr_linenumber" name="L511" href="#L511">511</a>         { - 15.625 , 4.630544172550298e-13 },
<a class="jxr_linenumber" name="L512" href="#L512">512</a>         { - 15.5 , 6.053166840058604e-13 },
<a class="jxr_linenumber" name="L513" href="#L513">513</a>         { - 15.375 , 9.261441399758529e-13 },
<a class="jxr_linenumber" name="L514" href="#L514">514</a>         { - 15.25 , 1.708806523138138e-12 },
<a class="jxr_linenumber" name="L515" href="#L515">515</a>         { - 15.125 , 4.454423383515037e-12 },
<a class="jxr_linenumber" name="L516" href="#L516">516</a>         { - 14.875 , - 8.838774592009505e-12 },
<a class="jxr_linenumber" name="L517" href="#L517">517</a>         { - 14.75 , - 6.728015277018307e-12 },
<a class="jxr_linenumber" name="L518" href="#L518">518</a>         { - 14.625 , - 7.235225269609841e-12 },
<a class="jxr_linenumber" name="L519" href="#L519">519</a>         { - 14.5 , - 9.382408602090835e-12 },
<a class="jxr_linenumber" name="L520" href="#L520">520</a>         { - 14.375 , - 1.423946615212874e-11 },
<a class="jxr_linenumber" name="L521" href="#L521">521</a>         { - 14.25 , - 2.605929947785661e-11 },
<a class="jxr_linenumber" name="L522" href="#L522">522</a>         { - 14.125 , - 6.737315367566492e-11 },
<a class="jxr_linenumber" name="L523" href="#L523">523</a>         { - 13.875 , 1.314767720561414e-10 },
<a class="jxr_linenumber" name="L524" href="#L524">524</a>         { - 13.75 , 9.923822533602004e-11 },
<a class="jxr_linenumber" name="L525" href="#L525">525</a>         { - 13.625 , 1.058151695680439e-10 },
<a class="jxr_linenumber" name="L526" href="#L526">526</a>         { - 13.5 , 1.360449247303171e-10 },
<a class="jxr_linenumber" name="L527" href="#L527">527</a>         { - 13.375 , 2.046923259368506e-10 },
<a class="jxr_linenumber" name="L528" href="#L528">528</a>         { - 13.25 , 3.713450175594567e-10 },
<a class="jxr_linenumber" name="L529" href="#L529">529</a>         { - 13.125 , 9.516457956687671e-10 },
<a class="jxr_linenumber" name="L530" href="#L530">530</a>         { - 12.875 , - 1.8242402122789617e-9 },
<a class="jxr_linenumber" name="L531" href="#L531">531</a>         { - 12.75 , - 1.3645255983702756e-9 },
<a class="jxr_linenumber" name="L532" href="#L532">532</a>         { - 12.625 , - 1.4417316853645984e-9 },
<a class="jxr_linenumber" name="L533" href="#L533">533</a>         { - 12.5 , - 1.836606483859281e-9 },
<a class="jxr_linenumber" name="L534" href="#L534">534</a>         { - 12.375 , - 2.7377598594053765e-9 },
<a class="jxr_linenumber" name="L535" href="#L535">535</a>         { - 12.25 , - 4.9203214826628017e-9 },
<a class="jxr_linenumber" name="L536" href="#L536">536</a>         { - 12.125 , - 1.2490351068152569e-8 },
<a class="jxr_linenumber" name="L537" href="#L537">537</a>         { - 11.875 , 2.3487092733091633e-8 },
<a class="jxr_linenumber" name="L538" href="#L538">538</a>         { - 11.75 , 1.7397701379221012e-8 },
<a class="jxr_linenumber" name="L539" href="#L539">539</a>         { - 11.625 , 1.8201862527728055e-8 },
<a class="jxr_linenumber" name="L540" href="#L540">540</a>         { - 11.5 , 2.295758104824101e-8 },
<a class="jxr_linenumber" name="L541" href="#L541">541</a>         { - 11.375 , 3.3879778260141535e-8 },
<a class="jxr_linenumber" name="L542" href="#L542">542</a>         { - 11.25 , 6.027393816261931e-8 },
<a class="jxr_linenumber" name="L543" href="#L543">543</a>         { - 11.125 , 1.5144550670134987e-7 },
<a class="jxr_linenumber" name="L544" href="#L544">544</a>         { - 10.875 , - 2.7890922620546316e-7 },
<a class="jxr_linenumber" name="L545" href="#L545">545</a>         { - 10.75 , - 2.044229912058469e-7 },
<a class="jxr_linenumber" name="L546" href="#L546">546</a>         { - 10.625 , - 2.1159665188483867e-7 },
<a class="jxr_linenumber" name="L547" href="#L547">547</a>         { - 10.5 , - 2.640121820547716e-7 },
<a class="jxr_linenumber" name="L548" href="#L548">548</a>         { - 10.375 , - 3.8538247770911e-7 },
<a class="jxr_linenumber" name="L549" href="#L549">549</a>         { - 10.25 , - 6.780818043294673e-7 },
<a class="jxr_linenumber" name="L550" href="#L550">550</a>         { - 10.125 , - 1.6848312620525174e-6 },
<a class="jxr_linenumber" name="L551" href="#L551">551</a>         { - 9.875 , 3.0331378349844124e-6 },
<a class="jxr_linenumber" name="L552" href="#L552">552</a>         { - 9.75 , 2.1975471554628537e-6 },
<a class="jxr_linenumber" name="L553" href="#L553">553</a>         { - 9.625 , 2.2482144262764103e-6 },
<a class="jxr_linenumber" name="L554" href="#L554">554</a>         { - 9.5 , 2.772127911575102e-6 },
<a class="jxr_linenumber" name="L555" href="#L555">555</a>         { - 9.375 , 3.998343206232017e-6 },
<a class="jxr_linenumber" name="L556" href="#L556">556</a>         { - 9.25 , 6.95033849437704e-6 },
<a class="jxr_linenumber" name="L557" href="#L557">557</a>         { - 9.125 , 1.7058916528281737e-5 },
<a class="jxr_linenumber" name="L558" href="#L558">558</a>         { - 8.875 , - 2.9952236120471065e-5 },
<a class="jxr_linenumber" name="L559" href="#L559">559</a>         { - 8.75 , - 2.1426084765762826e-5 },
<a class="jxr_linenumber" name="L560" href="#L560">560</a>         { - 8.625 , - 2.163906385291045e-5 },
<a class="jxr_linenumber" name="L561" href="#L561">561</a>         { - 8.5 , - 2.633521515996347e-5 },
<a class="jxr_linenumber" name="L562" href="#L562">562</a>         { - 8.375 , - 3.748446755842515e-5 },
<a class="jxr_linenumber" name="L563" href="#L563">563</a>         { - 8.25 , - 6.429063107298763e-5 },
<a class="jxr_linenumber" name="L564" href="#L564">564</a>         { - 8.125 , - 1.5566261332057085e-4 },
<a class="jxr_linenumber" name="L565" href="#L565">565</a>         { - 7.875 , 2.658260955691807e-4 },
<a class="jxr_linenumber" name="L566" href="#L566">566</a>         { - 7.75 , 1.874782417004247e-4 },
<a class="jxr_linenumber" name="L567" href="#L567">567</a>         { - 7.625 , 1.8663692573135265e-4 },
<a class="jxr_linenumber" name="L568" href="#L568">568</a>         { - 7.5 , 2.238493288596895e-4 },
<a class="jxr_linenumber" name="L569" href="#L569">569</a>         { - 7.375 , 3.1393241580181064e-4 },
<a class="jxr_linenumber" name="L570" href="#L570">570</a>         { - 7.25 , 5.303977063521479e-4 },
<a class="jxr_linenumber" name="L571" href="#L571">571</a>         { - 7.125 , .001264758733229638 },
<a class="jxr_linenumber" name="L572" href="#L572">572</a>         { - 6.875 , - .002093380502607298 },
<a class="jxr_linenumber" name="L573" href="#L573">573</a>         { - 6.75 , - .001452956373178292 },
<a class="jxr_linenumber" name="L574" href="#L574">574</a>         { - 6.625 , - .001423106558701564 },
<a class="jxr_linenumber" name="L575" href="#L575">575</a>         { - 6.5 , - .001678869966447671 },
<a class="jxr_linenumber" name="L576" href="#L576">576</a>         { - 6.375 , - .002315251566538353 },
<a class="jxr_linenumber" name="L577" href="#L577">577</a>         { - 6.25 , - .003845383371053072 },
<a class="jxr_linenumber" name="L578" href="#L578">578</a>         { - 6.125 , - .009011405974261174 },
<a class="jxr_linenumber" name="L579" href="#L579">579</a>         { - 5.875 , .01439199095542518 },
<a class="jxr_linenumber" name="L580" href="#L580">580</a>         { - 5.75 , .009807455518953468 },
<a class="jxr_linenumber" name="L581" href="#L581">581</a>         { - 5.625 , .009428080951397862 },
<a class="jxr_linenumber" name="L582" href="#L582">582</a>         { - 5.5 , .01091265478190986 },
<a class="jxr_linenumber" name="L583" href="#L583">583</a>         { - 5.375 , 0.014759728736682 },
<a class="jxr_linenumber" name="L584" href="#L584">584</a>         { - 5.25 , 0.0240336460690817 },
<a class="jxr_linenumber" name="L585" href="#L585">585</a>         { - 5.125 , .05519486159234969 },
<a class="jxr_linenumber" name="L586" href="#L586">586</a>         { - 4.875 , - 0.0845529468631229 },
<a class="jxr_linenumber" name="L587" href="#L587">587</a>         { - 4.75 , - .05639286923398244 },
<a class="jxr_linenumber" name="L588" href="#L588">588</a>         { - 4.625 , - .05303295535161297 },
<a class="jxr_linenumber" name="L589" href="#L589">589</a>         { - 4.5 , - .06001960130050425 },
<a class="jxr_linenumber" name="L590" href="#L590">590</a>         { - 4.375 , - .07933354195966577 },
<a class="jxr_linenumber" name="L591" href="#L591">591</a>         { - 4.25 , - .1261766418626789 },
<a class="jxr_linenumber" name="L592" href="#L592">592</a>         { - 4.125 , - .2828736656607921 },
<a class="jxr_linenumber" name="L593" href="#L593">593</a>         { - 3.875 , .4121956159577241 },
<a class="jxr_linenumber" name="L594" href="#L594">594</a>         { - 3.75 , .2678661288614166 },
<a class="jxr_linenumber" name="L595" href="#L595">595</a>         { - 3.625 , 0.24527741850121 },
<a class="jxr_linenumber" name="L596" href="#L596">596</a>         { - 3.5 , .2700882058522691 },
<a class="jxr_linenumber" name="L597" href="#L597">597</a>         { - 3.375 , .3470842460735378 },
<a class="jxr_linenumber" name="L598" href="#L598">598</a>         { - 3.25 , .5362507279163854 },
<a class="jxr_linenumber" name="L599" href="#L599">599</a>         { - 3.125 , 1.166853870850768 },
<a class="jxr_linenumber" name="L600" href="#L600">600</a>         { - 2.875 , - 1.597258011836181 },
<a class="jxr_linenumber" name="L601" href="#L601">601</a>         { - 2.75 , - 1.004497983230312 },
<a class="jxr_linenumber" name="L602" href="#L602">602</a>         { - 2.625 , - .8891306420668862 },
<a class="jxr_linenumber" name="L603" href="#L603">603</a>         { - 2.5 , - .9453087204829419 },
<a class="jxr_linenumber" name="L604" href="#L604">604</a>         { - 2.375 , - 1.17140933049819 },
<a class="jxr_linenumber" name="L605" href="#L605">605</a>         { - 2.25 , - 1.742814865728253 },
<a class="jxr_linenumber" name="L606" href="#L606">606</a>         { - 2.125 , - 3.646418346408649 },
<a class="jxr_linenumber" name="L607" href="#L607">607</a>         { - 1.875 , 4.59211678402902 },
<a class="jxr_linenumber" name="L608" href="#L608">608</a>         { - 1.75 , 2.762369453883359 },
<a class="jxr_linenumber" name="L609" href="#L609">609</a>         { - 1.625 , 2.333967935425576 },
<a class="jxr_linenumber" name="L610" href="#L610">610</a>         { - 1.5 , 2.363271801207355 },
<a class="jxr_linenumber" name="L611" href="#L611">611</a>         { - 1.375 , 2.782097159933201 },
<a class="jxr_linenumber" name="L612" href="#L612">612</a>         { - 1.25 , 3.921333447888569 },
<a class="jxr_linenumber" name="L613" href="#L613">613</a>         { - 1.125 , 7.748638986118379 },
<a class="jxr_linenumber" name="L614" href="#L614">614</a>         { - 0.875 , - 8.610218970054413 },
<a class="jxr_linenumber" name="L615" href="#L615">615</a>         { - 0.75 , - 4.834146544295877 },
<a class="jxr_linenumber" name="L616" href="#L616">616</a>         { - 0.625 , - 3.792697895066561 },
<a class="jxr_linenumber" name="L617" href="#L617">617</a>         { - 0.5 , - 3.544907701811032 },
<a class="jxr_linenumber" name="L618" href="#L618">618</a>         { - 0.375 , - 3.825383594908152 },
<a class="jxr_linenumber" name="L619" href="#L619">619</a>         { - 0.25 , - 4.901666809860711 },
<a class="jxr_linenumber" name="L620" href="#L620">620</a>         { - 0.125 , - 8.717218859383175 },
<a class="jxr_linenumber" name="L621" href="#L621">621</a>         { 0.125 , 7.533941598797612 },
<a class="jxr_linenumber" name="L622" href="#L622">622</a>         { 0.25 , 3.625609908221908 },
<a class="jxr_linenumber" name="L623" href="#L623">623</a>         { 0.375 , 2.370436184416601 },
<a class="jxr_linenumber" name="L624" href="#L624">624</a>         { 0.5 , 1.772453850905516 },
<a class="jxr_linenumber" name="L625" href="#L625">625</a>         { 0.625 , 1.434518848090557 },
<a class="jxr_linenumber" name="L626" href="#L626">626</a>         { 0.75 , 1.225416702465178 },
<a class="jxr_linenumber" name="L627" href="#L627">627</a>         { 0.875 , 1.089652357422897 },
<a class="jxr_linenumber" name="L628" href="#L628">628</a>         { 1.0 , 1.0 },
<a class="jxr_linenumber" name="L629" href="#L629">629</a>         { 1.125 , .9417426998497015 },
<a class="jxr_linenumber" name="L630" href="#L630">630</a>         { 1.25 , 0.906402477055477 },
<a class="jxr_linenumber" name="L631" href="#L631">631</a>         { 1.375 , .8889135691562253 },
<a class="jxr_linenumber" name="L632" href="#L632">632</a>         { 1.5 , 0.886226925452758 },
<a class="jxr_linenumber" name="L633" href="#L633">633</a>         { 1.625 , 0.896574280056598 },
<a class="jxr_linenumber" name="L634" href="#L634">634</a>         { 1.75 , .9190625268488832 },
<a class="jxr_linenumber" name="L635" href="#L635">635</a>         { 1.875 , .9534458127450348 },
<a class="jxr_linenumber" name="L636" href="#L636">636</a>         { 2.0 , 1.0 },
<a class="jxr_linenumber" name="L637" href="#L637">637</a>         { 2.125 , 1.059460537330914 },
<a class="jxr_linenumber" name="L638" href="#L638">638</a>         { 2.25 , 1.133003096319346 },
<a class="jxr_linenumber" name="L639" href="#L639">639</a>         { 2.375 , 1.22225615758981 },
<a class="jxr_linenumber" name="L640" href="#L640">640</a>         { 2.5 , 1.329340388179137 },
<a class="jxr_linenumber" name="L641" href="#L641">641</a>         { 2.625 , 1.456933205091972 },
<a class="jxr_linenumber" name="L642" href="#L642">642</a>         { 2.75 , 1.608359421985546 },
<a class="jxr_linenumber" name="L643" href="#L643">643</a>         { 2.875 , 1.78771089889694 },
<a class="jxr_linenumber" name="L644" href="#L644">644</a>         { 3.0 , 2.0 },
<a class="jxr_linenumber" name="L645" href="#L645">645</a>         { 3.125 , 2.251353641828193 },
<a class="jxr_linenumber" name="L646" href="#L646">646</a>         { 3.25 , 2.549256966718529 },
<a class="jxr_linenumber" name="L647" href="#L647">647</a>         { 3.375 , 2.902858374275799 },
<a class="jxr_linenumber" name="L648" href="#L648">648</a>         { 3.5 , 3.323350970447843 },
<a class="jxr_linenumber" name="L649" href="#L649">649</a>         { 3.625 , 3.824449663366426 },
<a class="jxr_linenumber" name="L650" href="#L650">650</a>         { 3.75 , 4.422988410460251 },
<a class="jxr_linenumber" name="L651" href="#L651">651</a>         { 3.875 , 5.139668834328703 },
<a class="jxr_linenumber" name="L652" href="#L652">652</a>         { 4.0 , 6.0 },
<a class="jxr_linenumber" name="L653" href="#L653">653</a>         { 4.125 , 7.035480130713102 },
<a class="jxr_linenumber" name="L654" href="#L654">654</a>         { 4.25 , 8.28508514183522 },
<a class="jxr_linenumber" name="L655" href="#L655">655</a>         { 4.375 , 9.797147013180819 },
<a class="jxr_linenumber" name="L656" href="#L656">656</a>         { 4.5 , 11.63172839656745 },
<a class="jxr_linenumber" name="L657" href="#L657">657</a>         { 4.625 , 13.86363002970329 },
<a class="jxr_linenumber" name="L658" href="#L658">658</a>         { 4.75 , 16.58620653922594 },
<a class="jxr_linenumber" name="L659" href="#L659">659</a>         { 4.875 , 19.91621673302373 },
<a class="jxr_linenumber" name="L660" href="#L660">660</a>         { 5.0 , 24.0 },
<a class="jxr_linenumber" name="L661" href="#L661">661</a>         { 5.125 , 29.02135553919155 },
<a class="jxr_linenumber" name="L662" href="#L662">662</a>         { 5.25 , 35.21161185279968 },
<a class="jxr_linenumber" name="L663" href="#L663">663</a>         { 5.375 , 42.86251818266609 },
<a class="jxr_linenumber" name="L664" href="#L664">664</a>         { 5.5 , 52.34277778455352 },
<a class="jxr_linenumber" name="L665" href="#L665">665</a>         { 5.625 , 64.11928888737773 },
<a class="jxr_linenumber" name="L666" href="#L666">666</a>         { 5.75 , 78.78448106132322 },
<a class="jxr_linenumber" name="L667" href="#L667">667</a>         { 5.875 , 97.09155657349066 },
<a class="jxr_linenumber" name="L668" href="#L668">668</a>         { 6.0 , 120.0 },
<a class="jxr_linenumber" name="L669" href="#L669">669</a>         { 6.125 , 148.7344471383567 },
<a class="jxr_linenumber" name="L670" href="#L670">670</a>         { 6.25 , 184.8609622271983 },
<a class="jxr_linenumber" name="L671" href="#L671">671</a>         { 6.375 , 230.3860352318302 },
<a class="jxr_linenumber" name="L672" href="#L672">672</a>         { 6.5 , 287.8852778150443 },
<a class="jxr_linenumber" name="L673" href="#L673">673</a>         { 6.625 , 360.6709999914997 },
<a class="jxr_linenumber" name="L674" href="#L674">674</a>         { 6.75 , 453.0107661026085 },
<a class="jxr_linenumber" name="L675" href="#L675">675</a>         { 6.875 , 570.4128948692577 },
<a class="jxr_linenumber" name="L676" href="#L676">676</a>         { 7.0 , 720.0 },
<a class="jxr_linenumber" name="L677" href="#L677">677</a>         { 7.125 , 910.9984887224346 },
<a class="jxr_linenumber" name="L678" href="#L678">678</a>         { 7.25 , 1155.38101391999 },
<a class="jxr_linenumber" name="L679" href="#L679">679</a>         { 7.375 , 1468.710974602918 },
<a class="jxr_linenumber" name="L680" href="#L680">680</a>         { 7.5 , 1871.254305797788 },
<a class="jxr_linenumber" name="L681" href="#L681">681</a>         { 7.625 , 2389.445374943686 },
<a class="jxr_linenumber" name="L682" href="#L682">682</a>         { 7.75 , 3057.822671192607 },
<a class="jxr_linenumber" name="L683" href="#L683">683</a>         { 7.875 , 3921.588652226146 },
<a class="jxr_linenumber" name="L684" href="#L684">684</a>         { 8.0 , 5040.0 },
<a class="jxr_linenumber" name="L685" href="#L685">685</a>         { 8.125 , 6490.864232147346 },
<a class="jxr_linenumber" name="L686" href="#L686">686</a>         { 8.25 , 8376.512350919926 },
<a class="jxr_linenumber" name="L687" href="#L687">687</a>         { 8.375 , 10831.74343769652 },
<a class="jxr_linenumber" name="L688" href="#L688">688</a>         { 8.5 , 14034.40729348341 },
<a class="jxr_linenumber" name="L689" href="#L689">689</a>         { 8.625 , 18219.5209839456 },
<a class="jxr_linenumber" name="L690" href="#L690">690</a>         { 8.75 , 23698.12570174271 },
<a class="jxr_linenumber" name="L691" href="#L691">691</a>         { 8.875 , 30882.5106362809 },
<a class="jxr_linenumber" name="L692" href="#L692">692</a>         { 9.0 , 40320.0 },
<a class="jxr_linenumber" name="L693" href="#L693">693</a>         { 9.125 , 52738.27188619719 },
<a class="jxr_linenumber" name="L694" href="#L694">694</a>         { 9.25 , 69106.22689508938 },
<a class="jxr_linenumber" name="L695" href="#L695">695</a>         { 9.375 , 90715.85129070834 },
<a class="jxr_linenumber" name="L696" href="#L696">696</a>         { 9.5 , 119292.461994609 },
<a class="jxr_linenumber" name="L697" href="#L697">697</a>         { 9.625 , 157143.3684865308 },
<a class="jxr_linenumber" name="L698" href="#L698">698</a>         { 9.75 , 207358.5998902487 },
<a class="jxr_linenumber" name="L699" href="#L699">699</a>         { 9.875 , 274082.281896993 },
<a class="jxr_linenumber" name="L700" href="#L700">700</a>         { 10.0 , 362880.0 },
<a class="jxr_linenumber" name="L701" href="#L701">701</a>         { 10.125 , 481236.7309615494 },
<a class="jxr_linenumber" name="L702" href="#L702">702</a>         { 10.25 , 639232.5987795768 },
<a class="jxr_linenumber" name="L703" href="#L703">703</a>         { 10.375 , 850461.1058503906 },
<a class="jxr_linenumber" name="L704" href="#L704">704</a>         { 10.5 , 1133278.388948786 },
<a class="jxr_linenumber" name="L705" href="#L705">705</a>         { 10.625 , 1512504.921682859 },
<a class="jxr_linenumber" name="L706" href="#L706">706</a>         { 10.75 , 2021746.348929925 },
<a class="jxr_linenumber" name="L707" href="#L707">707</a>         { 10.875 , 2706562.533732806 },
<a class="jxr_linenumber" name="L708" href="#L708">708</a>         { 11.0 , 3628800.0 },
<a class="jxr_linenumber" name="L709" href="#L709">709</a>         { 11.125 , 4872521.900985687 },
<a class="jxr_linenumber" name="L710" href="#L710">710</a>         { 11.25 , 6552134.137490662 },
<a class="jxr_linenumber" name="L711" href="#L711">711</a>         { 11.375 , 8823533.973197803 },
<a class="jxr_linenumber" name="L712" href="#L712">712</a>         { 11.5 , 1.1899423083962249e+7 },
<a class="jxr_linenumber" name="L713" href="#L713">713</a>         { 11.625 , 1.6070364792880382e+7 },
<a class="jxr_linenumber" name="L714" href="#L714">714</a>         { 11.75 , 2.1733773250996688e+7 },
<a class="jxr_linenumber" name="L715" href="#L715">715</a>         { 11.875 , 2.943386755434427e+7 },
<a class="jxr_linenumber" name="L716" href="#L716">716</a>         { 12.0 , 3.99168e+7 },
<a class="jxr_linenumber" name="L717" href="#L717">717</a>         { 12.125 , 5.420680614846578e+7 },
<a class="jxr_linenumber" name="L718" href="#L718">718</a>         { 12.25 , 7.371150904676994e+7 },
<a class="jxr_linenumber" name="L719" href="#L719">719</a>         { 12.375 , 1.0036769894512501e+8 },
<a class="jxr_linenumber" name="L720" href="#L720">720</a>         { 12.5 , 1.3684336546556586e+8 },
<a class="jxr_linenumber" name="L721" href="#L721">721</a>         { 12.625 , 1.8681799071723443e+8 },
<a class="jxr_linenumber" name="L722" href="#L722">722</a>         { 12.75 , 2.5537183569921107e+8 },
<a class="jxr_linenumber" name="L723" href="#L723">723</a>         { 12.875 , 3.4952717720783816e+8 },
<a class="jxr_linenumber" name="L724" href="#L724">724</a>         { 13.0 , 4.790016e+8 },
<a class="jxr_linenumber" name="L725" href="#L725">725</a>         { 13.125 , 6.572575245501475e+8 },
<a class="jxr_linenumber" name="L726" href="#L726">726</a>         { 13.25 , 9.029659858229319e+8 },
<a class="jxr_linenumber" name="L727" href="#L727">727</a>         { 13.375 , 1.2420502744459219e+9 },
<a class="jxr_linenumber" name="L728" href="#L728">728</a>         { 13.5 , 1.7105420683195732e+9 },
<a class="jxr_linenumber" name="L729" href="#L729">729</a>         { 13.625 , 2.3585771328050845e+9 },
<a class="jxr_linenumber" name="L730" href="#L730">730</a>         { 13.75 , 3.2559909051649416e+9 },
<a class="jxr_linenumber" name="L731" href="#L731">731</a>         { 13.875 , 4.500162406550916e+9 },
<a class="jxr_linenumber" name="L732" href="#L732">732</a>         { 14.0 , 6.2270208e+9 },
<a class="jxr_linenumber" name="L733" href="#L733">733</a>         { 14.125 , 8.626505009720685e+9 },
<a class="jxr_linenumber" name="L734" href="#L734">734</a>         { 14.25 , 1.196429931215385e+10 },
<a class="jxr_linenumber" name="L735" href="#L735">735</a>         { 14.375 , 1.66124224207142e+10 },
<a class="jxr_linenumber" name="L736" href="#L736">736</a>         { 14.5 , 2.309231792231424e+10 },
<a class="jxr_linenumber" name="L737" href="#L737">737</a>         { 14.625 , 3.213561343446927e+10 },
<a class="jxr_linenumber" name="L738" href="#L738">738</a>         { 14.75 , 4.476987494601794e+10 },
<a class="jxr_linenumber" name="L739" href="#L739">739</a>         { 14.875 , 6.243975339089396e+10 },
<a class="jxr_linenumber" name="L740" href="#L740">740</a>         { 15.0 , 8.71782912e+10 },
<a class="jxr_linenumber" name="L741" href="#L741">741</a>         { 15.125 , 1.218493832623047e+11 },
<a class="jxr_linenumber" name="L742" href="#L742">742</a>         { 15.25 , 1.704912651981923e+11 },
<a class="jxr_linenumber" name="L743" href="#L743">743</a>         { 15.375 , 2.388035722977667e+11 },
<a class="jxr_linenumber" name="L744" href="#L744">744</a>         { 15.5 , 3.348386098735565e+11 },
<a class="jxr_linenumber" name="L745" href="#L745">745</a>         { 15.625 , 4.699833464791132e+11 },
<a class="jxr_linenumber" name="L746" href="#L746">746</a>         { 15.75 , 6.603556554537646e+11 },
<a class="jxr_linenumber" name="L747" href="#L747">747</a>         { 15.875 , 9.287913316895475e+11 },
<a class="jxr_linenumber" name="L748" href="#L748">748</a>         { 16.0 , 1.307674368e+12 },
<a class="jxr_linenumber" name="L749" href="#L749">749</a>         { 16.125 , 1.842971921842358e+12 },
<a class="jxr_linenumber" name="L750" href="#L750">750</a>         { 16.25 , 2.599991794272433e+12 },
<a class="jxr_linenumber" name="L751" href="#L751">751</a>         { 16.375 , 3.671604924078163e+12 },
<a class="jxr_linenumber" name="L752" href="#L752">752</a>         { 16.5 , 5.189998453040126e+12 },
<a class="jxr_linenumber" name="L753" href="#L753">753</a>         { 16.625 , 7.343489788736144e+12 },
<a class="jxr_linenumber" name="L754" href="#L754">754</a>         { 16.75 , 1.040060157339679e+13 },
<a class="jxr_linenumber" name="L755" href="#L755">755</a>         { 16.875 , 1.474456239057157e+13 },
<a class="jxr_linenumber" name="L756" href="#L756">756</a>         { 17.0 , 2.0922789888e+13 },
<a class="jxr_linenumber" name="L757" href="#L757">757</a>         { 17.125 , 2.971792223970803e+13 },
<a class="jxr_linenumber" name="L758" href="#L758">758</a>         { 17.25 , 4.224986665692704e+13 },
<a class="jxr_linenumber" name="L759" href="#L759">759</a>         { 17.375 , 6.012253063177992e+13 },
<a class="jxr_linenumber" name="L760" href="#L760">760</a>         { 17.5 , 8.563497447516206e+13 },
<a class="jxr_linenumber" name="L761" href="#L761">761</a>         { 17.625 , 1.220855177377384e+14 },
<a class="jxr_linenumber" name="L762" href="#L762">762</a>         { 17.75 , 1.742100763543963e+14 },
<a class="jxr_linenumber" name="L763" href="#L763">763</a>         { 17.875 , 2.488144903408952e+14 },
<a class="jxr_linenumber" name="L764" href="#L764">764</a>         { 18.0 , 3.55687428096e+14 },
<a class="jxr_linenumber" name="L765" href="#L765">765</a>         { 18.125 , 5.08919418355e+14 },
<a class="jxr_linenumber" name="L766" href="#L766">766</a>         { 18.25 , 7.288101998319914e+14 },
<a class="jxr_linenumber" name="L767" href="#L767">767</a>         { 18.375 , 1.044628969727176e+15 },
<a class="jxr_linenumber" name="L768" href="#L768">768</a>         { 18.5 , 1.498612053315336e+15 },
<a class="jxr_linenumber" name="L769" href="#L769">769</a>         { 18.625 , 2.151757250127639e+15 },
<a class="jxr_linenumber" name="L770" href="#L770">770</a>         { 18.75 , 3.092228855290534e+15 },
<a class="jxr_linenumber" name="L771" href="#L771">771</a>         { 18.875 , 4.447559014843502e+15 },
<a class="jxr_linenumber" name="L772" href="#L772">772</a>         { 19.0 , 6.402373705728e+15 },
<a class="jxr_linenumber" name="L773" href="#L773">773</a>         { 19.125 , 9.224164457684374e+15 },
<a class="jxr_linenumber" name="L774" href="#L774">774</a>         { 19.25 , 1.330078614693384e+16 },
<a class="jxr_linenumber" name="L775" href="#L775">775</a>         { 19.375 , 1.919505731873686e+16 },
<a class="jxr_linenumber" name="L776" href="#L776">776</a>         { 19.5 , 2.772432298633372e+16 },
<a class="jxr_linenumber" name="L777" href="#L777">777</a>         { 19.625 , 4.007647878362728e+16 },
<a class="jxr_linenumber" name="L778" href="#L778">778</a>         { 19.75 , 5.797929103669752e+16 },
<a class="jxr_linenumber" name="L779" href="#L779">779</a>         { 19.875 , 8.39476764051711e+16 },
<a class="jxr_linenumber" name="L780" href="#L780">780</a>         { 20.0 , 1.21645100408832e+17 },
<a class="jxr_linenumber" name="L781" href="#L781">781</a>         { 20.5 , 5.406242982335075e+17 },
<a class="jxr_linenumber" name="L782" href="#L782">782</a>         { 21.0 , 2.43290200817664e+18 },
<a class="jxr_linenumber" name="L783" href="#L783">783</a>         { 21.5 , 1.10827981137869e+19 },
<a class="jxr_linenumber" name="L784" href="#L784">784</a>         { 22.0 , 5.109094217170944e+19 },
<a class="jxr_linenumber" name="L785" href="#L785">785</a>         { 22.5 , 2.382801594464184e+20 },
<a class="jxr_linenumber" name="L786" href="#L786">786</a>         { 23.0 , 1.124000727777608e+21 },
<a class="jxr_linenumber" name="L787" href="#L787">787</a>         { 23.5 , 5.361303587544415e+21 },
<a class="jxr_linenumber" name="L788" href="#L788">788</a>         { 24.0 , 2.585201673888498e+22 },
<a class="jxr_linenumber" name="L789" href="#L789">789</a>         { 24.5 , 1.259906343072938e+23 },
<a class="jxr_linenumber" name="L790" href="#L790">790</a>         { 25.0 , 6.204484017332395e+23 },
<a class="jxr_linenumber" name="L791" href="#L791">791</a>         { 25.5 , 3.086770540528697e+24 },
<a class="jxr_linenumber" name="L792" href="#L792">792</a>         { 26.0 , 1.551121004333099e+25 },
<a class="jxr_linenumber" name="L793" href="#L793">793</a>         { 26.5 , 7.871264878348176e+25 },
<a class="jxr_linenumber" name="L794" href="#L794">794</a>         { 27.0 , 4.032914611266056e+26 },
<a class="jxr_linenumber" name="L795" href="#L795">795</a>         { 27.5 , 2.085885192762267e+27 },
<a class="jxr_linenumber" name="L796" href="#L796">796</a>         { 28.0 , 1.088886945041835e+28 },
<a class="jxr_linenumber" name="L797" href="#L797">797</a>         { 28.5 , 5.736184280096234e+28 },
<a class="jxr_linenumber" name="L798" href="#L798">798</a>         { 29.0 , 3.048883446117139e+29 },
<a class="jxr_linenumber" name="L799" href="#L799">799</a>         { 29.5 , 1.634812519827427e+30 },
<a class="jxr_linenumber" name="L800" href="#L800">800</a>         { 30.0 , 8.841761993739702e+30 },
<a class="jxr_linenumber" name="L801" href="#L801">801</a>         { 30.5 , 4.822696933490909e+31 },
<a class="jxr_linenumber" name="L802" href="#L802">802</a>         { 31.0 , 2.65252859812191e+32 },
<a class="jxr_linenumber" name="L803" href="#L803">803</a>         { 31.5 , 1.470922564714727e+33 },
<a class="jxr_linenumber" name="L804" href="#L804">804</a>         { 32.0 , 8.222838654177922e+33 },
<a class="jxr_linenumber" name="L805" href="#L805">805</a>         { 32.5 , 4.633406078851391e+34 },
<a class="jxr_linenumber" name="L806" href="#L806">806</a>         { 33.0 , 2.631308369336935e+35 },
<a class="jxr_linenumber" name="L807" href="#L807">807</a>         { 33.5 , 1.505856975626702e+36 },
<a class="jxr_linenumber" name="L808" href="#L808">808</a>         { 34.0 , 8.683317618811885e+36 },
<a class="jxr_linenumber" name="L809" href="#L809">809</a>         { 34.5 , 5.044620868349451e+37 },
<a class="jxr_linenumber" name="L810" href="#L810">810</a>         { 35.0 , 2.952327990396041e+38 },
<a class="jxr_linenumber" name="L811" href="#L811">811</a>         { 35.5 , 1.740394199580561e+39 },
<a class="jxr_linenumber" name="L812" href="#L812">812</a>         { 36.0 , 1.033314796638614e+40 },
<a class="jxr_linenumber" name="L813" href="#L813">813</a>         { 36.5 , 6.178399408510991e+40 },
<a class="jxr_linenumber" name="L814" href="#L814">814</a>         { 37.0 , 3.719933267899013e+41 },
<a class="jxr_linenumber" name="L815" href="#L815">815</a>         { 37.5 , 2.255115784106512e+42 },
<a class="jxr_linenumber" name="L816" href="#L816">816</a>         { 38.0 , 1.376375309122634e+43 },
<a class="jxr_linenumber" name="L817" href="#L817">817</a>         { 38.5 , 8.456684190399419e+43 },
<a class="jxr_linenumber" name="L818" href="#L818">818</a>         { 39.0 , 5.230226174666011e+44 },
<a class="jxr_linenumber" name="L819" href="#L819">819</a>         { 39.5 , 3.255823413303776e+45 },
<a class="jxr_linenumber" name="L820" href="#L820">820</a>         { 40.0 , 2.039788208119745e+46 },
<a class="jxr_linenumber" name="L821" href="#L821">821</a>         { 40.5 , 1.286050248254992e+47 },
<a class="jxr_linenumber" name="L822" href="#L822">822</a>         { 41.0 , 8.159152832478976e+47 },
<a class="jxr_linenumber" name="L823" href="#L823">823</a>         { 41.5 , 5.208503505432716e+48 },
<a class="jxr_linenumber" name="L824" href="#L824">824</a>         { 42.0 , 3.345252661316381e+49 },
<a class="jxr_linenumber" name="L825" href="#L825">825</a>         { 42.5 , 2.161528954754577e+50 },
<a class="jxr_linenumber" name="L826" href="#L826">826</a>         { 43.0 , 1.40500611775288e+51 },
<a class="jxr_linenumber" name="L827" href="#L827">827</a>         { 43.5 , 9.186498057706953e+51 },
<a class="jxr_linenumber" name="L828" href="#L828">828</a>         { 44.0 , 6.041526306337383e+52 },
<a class="jxr_linenumber" name="L829" href="#L829">829</a>         { 44.5 , 3.996126655102524e+53 },
<a class="jxr_linenumber" name="L830" href="#L830">830</a>         { 45.0 , 2.658271574788449e+54 },
<a class="jxr_linenumber" name="L831" href="#L831">831</a>         { 45.5 , 1.778276361520623e+55 },
<a class="jxr_linenumber" name="L832" href="#L832">832</a>         { 46.0 , 1.196222208654802e+56 },
<a class="jxr_linenumber" name="L833" href="#L833">833</a>         { 46.5 , 8.091157444918836e+56 },
<a class="jxr_linenumber" name="L834" href="#L834">834</a>         { 47.0 , 5.502622159812088e+57 },
<a class="jxr_linenumber" name="L835" href="#L835">835</a>         { 47.5 , 3.762388211887259e+58 },
<a class="jxr_linenumber" name="L836" href="#L836">836</a>         { 48.0 , 2.586232415111682e+59 },
<a class="jxr_linenumber" name="L837" href="#L837">837</a>         { 48.5 , 1.787134400646448e+60 },
<a class="jxr_linenumber" name="L838" href="#L838">838</a>         { 49.0 , 1.241391559253607e+61 },
<a class="jxr_linenumber" name="L839" href="#L839">839</a>         { 49.5 , 8.667601843135273e+61 },
<a class="jxr_linenumber" name="L840" href="#L840">840</a>         { 50.0 , 6.082818640342675e+62 },
<a class="jxr_linenumber" name="L841" href="#L841">841</a>         { 50.5 , 4.290462912351959e+63 },
<a class="jxr_linenumber" name="L842" href="#L842">842</a>         { 51.0 , 3.041409320171338e+64 },
<a class="jxr_linenumber" name="L843" href="#L843">843</a>         { 51.5 , 2.16668377073774e+65 },
<a class="jxr_linenumber" name="L844" href="#L844">844</a>         { 52.0 , 1.551118753287382e+66 },
<a class="jxr_linenumber" name="L845" href="#L845">845</a>         { 52.5 , 1.115842141929936e+67 },
<a class="jxr_linenumber" name="L846" href="#L846">846</a>         { 53.0 , 8.065817517094388e+67 },
<a class="jxr_linenumber" name="L847" href="#L847">847</a>         { 53.5 , 5.858171245132164e+68 },
<a class="jxr_linenumber" name="L848" href="#L848">848</a>         { 54.0 , 4.274883284060025e+69 },
<a class="jxr_linenumber" name="L849" href="#L849">849</a>         { 54.5 , 3.134121616145708e+70 },
<a class="jxr_linenumber" name="L850" href="#L850">850</a>         { 55.0 , 2.308436973392413e+71 },
<a class="jxr_linenumber" name="L851" href="#L851">851</a>         { 55.5 , 1.70809628079941e+72 },
<a class="jxr_linenumber" name="L852" href="#L852">852</a>         { 56.0 , 1.269640335365828e+73 },
<a class="jxr_linenumber" name="L853" href="#L853">853</a>         { 56.5 , 9.479934358436728e+73 },
<a class="jxr_linenumber" name="L854" href="#L854">854</a>         { 57.0 , 7.109985878048635e+74 },
<a class="jxr_linenumber" name="L855" href="#L855">855</a>         { 57.5 , 5.356162912516752e+75 },
<a class="jxr_linenumber" name="L856" href="#L856">856</a>         { 58.0 , 4.052691950487721e+76 },
<a class="jxr_linenumber" name="L857" href="#L857">857</a>         { 58.5 , 3.079793674697132e+77 },
<a class="jxr_linenumber" name="L858" href="#L858">858</a>         { 59.0 , 2.350561331282878e+78 },
<a class="jxr_linenumber" name="L859" href="#L859">859</a>         { 59.5 , 1.801679299697822e+79 },
<a class="jxr_linenumber" name="L860" href="#L860">860</a>         { 60.0 , 1.386831185456898e+80 },
<a class="jxr_linenumber" name="L861" href="#L861">861</a>         { 60.5 , 1.071999183320204e+81 },
<a class="jxr_linenumber" name="L862" href="#L862">862</a>         { 61.0 , 8.320987112741391e+81 },
<a class="jxr_linenumber" name="L863" href="#L863">863</a>         { 61.5 , 6.485595059087236e+82 },
<a class="jxr_linenumber" name="L864" href="#L864">864</a>         { 62.0 , 5.075802138772249e+83 },
<a class="jxr_linenumber" name="L865" href="#L865">865</a>         { 62.5 , 3.98864096133865e+84 },
<a class="jxr_linenumber" name="L866" href="#L866">866</a>         { 63.0 , 3.146997326038794e+85 },
<a class="jxr_linenumber" name="L867" href="#L867">867</a>         { 63.5 , 2.492900600836656e+86 },
<a class="jxr_linenumber" name="L868" href="#L868">868</a>         { 64.0 , 1.98260831540444e+87 },
<a class="jxr_linenumber" name="L869" href="#L869">869</a>         { 64.5 , 1.582991881531277e+88 },
<a class="jxr_linenumber" name="L870" href="#L870">870</a>         { 65.0 , 1.268869321858841e+89 },
<a class="jxr_linenumber" name="L871" href="#L871">871</a>         { 65.5 , 1.021029763587673e+90 },
<a class="jxr_linenumber" name="L872" href="#L872">872</a>         { 66.0 , 8.247650592082472e+90 },
<a class="jxr_linenumber" name="L873" href="#L873">873</a>         { 66.5 , 6.687744951499262e+91 },
<a class="jxr_linenumber" name="L874" href="#L874">874</a>         { 67.0 , 5.443449390774431e+92 },
<a class="jxr_linenumber" name="L875" href="#L875">875</a>         { 67.5 , 4.447350392747009e+93 },
<a class="jxr_linenumber" name="L876" href="#L876">876</a>         { 68.0 , 3.647111091818868e+94 },
<a class="jxr_linenumber" name="L877" href="#L877">877</a>         { 68.5 , 3.001961515104231e+95 },
<a class="jxr_linenumber" name="L878" href="#L878">878</a>         { 69.0 , 2.48003554243683e+96 },
<a class="jxr_linenumber" name="L879" href="#L879">879</a>         { 69.5 , 2.056343637846398e+97 },
<a class="jxr_linenumber" name="L880" href="#L880">880</a>         { 70.0 , 1.711224524281413e+98 },
<a class="jxr_linenumber" name="L881" href="#L881">881</a>         { 70.5 , 1.429158828303247e+99 },
<a class="jxr_linenumber" name="L882" href="#L882">882</a>         { 71.0 , 1.19785716699699e+100 },
<a class="jxr_linenumber" name="L883" href="#L883">883</a>         { 71.5 , 1.00755697395379e+101 },
<a class="jxr_linenumber" name="L884" href="#L884">884</a>         { 72.0 , 8.50478588567862e+101 },
<a class="jxr_linenumber" name="L885" href="#L885">885</a>         { 72.5 , 7.20403236376959e+102 },
<a class="jxr_linenumber" name="L886" href="#L886">886</a>         { 73.0 , 6.12344583768861e+103 },
<a class="jxr_linenumber" name="L887" href="#L887">887</a>         { 73.5 , 5.22292346373295e+104 },
<a class="jxr_linenumber" name="L888" href="#L888">888</a>         { 74.0 , 4.47011546151268e+105 },
<a class="jxr_linenumber" name="L889" href="#L889">889</a>         { 74.5 , 3.83884874584372e+106 },
<a class="jxr_linenumber" name="L890" href="#L890">890</a>         { 75.0 , 3.30788544151939e+107 },
<a class="jxr_linenumber" name="L891" href="#L891">891</a>         { 75.5 , 2.85994231565357e+108 },
<a class="jxr_linenumber" name="L892" href="#L892">892</a>         { 76.0 , 2.48091408113954e+109 },
<a class="jxr_linenumber" name="L893" href="#L893">893</a>         { 76.5 , 2.15925644831845e+110 },
<a class="jxr_linenumber" name="L894" href="#L894">894</a>         { 77.0 , 1.88549470166605e+111 },
<a class="jxr_linenumber" name="L895" href="#L895">895</a>         { 77.5 , 1.65183118296361e+112 },
<a class="jxr_linenumber" name="L896" href="#L896">896</a>         { 78.0 , 1.45183092028286e+113 },
<a class="jxr_linenumber" name="L897" href="#L897">897</a>         { 78.5 , 1.2801691667968e+114 },
<a class="jxr_linenumber" name="L898" href="#L898">898</a>         { 79.0 , 1.13242811782063e+115 },
<a class="jxr_linenumber" name="L899" href="#L899">899</a>         { 79.5 , 1.00493279593549e+116 },
<a class="jxr_linenumber" name="L900" href="#L900">900</a>         { 80.0 , 8.94618213078298e+116 },
<a class="jxr_linenumber" name="L901" href="#L901">901</a>         { 80.5 , 7.98921572768712e+117 },
<a class="jxr_linenumber" name="L902" href="#L902">902</a>         { 81.0 , 7.15694570462638e+118 },
<a class="jxr_linenumber" name="L903" href="#L903">903</a>         { 81.5 , 6.43131866078814e+119 },
<a class="jxr_linenumber" name="L904" href="#L904">904</a>         { 82.0 , 5.79712602074737e+120 },
<a class="jxr_linenumber" name="L905" href="#L905">905</a>         { 82.5 , 5.24152470854233e+121 },
<a class="jxr_linenumber" name="L906" href="#L906">906</a>         { 83.0 , 4.75364333701284e+122 },
<a class="jxr_linenumber" name="L907" href="#L907">907</a>         { 83.5 , 4.32425788454742e+123 },
<a class="jxr_linenumber" name="L908" href="#L908">908</a>         { 84.0 , 3.94552396972066e+124 },
<a class="jxr_linenumber" name="L909" href="#L909">909</a>         { 84.5 , 3.6107553335971e+125 },
<a class="jxr_linenumber" name="L910" href="#L910">910</a>         { 85.0 , 3.31424013456535e+126 },
<a class="jxr_linenumber" name="L911" href="#L911">911</a>         { 85.5 , 3.05108825688955e+127 },
<a class="jxr_linenumber" name="L912" href="#L912">912</a>         { 86.0 , 2.81710411438055e+128 },
<a class="jxr_linenumber" name="L913" href="#L913">913</a>         { 86.5 , 2.60868045964056e+129 },
<a class="jxr_linenumber" name="L914" href="#L914">914</a>         { 87.0 , 2.42270953836727e+130 },
<a class="jxr_linenumber" name="L915" href="#L915">915</a>         { 87.5 , 2.25650859758909e+131 },
<a class="jxr_linenumber" name="L916" href="#L916">916</a>         { 88.0 , 2.10775729837953e+132 },
<a class="jxr_linenumber" name="L917" href="#L917">917</a>         { 88.5 , 1.97444502289045e+133 },
<a class="jxr_linenumber" name="L918" href="#L918">918</a>         { 89.0 , 1.85482642257398e+134 },
<a class="jxr_linenumber" name="L919" href="#L919">919</a>         { 89.5 , 1.74738384525805e+135 },
<a class="jxr_linenumber" name="L920" href="#L920">920</a>         { 90.0 , 1.65079551609085e+136 },
<a class="jxr_linenumber" name="L921" href="#L921">921</a>         { 90.5 , 1.56390854150595e+137 },
<a class="jxr_linenumber" name="L922" href="#L922">922</a>         { 91.0 , 1.48571596448176e+138 },
<a class="jxr_linenumber" name="L923" href="#L923">923</a>         { 91.5 , 1.41533723006289e+139 },
<a class="jxr_linenumber" name="L924" href="#L924">924</a>         { 92.0 , 1.3520015276784e+140 },
<a class="jxr_linenumber" name="L925" href="#L925">925</a>         { 92.5 , 1.29503356550754e+141 },
<a class="jxr_linenumber" name="L926" href="#L926">926</a>         { 93.0 , 1.24384140546413e+142 },
<a class="jxr_linenumber" name="L927" href="#L927">927</a>         { 93.5 , 1.19790604809448e+143 },
<a class="jxr_linenumber" name="L928" href="#L928">928</a>         { 94.0 , 1.15677250708164e+144 },
<a class="jxr_linenumber" name="L929" href="#L929">929</a>         { 94.5 , 1.12004215496834e+145 },
<a class="jxr_linenumber" name="L930" href="#L930">930</a>         { 95.0 , 1.08736615665674e+146 },
<a class="jxr_linenumber" name="L931" href="#L931">931</a>         { 95.5 , 1.05843983644508e+147 },
<a class="jxr_linenumber" name="L932" href="#L932">932</a>         { 96.0 , 1.03299784882391e+148 },
<a class="jxr_linenumber" name="L933" href="#L933">933</a>         { 96.5 , 1.01081004380505e+149 },
<a class="jxr_linenumber" name="L934" href="#L934">934</a>         { 97.0 , 9.9167793487095e+149 },
<a class="jxr_linenumber" name="L935" href="#L935">935</a>         { 97.5 , 9.75431692271873e+150 },
<a class="jxr_linenumber" name="L936" href="#L936">936</a>         { 98.0 , 9.61927596824821e+151 },
<a class="jxr_linenumber" name="L937" href="#L937">937</a>         { 98.5 , 9.51045899965076e+152 },
<a class="jxr_linenumber" name="L938" href="#L938">938</a>         { 99.0 , 9.42689044888325e+153 },
<a class="jxr_linenumber" name="L939" href="#L939">939</a>         { 99.5 , 9.367802114656e+154 },
<a class="jxr_linenumber" name="L940" href="#L940">940</a>         { 100.0 , 9.33262154439441e+155 },
<a class="jxr_linenumber" name="L941" href="#L941">941</a>     };
<a class="jxr_linenumber" name="L942" href="#L942">942</a> 
<a class="jxr_linenumber" name="L943" href="#L943">943</a>     @Test
<a class="jxr_linenumber" name="L944" href="#L944">944</a>     <strong class="jxr_keyword">public</strong> <strong class="jxr_keyword">void</strong> testGamma() {
<a class="jxr_linenumber" name="L945" href="#L945">945</a> 
<a class="jxr_linenumber" name="L946" href="#L946">946</a>         <strong class="jxr_keyword">for</strong> (<strong class="jxr_keyword">int</strong> i = 0; i &lt; GAMMA_REF.length; i++) {
<a class="jxr_linenumber" name="L947" href="#L947">947</a>             <strong class="jxr_keyword">final</strong> <strong class="jxr_keyword">double</strong>[] ref = GAMMA_REF[i];
<a class="jxr_linenumber" name="L948" href="#L948">948</a>             <strong class="jxr_keyword">final</strong> <strong class="jxr_keyword">double</strong> x = ref[0];
<a class="jxr_linenumber" name="L949" href="#L949">949</a>             <strong class="jxr_keyword">final</strong> <strong class="jxr_keyword">double</strong> expected = ref[1];
<a class="jxr_linenumber" name="L950" href="#L950">950</a>             <strong class="jxr_keyword">final</strong> <strong class="jxr_keyword">double</strong> actual = Gamma.gamma(x);
<a class="jxr_linenumber" name="L951" href="#L951">951</a>             <strong class="jxr_keyword">final</strong> <strong class="jxr_keyword">double</strong> absX = FastMath.abs(x);
<a class="jxr_linenumber" name="L952" href="#L952">952</a>             <strong class="jxr_keyword">final</strong> <strong class="jxr_keyword">int</strong> ulps;
<a class="jxr_linenumber" name="L953" href="#L953">953</a>             <strong class="jxr_keyword">if</strong> (absX &lt;= 8.0) {
<a class="jxr_linenumber" name="L954" href="#L954">954</a>                 ulps = 3;
<a class="jxr_linenumber" name="L955" href="#L955">955</a>             } <strong class="jxr_keyword">else</strong> <strong class="jxr_keyword">if</strong> (absX &lt;= 20.0) {
<a class="jxr_linenumber" name="L956" href="#L956">956</a>                 ulps = 5;
<a class="jxr_linenumber" name="L957" href="#L957">957</a>             } <strong class="jxr_keyword">else</strong> <strong class="jxr_keyword">if</strong> (absX &lt;= 30.0) {
<a class="jxr_linenumber" name="L958" href="#L958">958</a>                 ulps = 50;
<a class="jxr_linenumber" name="L959" href="#L959">959</a>             } <strong class="jxr_keyword">else</strong> <strong class="jxr_keyword">if</strong> (absX &lt;= 50.0) {
<a class="jxr_linenumber" name="L960" href="#L960">960</a>                 ulps = 180;
<a class="jxr_linenumber" name="L961" href="#L961">961</a>             } <strong class="jxr_keyword">else</strong> {
<a class="jxr_linenumber" name="L962" href="#L962">962</a>                 ulps = 500;
<a class="jxr_linenumber" name="L963" href="#L963">963</a>             }
<a class="jxr_linenumber" name="L964" href="#L964">964</a>             <strong class="jxr_keyword">final</strong> <strong class="jxr_keyword">double</strong> tol = ulps * FastMath.ulp(expected);
<a class="jxr_linenumber" name="L965" href="#L965">965</a>             Assert.assertEquals(Double.toString(x), expected, actual, tol);
<a class="jxr_linenumber" name="L966" href="#L966">966</a>         }
<a class="jxr_linenumber" name="L967" href="#L967">967</a>     }
<a class="jxr_linenumber" name="L968" href="#L968">968</a> 
<a class="jxr_linenumber" name="L969" href="#L969">969</a>     @Test
<a class="jxr_linenumber" name="L970" href="#L970">970</a>     <strong class="jxr_keyword">public</strong> <strong class="jxr_keyword">void</strong> testGammaNegativeInteger() {
<a class="jxr_linenumber" name="L971" href="#L971">971</a> 
<a class="jxr_linenumber" name="L972" href="#L972">972</a>         <strong class="jxr_keyword">for</strong> (<strong class="jxr_keyword">int</strong> i = -100; i &lt;= 0; i++) {
<a class="jxr_linenumber" name="L973" href="#L973">973</a>             Assert.assertTrue(Integer.toString(i), Double.isNaN(Gamma.gamma(i)));
<a class="jxr_linenumber" name="L974" href="#L974">974</a>         }
<a class="jxr_linenumber" name="L975" href="#L975">975</a>     }
<a class="jxr_linenumber" name="L976" href="#L976">976</a> 
<a class="jxr_linenumber" name="L977" href="#L977">977</a>     @Test
<a class="jxr_linenumber" name="L978" href="#L978">978</a>     <strong class="jxr_keyword">public</strong> <strong class="jxr_keyword">void</strong> testGammaNegativeDouble() {
<a class="jxr_linenumber" name="L979" href="#L979">979</a>         <em class="jxr_comment">// check that the gamma function properly switches sign</em>
<a class="jxr_linenumber" name="L980" href="#L980">980</a>         <em class="jxr_comment">// see: https://en.wikipedia.org/wiki/Gamma_function</em>
<a class="jxr_linenumber" name="L981" href="#L981">981</a> 
<a class="jxr_linenumber" name="L982" href="#L982">982</a>         <strong class="jxr_keyword">double</strong> previousGamma = Gamma.gamma(-18.5);
<a class="jxr_linenumber" name="L983" href="#L983">983</a>         <strong class="jxr_keyword">for</strong> (<strong class="jxr_keyword">double</strong> x = -19.5; x &gt; -25; x -= 1.0) {
<a class="jxr_linenumber" name="L984" href="#L984">984</a>             <strong class="jxr_keyword">double</strong> gamma = Gamma.gamma(x);
<a class="jxr_linenumber" name="L985" href="#L985">985</a>             Assert.assertEquals(  (<strong class="jxr_keyword">int</strong>) FastMath.signum(previousGamma),
<a class="jxr_linenumber" name="L986" href="#L986">986</a>                                 - (<strong class="jxr_keyword">int</strong>) FastMath.signum(gamma));
<a class="jxr_linenumber" name="L987" href="#L987">987</a> 
<a class="jxr_linenumber" name="L988" href="#L988">988</a>             previousGamma = gamma;
<a class="jxr_linenumber" name="L989" href="#L989">989</a>         }
<a class="jxr_linenumber" name="L990" href="#L990">990</a>     }
<a class="jxr_linenumber" name="L991" href="#L991">991</a> 
<a class="jxr_linenumber" name="L992" href="#L992">992</a>     <strong class="jxr_keyword">private</strong> <strong class="jxr_keyword">void</strong> checkRelativeError(String msg, <strong class="jxr_keyword">double</strong> expected, <strong class="jxr_keyword">double</strong> actual,
<a class="jxr_linenumber" name="L993" href="#L993">993</a>                                     <strong class="jxr_keyword">double</strong> tolerance) {
<a class="jxr_linenumber" name="L994" href="#L994">994</a> 
<a class="jxr_linenumber" name="L995" href="#L995">995</a>         Assert.assertEquals(msg, expected, actual, FastMath.abs(tolerance * actual));
<a class="jxr_linenumber" name="L996" href="#L996">996</a>     }
<a class="jxr_linenumber" name="L997" href="#L997">997</a> }
</pre>
<hr/>
<div id="footer">Copyright &#169; 2003&#x2013;2016 <a href="http://www.apache.org/">The Apache Software Foundation</a>. All rights reserved.</div>
</body>
</html>
