<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml" xml:lang="en" lang="en">
<head><meta http-equiv="content-type" content="text/html; charset=UTF-8" />
<title>MullerSolver2 xref</title>
<link type="text/css" rel="stylesheet" href="../../../../../../stylesheet.css" />
</head>
<body>
<div id="overview"><a href="../../../../../../../apidocs/org/apache/commons/math3/analysis/solvers/MullerSolver2.html">View Javadoc</a></div><pre>
<a class="jxr_linenumber" name="L1" href="#L1">1</a>   <em class="jxr_comment">/*</em>
<a class="jxr_linenumber" name="L2" href="#L2">2</a>   <em class="jxr_comment"> * Licensed to the Apache Software Foundation (ASF) under one or more</em>
<a class="jxr_linenumber" name="L3" href="#L3">3</a>   <em class="jxr_comment"> * contributor license agreements.  See the NOTICE file distributed with</em>
<a class="jxr_linenumber" name="L4" href="#L4">4</a>   <em class="jxr_comment"> * this work for additional information regarding copyright ownership.</em>
<a class="jxr_linenumber" name="L5" href="#L5">5</a>   <em class="jxr_comment"> * The ASF licenses this file to You under the Apache License, Version 2.0</em>
<a class="jxr_linenumber" name="L6" href="#L6">6</a>   <em class="jxr_comment"> * (the "License"); you may not use this file except in compliance with</em>
<a class="jxr_linenumber" name="L7" href="#L7">7</a>   <em class="jxr_comment"> * the License.  You may obtain a copy of the License at</em>
<a class="jxr_linenumber" name="L8" href="#L8">8</a>   <em class="jxr_comment"> *</em>
<a class="jxr_linenumber" name="L9" href="#L9">9</a>   <em class="jxr_comment"> *      <a href="http://www.apache.org/licenses/LICENSE-2." target="alexandria_uri">http://www.apache.org/licenses/LICENSE-2.</a>0</em>
<a class="jxr_linenumber" name="L10" href="#L10">10</a>  <em class="jxr_comment"> *</em>
<a class="jxr_linenumber" name="L11" href="#L11">11</a>  <em class="jxr_comment"> * Unless required by applicable law or agreed to in writing, software</em>
<a class="jxr_linenumber" name="L12" href="#L12">12</a>  <em class="jxr_comment"> * distributed under the License is distributed on an "AS IS" BASIS,</em>
<a class="jxr_linenumber" name="L13" href="#L13">13</a>  <em class="jxr_comment"> * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.</em>
<a class="jxr_linenumber" name="L14" href="#L14">14</a>  <em class="jxr_comment"> * See the License for the specific language governing permissions and</em>
<a class="jxr_linenumber" name="L15" href="#L15">15</a>  <em class="jxr_comment"> * limitations under the License.</em>
<a class="jxr_linenumber" name="L16" href="#L16">16</a>  <em class="jxr_comment"> */</em>
<a class="jxr_linenumber" name="L17" href="#L17">17</a>  <strong class="jxr_keyword">package</strong> org.apache.commons.math3.analysis.solvers;
<a class="jxr_linenumber" name="L18" href="#L18">18</a>  
<a class="jxr_linenumber" name="L19" href="#L19">19</a>  <strong class="jxr_keyword">import</strong> org.apache.commons.math3.exception.NoBracketingException;
<a class="jxr_linenumber" name="L20" href="#L20">20</a>  <strong class="jxr_keyword">import</strong> org.apache.commons.math3.exception.NumberIsTooLargeException;
<a class="jxr_linenumber" name="L21" href="#L21">21</a>  <strong class="jxr_keyword">import</strong> org.apache.commons.math3.exception.TooManyEvaluationsException;
<a class="jxr_linenumber" name="L22" href="#L22">22</a>  <strong class="jxr_keyword">import</strong> org.apache.commons.math3.util.FastMath;
<a class="jxr_linenumber" name="L23" href="#L23">23</a>  
<a class="jxr_linenumber" name="L24" href="#L24">24</a>  <em class="jxr_javadoccomment">/**</em>
<a class="jxr_linenumber" name="L25" href="#L25">25</a>  <em class="jxr_javadoccomment"> * This class implements the &lt;a href="<a href="http://mathworld.wolfram.com/MullersMethod.html" target="alexandria_uri">http://mathworld.wolfram.com/MullersMethod.html</a>"&gt;</em>
<a class="jxr_linenumber" name="L26" href="#L26">26</a>  <em class="jxr_javadoccomment"> * Muller's Method&lt;/a&gt; for root finding of real univariate functions. For</em>
<a class="jxr_linenumber" name="L27" href="#L27">27</a>  <em class="jxr_javadoccomment"> * reference, see &lt;b&gt;Elementary Numerical Analysis&lt;/b&gt;, ISBN 0070124477,</em>
<a class="jxr_linenumber" name="L28" href="#L28">28</a>  <em class="jxr_javadoccomment"> * chapter 3.</em>
<a class="jxr_linenumber" name="L29" href="#L29">29</a>  <em class="jxr_javadoccomment"> * &lt;p&gt;</em>
<a class="jxr_linenumber" name="L30" href="#L30">30</a>  <em class="jxr_javadoccomment"> * Muller's method applies to both real and complex functions, but here we</em>
<a class="jxr_linenumber" name="L31" href="#L31">31</a>  <em class="jxr_javadoccomment"> * restrict ourselves to real functions.</em>
<a class="jxr_linenumber" name="L32" href="#L32">32</a>  <em class="jxr_javadoccomment"> * This class differs from {@link MullerSolver} in the way it avoids complex</em>
<a class="jxr_linenumber" name="L33" href="#L33">33</a>  <em class="jxr_javadoccomment"> * operations.&lt;/p&gt;&lt;p&gt;</em>
<a class="jxr_linenumber" name="L34" href="#L34">34</a>  <em class="jxr_javadoccomment"> * Except for the initial [min, max], it does not require bracketing</em>
<a class="jxr_linenumber" name="L35" href="#L35">35</a>  <em class="jxr_javadoccomment"> * condition, e.g. f(x0), f(x1), f(x2) can have the same sign. If a complex</em>
<a class="jxr_linenumber" name="L36" href="#L36">36</a>  <em class="jxr_javadoccomment"> * number arises in the computation, we simply use its modulus as a real</em>
<a class="jxr_linenumber" name="L37" href="#L37">37</a>  <em class="jxr_javadoccomment"> * approximation.&lt;/p&gt;</em>
<a class="jxr_linenumber" name="L38" href="#L38">38</a>  <em class="jxr_javadoccomment"> * &lt;p&gt;</em>
<a class="jxr_linenumber" name="L39" href="#L39">39</a>  <em class="jxr_javadoccomment"> * Because the interval may not be bracketing, the bisection alternative is</em>
<a class="jxr_linenumber" name="L40" href="#L40">40</a>  <em class="jxr_javadoccomment"> * not applicable here. However in practice our treatment usually works</em>
<a class="jxr_linenumber" name="L41" href="#L41">41</a>  <em class="jxr_javadoccomment"> * well, especially near real zeroes where the imaginary part of the complex</em>
<a class="jxr_linenumber" name="L42" href="#L42">42</a>  <em class="jxr_javadoccomment"> * approximation is often negligible.&lt;/p&gt;</em>
<a class="jxr_linenumber" name="L43" href="#L43">43</a>  <em class="jxr_javadoccomment"> * &lt;p&gt;</em>
<a class="jxr_linenumber" name="L44" href="#L44">44</a>  <em class="jxr_javadoccomment"> * The formulas here do not use divided differences directly.&lt;/p&gt;</em>
<a class="jxr_linenumber" name="L45" href="#L45">45</a>  <em class="jxr_javadoccomment"> *</em>
<a class="jxr_linenumber" name="L46" href="#L46">46</a>  <em class="jxr_javadoccomment"> * @since 1.2</em>
<a class="jxr_linenumber" name="L47" href="#L47">47</a>  <em class="jxr_javadoccomment"> * @see MullerSolver</em>
<a class="jxr_linenumber" name="L48" href="#L48">48</a>  <em class="jxr_javadoccomment"> */</em>
<a class="jxr_linenumber" name="L49" href="#L49">49</a>  <strong class="jxr_keyword">public</strong> <strong class="jxr_keyword">class</strong> <a href="../../../../../../org/apache/commons/math3/analysis/solvers/MullerSolver2.html">MullerSolver2</a> <strong class="jxr_keyword">extends</strong> <a href="../../../../../../org/apache/commons/math3/analysis/solvers/AbstractUnivariateSolver.html">AbstractUnivariateSolver</a> {
<a class="jxr_linenumber" name="L50" href="#L50">50</a>  
<a class="jxr_linenumber" name="L51" href="#L51">51</a>      <em class="jxr_javadoccomment">/** Default absolute accuracy. */</em>
<a class="jxr_linenumber" name="L52" href="#L52">52</a>      <strong class="jxr_keyword">private</strong> <strong class="jxr_keyword">static</strong> <strong class="jxr_keyword">final</strong> <strong class="jxr_keyword">double</strong> DEFAULT_ABSOLUTE_ACCURACY = 1e-6;
<a class="jxr_linenumber" name="L53" href="#L53">53</a>  
<a class="jxr_linenumber" name="L54" href="#L54">54</a>      <em class="jxr_javadoccomment">/**</em>
<a class="jxr_linenumber" name="L55" href="#L55">55</a>  <em class="jxr_javadoccomment">     * Construct a solver with default accuracy (1e-6).</em>
<a class="jxr_linenumber" name="L56" href="#L56">56</a>  <em class="jxr_javadoccomment">     */</em>
<a class="jxr_linenumber" name="L57" href="#L57">57</a>      <strong class="jxr_keyword">public</strong> <a href="../../../../../../org/apache/commons/math3/analysis/solvers/MullerSolver2.html">MullerSolver2</a>() {
<a class="jxr_linenumber" name="L58" href="#L58">58</a>          <strong class="jxr_keyword">this</strong>(DEFAULT_ABSOLUTE_ACCURACY);
<a class="jxr_linenumber" name="L59" href="#L59">59</a>      }
<a class="jxr_linenumber" name="L60" href="#L60">60</a>      <em class="jxr_javadoccomment">/**</em>
<a class="jxr_linenumber" name="L61" href="#L61">61</a>  <em class="jxr_javadoccomment">     * Construct a solver.</em>
<a class="jxr_linenumber" name="L62" href="#L62">62</a>  <em class="jxr_javadoccomment">     *</em>
<a class="jxr_linenumber" name="L63" href="#L63">63</a>  <em class="jxr_javadoccomment">     * @param absoluteAccuracy Absolute accuracy.</em>
<a class="jxr_linenumber" name="L64" href="#L64">64</a>  <em class="jxr_javadoccomment">     */</em>
<a class="jxr_linenumber" name="L65" href="#L65">65</a>      <strong class="jxr_keyword">public</strong> <a href="../../../../../../org/apache/commons/math3/analysis/solvers/MullerSolver2.html">MullerSolver2</a>(<strong class="jxr_keyword">double</strong> absoluteAccuracy) {
<a class="jxr_linenumber" name="L66" href="#L66">66</a>          <strong class="jxr_keyword">super</strong>(absoluteAccuracy);
<a class="jxr_linenumber" name="L67" href="#L67">67</a>      }
<a class="jxr_linenumber" name="L68" href="#L68">68</a>      <em class="jxr_javadoccomment">/**</em>
<a class="jxr_linenumber" name="L69" href="#L69">69</a>  <em class="jxr_javadoccomment">     * Construct a solver.</em>
<a class="jxr_linenumber" name="L70" href="#L70">70</a>  <em class="jxr_javadoccomment">     *</em>
<a class="jxr_linenumber" name="L71" href="#L71">71</a>  <em class="jxr_javadoccomment">     * @param relativeAccuracy Relative accuracy.</em>
<a class="jxr_linenumber" name="L72" href="#L72">72</a>  <em class="jxr_javadoccomment">     * @param absoluteAccuracy Absolute accuracy.</em>
<a class="jxr_linenumber" name="L73" href="#L73">73</a>  <em class="jxr_javadoccomment">     */</em>
<a class="jxr_linenumber" name="L74" href="#L74">74</a>      <strong class="jxr_keyword">public</strong> <a href="../../../../../../org/apache/commons/math3/analysis/solvers/MullerSolver2.html">MullerSolver2</a>(<strong class="jxr_keyword">double</strong> relativeAccuracy,
<a class="jxr_linenumber" name="L75" href="#L75">75</a>                          <strong class="jxr_keyword">double</strong> absoluteAccuracy) {
<a class="jxr_linenumber" name="L76" href="#L76">76</a>          <strong class="jxr_keyword">super</strong>(relativeAccuracy, absoluteAccuracy);
<a class="jxr_linenumber" name="L77" href="#L77">77</a>      }
<a class="jxr_linenumber" name="L78" href="#L78">78</a>  
<a class="jxr_linenumber" name="L79" href="#L79">79</a>      <em class="jxr_javadoccomment">/**</em>
<a class="jxr_linenumber" name="L80" href="#L80">80</a>  <em class="jxr_javadoccomment">     * {@inheritDoc}</em>
<a class="jxr_linenumber" name="L81" href="#L81">81</a>  <em class="jxr_javadoccomment">     */</em>
<a class="jxr_linenumber" name="L82" href="#L82">82</a>      @Override
<a class="jxr_linenumber" name="L83" href="#L83">83</a>      <strong class="jxr_keyword">protected</strong> <strong class="jxr_keyword">double</strong> doSolve()
<a class="jxr_linenumber" name="L84" href="#L84">84</a>          <strong class="jxr_keyword">throws</strong> TooManyEvaluationsException,
<a class="jxr_linenumber" name="L85" href="#L85">85</a>                 NumberIsTooLargeException,
<a class="jxr_linenumber" name="L86" href="#L86">86</a>                 <a href="../../../../../../org/apache/commons/math3/exception/NoBracketingException.html">NoBracketingException</a> {
<a class="jxr_linenumber" name="L87" href="#L87">87</a>          <strong class="jxr_keyword">final</strong> <strong class="jxr_keyword">double</strong> min = getMin();
<a class="jxr_linenumber" name="L88" href="#L88">88</a>          <strong class="jxr_keyword">final</strong> <strong class="jxr_keyword">double</strong> max = getMax();
<a class="jxr_linenumber" name="L89" href="#L89">89</a>  
<a class="jxr_linenumber" name="L90" href="#L90">90</a>          verifyInterval(min, max);
<a class="jxr_linenumber" name="L91" href="#L91">91</a>  
<a class="jxr_linenumber" name="L92" href="#L92">92</a>          <strong class="jxr_keyword">final</strong> <strong class="jxr_keyword">double</strong> relativeAccuracy = getRelativeAccuracy();
<a class="jxr_linenumber" name="L93" href="#L93">93</a>          <strong class="jxr_keyword">final</strong> <strong class="jxr_keyword">double</strong> absoluteAccuracy = getAbsoluteAccuracy();
<a class="jxr_linenumber" name="L94" href="#L94">94</a>          <strong class="jxr_keyword">final</strong> <strong class="jxr_keyword">double</strong> functionValueAccuracy = getFunctionValueAccuracy();
<a class="jxr_linenumber" name="L95" href="#L95">95</a>  
<a class="jxr_linenumber" name="L96" href="#L96">96</a>          <em class="jxr_comment">// x2 is the last root approximation</em>
<a class="jxr_linenumber" name="L97" href="#L97">97</a>          <em class="jxr_comment">// x is the new approximation and new x2 for next round</em>
<a class="jxr_linenumber" name="L98" href="#L98">98</a>          <em class="jxr_comment">// x0 &lt; x1 &lt; x2 does not hold here</em>
<a class="jxr_linenumber" name="L99" href="#L99">99</a>  
<a class="jxr_linenumber" name="L100" href="#L100">100</a>         <strong class="jxr_keyword">double</strong> x0 = min;
<a class="jxr_linenumber" name="L101" href="#L101">101</a>         <strong class="jxr_keyword">double</strong> y0 = computeObjectiveValue(x0);
<a class="jxr_linenumber" name="L102" href="#L102">102</a>         <strong class="jxr_keyword">if</strong> (FastMath.abs(y0) &lt; functionValueAccuracy) {
<a class="jxr_linenumber" name="L103" href="#L103">103</a>             <strong class="jxr_keyword">return</strong> x0;
<a class="jxr_linenumber" name="L104" href="#L104">104</a>         }
<a class="jxr_linenumber" name="L105" href="#L105">105</a>         <strong class="jxr_keyword">double</strong> x1 = max;
<a class="jxr_linenumber" name="L106" href="#L106">106</a>         <strong class="jxr_keyword">double</strong> y1 = computeObjectiveValue(x1);
<a class="jxr_linenumber" name="L107" href="#L107">107</a>         <strong class="jxr_keyword">if</strong> (FastMath.abs(y1) &lt; functionValueAccuracy) {
<a class="jxr_linenumber" name="L108" href="#L108">108</a>             <strong class="jxr_keyword">return</strong> x1;
<a class="jxr_linenumber" name="L109" href="#L109">109</a>         }
<a class="jxr_linenumber" name="L110" href="#L110">110</a> 
<a class="jxr_linenumber" name="L111" href="#L111">111</a>         <strong class="jxr_keyword">if</strong>(y0 * y1 &gt; 0) {
<a class="jxr_linenumber" name="L112" href="#L112">112</a>             <strong class="jxr_keyword">throw</strong> <strong class="jxr_keyword">new</strong> <a href="../../../../../../org/apache/commons/math3/exception/NoBracketingException.html">NoBracketingException</a>(x0, x1, y0, y1);
<a class="jxr_linenumber" name="L113" href="#L113">113</a>         }
<a class="jxr_linenumber" name="L114" href="#L114">114</a> 
<a class="jxr_linenumber" name="L115" href="#L115">115</a>         <strong class="jxr_keyword">double</strong> x2 = 0.5 * (x0 + x1);
<a class="jxr_linenumber" name="L116" href="#L116">116</a>         <strong class="jxr_keyword">double</strong> y2 = computeObjectiveValue(x2);
<a class="jxr_linenumber" name="L117" href="#L117">117</a> 
<a class="jxr_linenumber" name="L118" href="#L118">118</a>         <strong class="jxr_keyword">double</strong> oldx = Double.POSITIVE_INFINITY;
<a class="jxr_linenumber" name="L119" href="#L119">119</a>         <strong class="jxr_keyword">while</strong> (<strong class="jxr_keyword">true</strong>) {
<a class="jxr_linenumber" name="L120" href="#L120">120</a>             <em class="jxr_comment">// quadratic interpolation through x0, x1, x2</em>
<a class="jxr_linenumber" name="L121" href="#L121">121</a>             <strong class="jxr_keyword">final</strong> <strong class="jxr_keyword">double</strong> q = (x2 - x1) / (x1 - x0);
<a class="jxr_linenumber" name="L122" href="#L122">122</a>             <strong class="jxr_keyword">final</strong> <strong class="jxr_keyword">double</strong> a = q * (y2 - (1 + q) * y1 + q * y0);
<a class="jxr_linenumber" name="L123" href="#L123">123</a>             <strong class="jxr_keyword">final</strong> <strong class="jxr_keyword">double</strong> b = (2 * q + 1) * y2 - (1 + q) * (1 + q) * y1 + q * q * y0;
<a class="jxr_linenumber" name="L124" href="#L124">124</a>             <strong class="jxr_keyword">final</strong> <strong class="jxr_keyword">double</strong> c = (1 + q) * y2;
<a class="jxr_linenumber" name="L125" href="#L125">125</a>             <strong class="jxr_keyword">final</strong> <strong class="jxr_keyword">double</strong> delta = b * b - 4 * a * c;
<a class="jxr_linenumber" name="L126" href="#L126">126</a>             <strong class="jxr_keyword">double</strong> x;
<a class="jxr_linenumber" name="L127" href="#L127">127</a>             <strong class="jxr_keyword">final</strong> <strong class="jxr_keyword">double</strong> denominator;
<a class="jxr_linenumber" name="L128" href="#L128">128</a>             <strong class="jxr_keyword">if</strong> (delta &gt;= 0.0) {
<a class="jxr_linenumber" name="L129" href="#L129">129</a>                 <em class="jxr_comment">// choose a denominator larger in magnitude</em>
<a class="jxr_linenumber" name="L130" href="#L130">130</a>                 <strong class="jxr_keyword">double</strong> dplus = b + FastMath.sqrt(delta);
<a class="jxr_linenumber" name="L131" href="#L131">131</a>                 <strong class="jxr_keyword">double</strong> dminus = b - FastMath.sqrt(delta);
<a class="jxr_linenumber" name="L132" href="#L132">132</a>                 denominator = FastMath.abs(dplus) &gt; FastMath.abs(dminus) ? dplus : dminus;
<a class="jxr_linenumber" name="L133" href="#L133">133</a>             } <strong class="jxr_keyword">else</strong> {
<a class="jxr_linenumber" name="L134" href="#L134">134</a>                 <em class="jxr_comment">// take the modulus of (B +/- FastMath.sqrt(delta))</em>
<a class="jxr_linenumber" name="L135" href="#L135">135</a>                 denominator = FastMath.sqrt(b * b - delta);
<a class="jxr_linenumber" name="L136" href="#L136">136</a>             }
<a class="jxr_linenumber" name="L137" href="#L137">137</a>             <strong class="jxr_keyword">if</strong> (denominator != 0) {
<a class="jxr_linenumber" name="L138" href="#L138">138</a>                 x = x2 - 2.0 * c * (x2 - x1) / denominator;
<a class="jxr_linenumber" name="L139" href="#L139">139</a>                 <em class="jxr_comment">// perturb x if it exactly coincides with x1 or x2</em>
<a class="jxr_linenumber" name="L140" href="#L140">140</a>                 <em class="jxr_comment">// the equality tests here are intentional</em>
<a class="jxr_linenumber" name="L141" href="#L141">141</a>                 <strong class="jxr_keyword">while</strong> (x == x1 || x == x2) {
<a class="jxr_linenumber" name="L142" href="#L142">142</a>                     x += absoluteAccuracy;
<a class="jxr_linenumber" name="L143" href="#L143">143</a>                 }
<a class="jxr_linenumber" name="L144" href="#L144">144</a>             } <strong class="jxr_keyword">else</strong> {
<a class="jxr_linenumber" name="L145" href="#L145">145</a>                 <em class="jxr_comment">// extremely rare case, get a random number to skip it</em>
<a class="jxr_linenumber" name="L146" href="#L146">146</a>                 x = min + FastMath.random() * (max - min);
<a class="jxr_linenumber" name="L147" href="#L147">147</a>                 oldx = Double.POSITIVE_INFINITY;
<a class="jxr_linenumber" name="L148" href="#L148">148</a>             }
<a class="jxr_linenumber" name="L149" href="#L149">149</a>             <strong class="jxr_keyword">final</strong> <strong class="jxr_keyword">double</strong> y = computeObjectiveValue(x);
<a class="jxr_linenumber" name="L150" href="#L150">150</a> 
<a class="jxr_linenumber" name="L151" href="#L151">151</a>             <em class="jxr_comment">// check for convergence</em>
<a class="jxr_linenumber" name="L152" href="#L152">152</a>             <strong class="jxr_keyword">final</strong> <strong class="jxr_keyword">double</strong> tolerance = FastMath.max(relativeAccuracy * FastMath.abs(x), absoluteAccuracy);
<a class="jxr_linenumber" name="L153" href="#L153">153</a>             <strong class="jxr_keyword">if</strong> (FastMath.abs(x - oldx) &lt;= tolerance ||
<a class="jxr_linenumber" name="L154" href="#L154">154</a>                 FastMath.abs(y) &lt;= functionValueAccuracy) {
<a class="jxr_linenumber" name="L155" href="#L155">155</a>                 <strong class="jxr_keyword">return</strong> x;
<a class="jxr_linenumber" name="L156" href="#L156">156</a>             }
<a class="jxr_linenumber" name="L157" href="#L157">157</a> 
<a class="jxr_linenumber" name="L158" href="#L158">158</a>             <em class="jxr_comment">// prepare the next iteration</em>
<a class="jxr_linenumber" name="L159" href="#L159">159</a>             x0 = x1;
<a class="jxr_linenumber" name="L160" href="#L160">160</a>             y0 = y1;
<a class="jxr_linenumber" name="L161" href="#L161">161</a>             x1 = x2;
<a class="jxr_linenumber" name="L162" href="#L162">162</a>             y1 = y2;
<a class="jxr_linenumber" name="L163" href="#L163">163</a>             x2 = x;
<a class="jxr_linenumber" name="L164" href="#L164">164</a>             y2 = y;
<a class="jxr_linenumber" name="L165" href="#L165">165</a>             oldx = x;
<a class="jxr_linenumber" name="L166" href="#L166">166</a>         }
<a class="jxr_linenumber" name="L167" href="#L167">167</a>     }
<a class="jxr_linenumber" name="L168" href="#L168">168</a> }
</pre>
<hr/>
<div id="footer">Copyright &#169; 2003&#x2013;2016 <a href="http://www.apache.org/">The Apache Software Foundation</a>. All rights reserved.</div>
</body>
</html>
